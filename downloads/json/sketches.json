[
  {
    "name": "arduino btn value to p5",
    "_id": "BSYny-hp2",
    "updatedAt": "2022-11-30T18:55:38.038Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6387a5c6e0e89b64b7666cbf",
          "6387a5c6e0e89b64b7666cbe",
          "6387a5c6e0e89b64b7666cc0"
        ],
        "fileType": "folder",
        "_id": "6387a5c6e0e89b64b7666cc1",
        "isSelectedFile": false,
        "createdAt": "2022-11-30T18:55:38.038Z",
        "updatedAt": "2022-11-30T18:55:38.038Z",
        "id": "6387a5c6e0e89b64b7666cc1"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial communitaion with Arduino \nby Yeseul for Physical Computing, 2022\n\nThis is a boiler plate for using webserial.\nDuplicat this sketch and start adding your code to \"CUSTOMIZE\" part \nto make your serial communication project to use with your Arduino sketch.\n\n\nThe serial communication part is based on \nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// port chooser button:\nlet portButton;\nlet sensor1 = 0\nlet sensor2 = 0\n\n// CUSTOMIZE: change/add variable for incoming serial data:\nlet inData;\n\nfunction setup() {\n   // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    alert(\"WebSerial is supported. Enjoy!\");\n  }\n  // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton)\n \n  // add serial connect/disconnect listeners from WebSerial API:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  createCanvas(400, 300);\n}\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton('choose port');\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  let options = { baudrate: 9600}; \n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\nfunction serialEvent() {\n  \n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n  let stringFromSerial = serial.readLine()\n  if (stringFromSerial != null) {\n    let value_array = stringFromSerial.trim().split(',')\n    //console.log(value_array)\n    sensor1 = int(value_array[0])\n    //sensor2 = int(value_array[1])\n  }\n  \n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}\n\n\nfunction draw() {\n  background(220);\n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n  //ellipse(sensor1, sensor2, 5)\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6387a5c6e0e89b64b7666cbe",
        "isSelectedFile": true,
        "createdAt": "2022-11-30T18:55:38.038Z",
        "updatedAt": "2022-11-30T18:55:38.038Z",
        "id": "6387a5c6e0e89b64b7666cbe"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6387a5c6e0e89b64b7666cbf",
        "isSelectedFile": false,
        "createdAt": "2022-11-30T18:55:38.038Z",
        "updatedAt": "2022-11-30T18:55:38.038Z",
        "id": "6387a5c6e0e89b64b7666cbf"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6387a5c6e0e89b64b7666cc0",
        "isSelectedFile": false,
        "createdAt": "2022-11-30T18:55:38.038Z",
        "updatedAt": "2022-11-30T18:55:38.038Z",
        "id": "6387a5c6e0e89b64b7666cc0"
      }
    ],
    "createdAt": "2022-11-30T18:52:19.141Z",
    "id": "BSYny-hp2"
  },
  {
    "name": "arduino button to add oxgen",
    "_id": "qijOlwpEl",
    "updatedAt": "2022-12-12T17:35:36.891Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6387ac75b63c06001a883973",
          "6387acbb52feb3001abd8ac4",
          "6387abd6f83eedb7d279e0b9",
          "6387abd6f83eedb7d279e0b8",
          "6387abd6f83eedb7d279e0ba"
        ],
        "fileType": "folder",
        "_id": "6387abd6f83eedb7d279e0bb",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "isSelectedFile": false,
        "id": "6387abd6f83eedb7d279e0bb"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial communitaion with Arduino \nby Yeseul for Physical Computing, 2022\n\nThis is a boiler plate for using webserial.\nDuplicat this sketch and start adding your code to \"CUSTOMIZE\" part \nto make your serial communication project to use with your Arduino sketch.\n\n\nThe serial communication part is based on \nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// port chooser button:\nlet portButton;\nlet sensor1 = 0\n//let sensor2 = 0\n\n// CUSTOMIZE: change/add variable for incoming serial data:\nlet inData;\n\n// Variables for bird UI\nlet oxygenBar\nlet startOxygen = 50\n\nlet birdImg\nlet backgroundImg\nlet o2Img\nlet startscreenImg\nlet endscreenImg\nlet showStartScreen = true\n\nconst o2ImgHeight = 200\nlet isAddingOx = false\nlet timer\nlet gameIsEnd = false\n\nfunction setup() {\n   // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    alert(\"WebSerial is supported. Enjoy!\");\n  }\n  // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton)\n \n  // add serial connect/disconnect listeners from WebSerial API:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  createCanvas(windowWidth, windowHeight);\n  oxygenBar = new OxygenBar(width/2 - 150, 280 + o2ImgHeight, 50, startOxygen)\n  birdImg = loadImage('images/bird.png')\n  backgroundImg = loadImage('images/mining.png')\n  o2Img = loadImage('images/o2bar.png'); \n  startscreenImg = loadImage('images/startscreen.png')\n  endscreenImg = loadImage('images/endscreen.png')\n}\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton('choose port');\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  let options = { baudrate: 9600}; \n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\nfunction serialEvent() {\n  \n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n  let stringFromSerial = serial.readString()\n  if (stringFromSerial != null) {\n    let value_array = stringFromSerial.trim().split(',')\n    //console.log(value_array[0])\n    //sensor1 = Number(stringFromSerial)\n    sensor1 = int(value_array[0])\n    showStartScreen = sensor1 === 1 ? false : true\n    isAddingOx = sensor1 === 1\n    if (timer) {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(()=> {\n      isAddingOx = false\n    }, 1000)\n    //sensor2 = int(value_array[1])\n  }\n   //serial.print(oxygenBar.barHeight)\n  \n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}\n\nfunction mousePressed() {\n  serial.print(oxygenBar.barHeight)\n}\n\n\nfunction draw() {\n  background(220);\n  //image(birdImg,0,0)\n  image(backgroundImg,0,0, windowWidth, windowHeight)\n  image(o2Img,width/2 - 200, 280, 150,o2ImgHeight)\n  \n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n\n  oxygenBar.show()\n  oxygenBar.update()\n  //console.log('sensor',sensor1)\n  \n \n  \n  if(isAddingOx) {\n  \n    //ellipse(width/2, height/2, 50)\n    oxygenBar.addOxygen()\n  }\n    serial.write(oxygenBar.barHeight)\n  showStartScreen = oxygenBar.barHeight <= 10 ? true:false\n  \n  if (showStartScreen) {\n    push()\n    imageMode(CENTER)\n    image(startscreenImg, width/2, height/2, 250,250)\n    pop()\n  }\n  \n  if (oxygenBar.barHeight >= 150) {\n    push()\n    imageMode(CENTER)\n    image(endscreenImg, width/2, height/2, 250,250)\n    pop()\n  } \n     \n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6387abd6f83eedb7d279e0b8",
        "isSelectedFile": true,
        "createdAt": "2022-12-12T17:35:36.891Z",
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "id": "6387abd6f83eedb7d279e0b8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"OxygenBar.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6387abd6f83eedb7d279e0b9",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "isSelectedFile": false,
        "id": "6387abd6f83eedb7d279e0b9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6387abd6f83eedb7d279e0ba",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "isSelectedFile": false,
        "id": "6387abd6f83eedb7d279e0ba"
      },
      {
        "name": "OxygenBar.js",
        "content": "class OxygenBar {\n  constructor(posX, posY, barWidth, barHeight) {\n    this.posX = posX\n    this.posY = posY\n    this.barWidth = barWidth\n    this.barHeight = barHeight\n  }\n  \n  update() {\n    if (this.barHeight >= 160) this.barHeight = 160\n    if (this.barHeight <= 0)  this.barHeight = 0\n    if(this.barHeight >0)this.barHeight -= 0.5\n  }\n  \n  addOxygen() {\n    //if (this.barHeight >= 160) this.barHeight = 160\n    //if (this.barHeight <= 0)  this.barHeight = 0\n    this.barHeight += 2\n  }\n  \n  show() {\n    push()\n    translate(this.posX, this.posY)\n    scale(1, -1)\n    fill('#ffffff')\n    rect(0, 0, this.barWidth, this.barHeight)\n    pop()\n  }\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6387ac75b63c06001a883973",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6387ac75b63c06001a883973"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "6387acd2fd99c0001a3a24d5",
          "6393682886aaef001925669c",
          "6387acd2fd99c0001a3a24cf",
          "6387acd252feb3001abd8c1e",
          "6393682386aaef0019256663"
        ],
        "fileType": "folder",
        "_id": "6387acbb52feb3001abd8ac4",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6387acbb52feb3001abd8ac4"
      },
      {
        "name": "o2bar.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6387acd252feb3001abd8c1e",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/2fc2a009-7617-4110-b340-0bf65b1d1fa4.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6387acd252feb3001abd8c1e"
      },
      {
        "name": "mining.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6387acd2fd99c0001a3a24cf",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/d1ffa706-1a00-45fb-82bf-fd4957323223.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6387acd2fd99c0001a3a24cf"
      },
      {
        "name": "bird.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6387acd2fd99c0001a3a24d5",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/ce384eac-ed04-43c7-87e3-81dc99c2c651.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6387acd2fd99c0001a3a24d5"
      },
      {
        "name": "startscreen.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6393682386aaef0019256663",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/16a9c4d8-7482-45a1-a46f-24d4f22c9527.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6393682386aaef0019256663"
      },
      {
        "name": "endscreen.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6393682886aaef001925669c",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/01e08a17-1bb5-4935-94f1-dfecfb09275e.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-12T17:35:36.891Z",
        "createdAt": "2022-12-12T17:35:36.891Z",
        "id": "6393682886aaef001925669c"
      }
    ],
    "createdAt": "2022-11-30T19:17:27.354Z",
    "id": "qijOlwpEl"
  },
  {
    "name": "arduino button to add oxgen 2",
    "_id": "qde3Th861",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63976f5cffe6caea14d82bc9",
          "63976f5cffe6caea14d82bca",
          "63976f5cffe6caea14d82bd0",
          "63976f5cffe6caea14d82bd1",
          "63976f5cffe6caea14d82bd2"
        ],
        "fileType": "folder",
        "_id": "63976f5cffe6caea14d82bc8",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "isSelectedFile": false,
        "id": "63976f5cffe6caea14d82bc8"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial communitaion with Arduino \nby Yeseul for Physical Computing, 2022\n\nThis is a boiler plate for using webserial.\nDuplicat this sketch and start adding your code to \"CUSTOMIZE\" part \nto make your serial communication project to use with your Arduino sketch.\n\n\nThe serial communication part is based on \nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// port chooser button:\nlet portButton;\nlet sensor1 = 0;\n//let sensor2 = 0\n\n// CUSTOMIZE: change/add variable for incoming serial data:\nlet inData;\n\n// Variables for bird UI\nlet oxygenBar;\nlet startOxygen = 50;\n\nlet birdImg;\nlet backgroundImg;\nlet o2Img;\nlet startscreenImg;\nlet endscreenImg;\nlet showStartScreen = true;\n\nconst o2ImgHeight = 200;\nlet isAddingOx = false;\nlet timer;\nlet gameIsEnd = false;\nlet endText = `Canary resuscitators were used in late 1800s \\n by miners to carry canaries to detect gases in mines \\n because they are more sensitive to rising CO2 levels.\\n The resuscitators were used to \\n keep the canaries alive.\\n More Info:\\n https://blog.scienceandindustrymuseum.org.uk/\\ncanary-resuscitator/`\n\nfunction setup() {\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    alert(\"WebSerial is supported. Enjoy!\");\n  }\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n\n  // add serial connect/disconnect listeners from WebSerial API:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  createCanvas(windowWidth, windowHeight);\n  oxygenBar = new OxygenBar(\n    width / 2 - 150,\n    280 + o2ImgHeight,\n    50,\n    startOxygen\n  );\n  birdImg = loadImage(\"images/bird.png\");\n  backgroundImg = loadImage(\"images/mining.png\");\n  o2Img = loadImage(\"images/o2bar.png\");\n  startscreenImg = loadImage(\"images/startscreen.png\");\n  endscreenImg = loadImage(\"images/endscreen.png\");\n}\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  let options = { baudrate: 9600 };\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\nfunction serialEvent() {\n  // CUSTOMIZE: add your code for receiving/sending data over serial\n  let stringFromSerial = serial.readString();\n  if (stringFromSerial != null) {\n    let value_array = stringFromSerial.trim().split(\",\");\n    //console.log(value_array[0])\n    //sensor1 = Number(stringFromSerial)\n    sensor1 = int(value_array[0]);\n    showStartScreen = sensor1 === 1 ? false : true;\n    isAddingOx = sensor1 === 1;\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      isAddingOx = false;\n    }, 1000);\n    //sensor2 = int(value_array[1])\n  }\n  //serial.print(oxygenBar.barHeight)\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\nfunction mousePressed() {\n  serial.print(oxygenBar.barHeight);\n}\n\nfunction draw() {\n  background(220);\n  //image(birdImg,0,0)\n  image(backgroundImg, 0, 0, windowWidth, windowHeight);\n  image(o2Img, width / 2 - 200, 280, 150, o2ImgHeight);\n\n  // CUSTOMIZE: add your code for receiving/sending data over serial\n  if (gameIsEnd) {\n    oxygenBar.barHeight = 150\n    serial.write(oxygenBar.barHeight);\n    oxygenBar.show();\n    push();\n    imageMode(CENTER);\n    image(endscreenImg, width / 2, height / 2, 350, 350);\n    pop();\n    push()\n    textSize(14)\n    textAlign(CENTER)\n    fill(255)\n    text(endText, width/2, height/2)\n    pop()\n  }\n  if (!gameIsEnd) {\n    oxygenBar.show();\n    oxygenBar.update();\n\n    if (isAddingOx) {\n      //ellipse(width/2, height/2, 50)\n      oxygenBar.addOxygen();\n    }\n    serial.write(oxygenBar.barHeight);\n    showStartScreen = oxygenBar.barHeight <= 10 ? true : false;\n\n    if (showStartScreen) {\n      push();\n      imageMode(CENTER);\n      image(startscreenImg, width / 2, height / 2, 250, 250);\n      pop();\n    }\n\n    if (oxygenBar.barHeight >= 150) {\n      push();\n      imageMode(CENTER);\n      image(endscreenImg, width / 2, height / 2, 250, 250);\n      pop();\n      gameIsEnd = true\n    }\n  }\n\n  //console.log('sensor',sensor1)\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bd1",
        "isSelectedFile": false,
        "createdAt": "2022-12-13T23:51:51.203Z",
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bd1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"OxygenBar.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bd0",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "isSelectedFile": false,
        "id": "63976f5cffe6caea14d82bd0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bd2",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "isSelectedFile": false,
        "id": "63976f5cffe6caea14d82bd2"
      },
      {
        "name": "OxygenBar.js",
        "content": "class OxygenBar {\n  constructor(posX, posY, barWidth, barHeight) {\n    this.posX = posX\n    this.posY = posY\n    this.barWidth = barWidth\n    this.barHeight = barHeight\n  }\n  \n  update() {\n    if (this.barHeight >= 160) this.barHeight = 160\n    if (this.barHeight <= 0)  this.barHeight = 0\n    if(this.barHeight >0)this.barHeight -= 0.5\n  }\n  \n  addOxygen() {\n    //if (this.barHeight >= 160) this.barHeight = 160\n    //if (this.barHeight <= 0)  this.barHeight = 0\n    this.barHeight += 3\n  }\n  \n  show() {\n    push()\n    translate(this.posX, this.posY)\n    scale(1, -1)\n    fill('#ffffff')\n    rect(0, 0, this.barWidth, this.barHeight)\n    pop()\n  }\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bc9",
        "isSelectedFile": true,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bc9"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "63976f5cffe6caea14d82bcb",
          "63976f5cffe6caea14d82bcc",
          "63976f5cffe6caea14d82bcd",
          "63976f5cffe6caea14d82bce",
          "63976f5cffe6caea14d82bcf"
        ],
        "fileType": "folder",
        "_id": "63976f5cffe6caea14d82bca",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bca"
      },
      {
        "name": "o2bar.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bce",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/2d093694-ac7f-46ed-b216-c6df409aa0b2.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bce"
      },
      {
        "name": "mining.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bcd",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/b4ed3982-951f-4c64-9ebe-986a1db7a948.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bcd"
      },
      {
        "name": "bird.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bcb",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/4b021359-88ed-498e-85b0-f615793491a0.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bcb"
      },
      {
        "name": "startscreen.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bcf",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/b8d27246-98c8-44ad-9509-826649385ac6.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bcf"
      },
      {
        "name": "endscreen.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63976f5cffe6caea14d82bcc",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/767311a8-8b1f-4e87-90cf-23bd329ff137.png",
        "isSelectedFile": false,
        "updatedAt": "2022-12-13T23:51:51.203Z",
        "createdAt": "2022-12-13T23:51:51.203Z",
        "id": "63976f5cffe6caea14d82bcc"
      }
    ],
    "createdAt": "2022-12-12T18:13:49.550Z",
    "updatedAt": "2022-12-13T23:51:51.203Z",
    "id": "qde3Th861"
  },
  {
    "name": "Bezier Curve Interactive Tangents copy",
    "_id": "ZfRGzFyhK",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63bdb6c48f18422f79d6ed74",
          "63bdb6c48f18422f79d6ed75",
          "63bdb6c48f18422f79d6ed76"
        ],
        "fileType": "folder",
        "_id": "63bdb6c48f18422f79d6ed73",
        "createdAt": "2021-05-27T02:11:43.908Z",
        "updatedAt": "2021-05-27T02:11:43.908Z",
        "isSelectedFile": false,
        "id": "63bdb6c48f18422f79d6ed73"
      },
      {
        "name": "sketch.js",
        "content": "let handles = [[90,190], [10,110]];\nlet handleClicked;\nlet handleD = 12;\n\nlet points = [[15, 180], [85, 120]];\nlet pointClicked;\n\n//let beziers = [ [points[0], handles[0], handles[1], points[1]]];\nlet beziers = 1;\n\nlet editMode = false;\nlet showImage = false;\nlet tangent= false;\n\n\nlet crtlPressed = false;\n\nlet w = 800;\nlet h = 600;\n\n// const preview = document.querySelector('.preview');\n\n\nlet bg;\n\n// function preload() {\n//   bg = loadImage(\"nurse.jpg\");\n//   console.log(bg)\n// }\n\nfunction setup() {\n  //console.log(bg.height)\n  // w = bg.width/5;\n  // h = bg.height/5;\n  // input = createFileInput(handleFile)\n  w = 700\n  h = 450\n  createCanvas(w,h);\n  enableEdit();\n  toggleTangent();\n  backImage();\n  backImage();\n}\n\nfunction draw() {\n  if(showImage && bg){\n    // console.log(bg);\n    if(bg.height && bg.height !== height){\n      resizeCanvas(bg.width,bg.height)\n      w = bg.width\n      h = bg.height\n    }\n    background(bg);\n  } else {\n    background(200);\n  }\n  noFill();\n  stroke(255, 102, 0);\n  strokeWeight(1);\n  //stroke(0, 0, 0);\n  for(let i = 0; i < beziers; i++){\n    let j = i*2;\n    let b = [points[j], handles[j], handles[j+1], points[j+1]];\n    //console.log(b)\n    strokeWeight(round(document.querySelector(\".slider\").value/10));\n stroke(document.querySelector(\".redSlider\").value, document.querySelector(\".greenSlider\").value, document.querySelector(\".blueSlider\").value)\n    bezier(b[0][0], b[0][1], b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]);\n    if(editMode) {\n      strokeWeight(1)\n      stroke(255)\n      line(b[0][0], b[0][1], b[1][0], b[1][1]);\n      line(b[2][0], b[2][1], b[3][0], b[3][1]);\n    }\n  }\n  if(editMode) interactive();\n  \n  \n}\n\nfunction mousePressed() {\n  \n  // Ensure that the mouse was clicked within the canvas and editMode is enabled\n  if(mouseX > 0 && mouseX < w && mouseY > 0 && mouseY < h && editMode){\n    // Check to see if a handle was clicked\n    for(let [i,p] of handles.entries()){\n      // console.log(\"The \"+ i + \"th point \" + p + \" is \"+ p[0]+\",\" +p[1])\n      if(dist(p[0],p[1],mouseX,mouseY) <= handleD/2){\n        handleClicked = i+1;\n        // console.log(handleClicked)\n        break;\n      } else {\n        handleClicked = false;\n      }\n    }\n    \n    // Check to see if a point was clicked\n    for(let [i,p] of points.entries()){\n      if(dist(p[0],p[1],mouseX,mouseY) <= handleD/2){\n        pointClicked = i+1;\n        // console.log(handleClicked)\n        break;\n      } else {\n        pointClicked = false;\n      }\n    }\n    \n    if(handleClicked == false && pointClicked === false){\n      beziers += 1;\n      let th = atan2(points[points.length-1][1]-handles[handles.length-1][1], points[points.length-1][0]-handles[handles.length-1][0] )\n      points.push([points[points.length-1][0], points[points.length-1][1]]);\n      points.push([mouseX, mouseY]);\n      handles.push([points[points.length-2][0] + 50*cos(th), points[points.length-2][1] + 50 *sin(th)]);\n      th = atan2(handles[handles.length-1][1]-mouseY, handles[handles.length-1][0]-mouseX )\n      handles.push([mouseX + 50*cos(th), mouseY+50*sin(th)]);\n    }\n  }\n}\n\nfunction mouseReleased() {\n  handleClicked = false;\n  pointClicked = false;\n}\n\nfunction keyPressed() {\n  if(keyCode === CONTROL){\n    ctrlPressed = true;\n  }\n  if(keyCode === 90 && keyIsDown(CONTROL) && points.length > 2){\n    console.log(points.length);\n    points.pop();\n    points.pop();\n    handles.pop();\n    handles.pop();\n    beziers -= 1;\n  }\n}\n\nfunction keyReleased() {\n  if(keyCode === CONTROL){\n    ctrlPressed = false;\n  }\n}\n\nfunction enableEdit() {\n  editMode = !editMode;\n  document.getElementById(\"edit\").style.color = !editMode ?  \"black\" : \"white\";\n  document.getElementById(\"edit\").style.backgroundColor = !editMode ? \"lightgray\" : \"gray\";\n}\n\nfunction backImage() {\n  showImage = !showImage;\n  document.getElementById(\"image\").style.color = !showImage ?  \"black\" : \"white\";\n  document.getElementById(\"image\").style.backgroundColor = !showImage ? \"lightgray\" : \"gray\";\n}\n\nfunction toggleTangent() {\n  tangent = !tangent;\n  document.getElementById(\"tangent\").style.color = !tangent ?  \"black\" : \"white\";\n  document.getElementById(\"tangent\").style.backgroundColor = !tangent ? \"lightgray\" : \"gray\";\n}\n\nfunction interactive() {\n  for(let [i,p] of points.entries()){\n    if(i === pointClicked-1 & mouseIsPressed){\n      fill(0,255,255);\n    } else {\n      noFill();\n    }\n    \n    if(dist(p[0],p[1],mouseX,mouseY) <= handleD/2){\n      stroke(0);\n      strokeWeight(1.175);\n    } else {\n      stroke(30,120,230)\n      strokeWeight(1);\n    }\n    \n    circle(p[0], p[1], handleD);\n  }\n  \n  fill(255);\n  for(let [i,p] of handles.entries()){\n    if(i === handleClicked-1 & mouseIsPressed){\n      fill(250,90,60);\n    } else {\n      noFill();\n    }\n    \n    if(dist(p[0],p[1],mouseX,mouseY) <= handleD/2){\n      stroke(0);\n      strokeWeight(1.175)\n    } else {\n      stroke(250,90,60)\n      ;\n      strokeWeight(1);\n    }\n    \n    circle(p[0], p[1], handleD);\n  }\n  \n  \n  if(handleClicked && mouseIsPressed){\n    handles[handleClicked-1][0] = mouseX > 0 && mouseX < w ? mouseX : mouseX > 0 ? w : 0;\n    handles[handleClicked-1][1] = mouseY > 0 && mouseY < h ? mouseY : mouseY > 0 ? h : 0;\n    \n    if((handleClicked-1)%2 === 0 && handleClicked-1 > 1 && tangent) {\n      let th = atan2(handles[handleClicked-1][1]-points[handleClicked-1][1], handles[handleClicked-1][0]-points[handleClicked-1][0]);\n      let prevHandleMag = dist(handles[handleClicked-2][0], handles[handleClicked-2][1], points[handleClicked-1][0], points[handleClicked-1][1]);\n      handles[handleClicked-2][0] = points[handleClicked-1][0] - prevHandleMag*cos(th);\n      handles[handleClicked-2][1] = points[handleClicked-1][1] - prevHandleMag*sin(th);\n    }\n    if((handleClicked-1)%2 === 1 && handleClicked-1 > 0 && handleClicked !== handles.length && tangent) {\n      let th = atan2(handles[handleClicked-1][1]-points[handleClicked][1], handles[handleClicked-1][0]-points[handleClicked][0]);\n      let nextHandleMag = dist(handles[handleClicked][0], handles[handleClicked][1], points[handleClicked][0], points[handleClicked][1]);\n      handles[handleClicked][0] = points[handleClicked][0] - nextHandleMag*cos(th);\n      handles[handleClicked][1] = points[handleClicked][1] - nextHandleMag*sin(th);\n    }\n  }\n  \n  else if(pointClicked && mouseIsPressed){\n    // console.log(\"Dragging\")\n    let h1dx = points[pointClicked-1][0] - handles[pointClicked-1][0];\n    let h1dy = points[pointClicked-1][1] - handles[pointClicked-1][1];\n    points[pointClicked-1][0] = mouseX > 0 && mouseX < w ? mouseX : mouseX > 0 ? w : 0;\n    points[pointClicked-1][1] = mouseY > 0 && mouseY < h ? mouseY : mouseY > 0 ? h : 0;\n    handles[pointClicked-1][0] = points[pointClicked-1][0] - h1dx;\n    handles[pointClicked-1][1] = points[pointClicked-1][1] - h1dy;\n    \n    if((pointClicked-1)%2 === 0 && pointClicked-1){\n      \n      let h2dx = points[pointClicked][0] - handles[pointClicked][0];\n      let h2dy = points[pointClicked][1] - handles[pointClicked][1];\n      \n      points[pointClicked-2][0] = mouseX > 0 && mouseX < w ? mouseX : mouseX > 0 ? w : 0;\n      points[pointClicked-2][1] = mouseY > 0 && mouseY < h ? mouseY : mouseY > 0 ? h : 0;\n      \n      handles[pointClicked][0] = points[pointClicked][0] - h2dx;\n      handles[pointClicked][1] = points[pointClicked][1] - h2dy;\n      \n    } \n    if((pointClicked-1)%2 === 1 && points[pointClicked]){\n      \n      let h2dx = points[pointClicked][0] - handles[pointClicked][0];\n      let h2dy = points[pointClicked][1] - handles[pointClicked][1];\n      \n      points[pointClicked][0] = mouseX > 0 && mouseX < w ? mouseX : mouseX > 0 ? w : 0;\n      points[pointClicked][1] = mouseY > 0 && mouseY < h ? mouseY : mouseY > 0 ? h : 0;\n      \n      handles[pointClicked][0] = points[pointClicked][0] - h2dx;\n      handles[pointClicked][1] = points[pointClicked][1] - h2dy;\n    }\n    \n  }\n}\n\n\n\nfunction handleFile() {\n  // if (file.type === 'image') {\n//     bg = createImg(file.data, '');\n//     bg.hide();\n//     bg = loadImage(bg);\n//     console.log(bg)\n//     resizeCanvas(bg.width,bg.height);\n    \n    const selectedFile = document.getElementById('upload');\n    const myImageFile = selectedFile.files[0];\n    let urlOfImageFile = URL.createObjectURL(myImageFile);\n    bg = loadImage(urlOfImageFile);\n    showImage = true;\n    document.getElementById(\"image\").style.color = !showImage ?  \"black\" : \"white\";\n    document.getElementById(\"image\").style.backgroundColor = !showImage ? \"lightgray\" : \"gray\";\n    //resizeCanvas(bg.width,bg.height);\n    //resizeCanvas(800,300);\n  // } else {\n  //   bg = null;\n  // }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63bdb6c48f18422f79d6ed75",
        "isSelectedFile": true,
        "createdAt": "2021-05-27T02:11:43.908Z",
        "updatedAt": "2021-05-27T02:11:43.908Z",
        "id": "63bdb6c48f18422f79d6ed75"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <h1>B&#233;zier Curve with p5js</h1>\n    <p>Click and drag the points to adjust the bezier curve.</p> \n    <p>Click anywhere to add a new point.</p>  \n    <p>CTRL + Z to remove last created point.</p>\n    <p>Upload an image to draw over it!</p>\n    <button id=\"edit\" onclick=\"enableEdit()\">Edit Mode</button>\n    <button id=\"image\" onclick=\"backImage()\">Show Image</button>\n    <button id=\"tangent\" onclick=\"toggleTangent()\">Smooth</button>\n    <input accept=\".png, .jpg, .jpeg\" type=\"file\" id=\"upload\" onchange=\"handleFile()\">\n    <p>Thickness</p>\n    <input type=\"range\" min=\"10\" max=\"500\" class=\"slider\" value=\"20\">\n    <p>Line Color</p>\n    <div>\n    <p>R</p>\n    <input type=\"range\" min=\"0\" max=\"255\" class=\"redSlider\" value=\"0\">\n    <p>G</p>\n    <input type=\"range\" min=\"0\" max=\"255\" class=\"greenSlider\" value=\"0\">\n    <p>B</p>\n    <input type=\"range\" min=\"0\" max=\"255\" class=\"blueSlider\" value=\"0\">\n    </div>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63bdb6c48f18422f79d6ed74",
        "createdAt": "2021-05-27T02:11:43.908Z",
        "updatedAt": "2021-05-27T02:11:43.908Z",
        "isSelectedFile": false,
        "id": "63bdb6c48f18422f79d6ed74"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  display: flex;\n  justify-content: center;\n}\n\ncanvas {\n  display: block;\n}\n\np {\n  margin: 0em 0em 0em 0em;\n  padding: 0;\n}\n\nh1 {\n  margin:0;\n}\n\ndiv {\n  display: flex;\n}",
        "children": [],
        "fileType": "file",
        "_id": "63bdb6c48f18422f79d6ed76",
        "createdAt": "2021-05-27T02:11:43.908Z",
        "updatedAt": "2021-05-27T02:11:43.908Z",
        "isSelectedFile": false,
        "id": "63bdb6c48f18422f79d6ed76"
      }
    ],
    "createdAt": "2023-01-10T19:04:36.750Z",
    "updatedAt": "2023-01-10T19:04:36.750Z",
    "id": "ZfRGzFyhK"
  },
  {
    "name": "bird ox ui",
    "_id": "VySH8C0GG",
    "updatedAt": "2022-11-27T19:13:51.176Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63769912a37681001a02df23",
          "63769b6507cfdc001a386b54",
          "6383b1cdcb80d9001a1aca54",
          "637695df30a73201c53584b2",
          "637695df30a73201c53584b1",
          "637695df30a73201c53584b3"
        ],
        "fileType": "folder",
        "_id": "637695df30a73201c53584b4",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "isSelectedFile": false,
        "id": "637695df30a73201c53584b4"
      },
      {
        "name": "sketch.js",
        "content": "let controlBtn\nlet oxygenBar\nlet startOxygen = 50\n\nlet birdImg\nlet backgroundImg\nlet o2Img\n\n// oxygen level bar\n\n// a button to keep pressing to maintain the oxygen level\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  controlBtn = new Button(width/2, height/2)\n  oxygenBar = new OxygenBar(width/2 - 150, height-160, 50, startOxygen)\n  \n  birdImg = loadImage('images/bird.png')\n  backgroundImg = loadImage('images/mining.png')\n  o2Img = loadImage('images/o2bar.png'); \n}\n\nfunction draw() {\n  background(220);\n  \n  //image(birdImg,0,0)\n  image(backgroundImg,0,0, windowWidth, windowHeight)\n  image(o2Img,width/2 - 200,230, 150,200)\n  \n  controlBtn.show()\n  controlBtn.update()\n  //line(0,400,width,400)\n  oxygenBar.show()\n  oxygenBar.update()\n}\n\n\nfunction mousePressed() {\n  if (controlBtn.isHover()) {\n    oxygenBar.addOxygen()\n  }\n  //controlBtn.addOxygen(oxygenBar)\n}\n\n\n\n",
        "children": [],
        "fileType": "file",
        "_id": "637695df30a73201c53584b1",
        "isSelectedFile": true,
        "createdAt": "2022-11-27T19:13:51.176Z",
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "id": "637695df30a73201c53584b1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"Button.js\"></script>\n    <script src=\"OxygenBar.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "637695df30a73201c53584b2",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "isSelectedFile": false,
        "id": "637695df30a73201c53584b2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "637695df30a73201c53584b3",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "isSelectedFile": false,
        "id": "637695df30a73201c53584b3"
      },
      {
        "name": "Button.js",
        "content": "class Button {\n  constructor(posX, posY) {\n    this.posX = posX\n    this.posY = posY\n    this.btnD = 50\n    this.clr = '#ffffff'\n  }\n  \n  update() {\n    this.clr = this.isHover() ? '#ffff00' : '#ffffff'\n  }\n  \n  // addOxygen(oxygenBar) {\n  //   if (this.isHover()) {\n  //     console.log('add ox')\n  //     console.log(oxygenBar.barHeight)\n  //   }\n  // }\n  \n  show() {\n    fill(this.clr)\n    circle(this.posX, this.posY, this.btnD)\n  }\n  \n  isHover() {\n    return dist(mouseX, mouseY, this.posX, this.posY) < this.btnD/2\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63769912a37681001a02df23",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "63769912a37681001a02df23"
      },
      {
        "name": "OxygenBar.js",
        "content": "class OxygenBar {\n  constructor(posX, posY, barWidth, barHeight) {\n    this.posX = posX\n    this.posY = posY\n    this.barWidth = barWidth\n    this.barHeight = barHeight\n  }\n  \n  update() {\n    if(this.barHeight >0)this.barHeight -= 0.5\n  }\n  \n  addOxygen() {\n    this.barHeight += 10\n  }\n  \n  show() {\n    push()\n    translate(this.posX, this.posY)\n    scale(1, -1)\n    fill('#ffffff')\n    rect(0, 0, this.barWidth, this.barHeight)\n    pop()\n  }\n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "63769b6507cfdc001a386b54",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "63769b6507cfdc001a386b54"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "6383b42ecb80d9001a1adb3f",
          "6383b1ffcb80d9001a1acc13",
          "6383b1ffcb80d9001a1acc0d"
        ],
        "fileType": "folder",
        "_id": "6383b1cdcb80d9001a1aca54",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "6383b1cdcb80d9001a1aca54"
      },
      {
        "name": "o2bar.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6383b1ffcb80d9001a1acc0d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/db87ef11-c328-4108-8c15-cce5763740ff.png",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "6383b1ffcb80d9001a1acc0d"
      },
      {
        "name": "mining.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6383b1ffcb80d9001a1acc13",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/2ea01efc-2752-44a0-b2f9-608bbd4b3ea5.png",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "6383b1ffcb80d9001a1acc13"
      },
      {
        "name": "bird.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6383b42ecb80d9001a1adb3f",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/77da1317-7808-4b55-b73a-5039c4887ea0.png",
        "isSelectedFile": false,
        "updatedAt": "2022-11-27T19:13:51.176Z",
        "createdAt": "2022-11-27T19:13:51.176Z",
        "id": "6383b42ecb80d9001a1adb3f"
      }
    ],
    "createdAt": "2022-11-17T20:22:58.172Z",
    "id": "VySH8C0GG"
  },
  {
    "name": "Cat mind",
    "_id": "vKt9wLM44",
    "updatedAt": "2023-04-26T20:13:01.530Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64497f7f6b6a61001c49b737",
          "64497f8730a3e2001a3c3cdc",
          "64496c51524b17001c4668f5",
          "64496ea0524b17001c468a8e",
          "64496c1d56c55678a2dc6173",
          "64496c1d56c55678a2dc6172",
          "64496c1d56c55678a2dc6174",
          "64496ddf3b05ea001af5c02e",
          "64496db430a3e2001a3b47f7"
        ],
        "fileType": "folder",
        "_id": "64496c1d56c55678a2dc6175",
        "isSelectedFile": false,
        "createdAt": "2023-04-26T20:13:01.530Z",
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "id": "64496c1d56c55678a2dc6175"
      },
      {
        "name": "sketch.js",
        "content": "// modified from\n// Flocking\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/124-flocking-boids.html\n// https://youtu.be/mhjuuHl6qHM\n\nlet theShader;\nlet webGLCanvas\nlet originalGraphics\nlet eyeGraphics\nconst flock = [];\n\nfunction preload(){\n\ttheShader = new p5.Shader('texture.vert','texture.frag')\n}\n\nlet alignSlider, cohesionSlider, separationSlider;\n\nfunction setup() {\n  createCanvas(1000, 1000, WEBGL);\n\t\n\twebGLCanvas = createGraphics(width,height,WEBGL)\n\toriginalGraphics = createGraphics(width,height)\n\teyeGraphics = createGraphics(width,height)\n\t\n  // alignSlider = 2//createSlider(0, 2, 1.5, 0.1);\n  // cohesionSlider = 0//createSlider(0, 2, 1, 0.1);\n  // separationSlider = 2//createSlider(0, 2, 2, 0.1);\n\talignSlider = createSlider(0, 2, 1.5, 0.1);\n  cohesionSlider = createSlider(0, 2, 1, 0.1);\n  separationSlider = createSlider(0, 2, 2, 0.1);\n\t\n\toriginalGraphics.noStroke()\n\twebGLCanvas.noStroke()\n\tnoStroke()\n  for (let i = 0; i < 30; i++) {\n    flock.push(new Boid());\n  }\n\n}\n\nfunction draw() {\n  //background(240);\n\t\n\twebGLCanvas.shader(theShader)\n  \n  theShader.setUniform(\"resolution\", [width, height]);\n  theShader.setUniform(\"time\", millis() / 1000.0);\n  theShader.setUniform(\"mouse\", [mouseX, map(mouseY, 0, height, height, 0)]);\n  \n\ttheShader.setUniform('u_resolution',[width/1000,height/1000])\n\ttheShader.setUniform('u_time',millis()/1000)\n\ttheShader.setUniform('u_mouse',[mouseX/width,mouseY/height])\n\ttheShader.setUniform('u_tex',originalGraphics)\n\t//console.log(mouseX/width)\n\t\n  \n  \n\twebGLCanvas.clear()\n\twebGLCanvas.rect(-width/2,-height/2,width,height)\n\t\n\toriginalGraphics.background(240)\n\teyeGraphics.clear()\n  for (let boid of flock) {\n    //boid.edges();\n    boid.flock(flock);\n    boid.update();\n    boid.show(originalGraphics, eyeGraphics);\n  }\n\t\n\timage(webGLCanvas,0,0)\n\timage(eyeGraphics,0,0)\n\t\n\t//image(originalGraphics,0,0)\n}",
        "children": [],
        "fileType": "file",
        "_id": "64496c1d56c55678a2dc6172",
        "isSelectedFile": true,
        "createdAt": "2023-04-26T20:13:01.530Z",
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "id": "64496c1d56c55678a2dc6172"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"frag_functions_default.js\"></script>\n    <script src=\"boid.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64496c1d56c55678a2dc6173",
        "isSelectedFile": false,
        "createdAt": "2023-04-26T20:13:01.530Z",
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "id": "64496c1d56c55678a2dc6173"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64496c1d56c55678a2dc6174",
        "isSelectedFile": false,
        "createdAt": "2023-04-26T20:13:01.530Z",
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "id": "64496c1d56c55678a2dc6174"
      },
      {
        "name": "boid.js",
        "content": "// Flocking\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/124-flocking-boids.html\n// https://youtu.be/mhjuuHl6qHM\n\nclass Boid {\n  constructor() {\n    this.position = createVector(random(width), random(height));\n    this.velocity = p5.Vector.random2D();\n    this.velocity.setMag(random(2, 5));\n    this.acceleration = createVector();\n    this.maxForce = 0.2;\n    this.maxSpeed = 3;\n\t\tthis.r = 4;\n  }\n\n  edges() {\n    if (this.position.x > width) {\n      this.position.x = 0;\n    } else if (this.position.x < 0) {\n      this.position.x = width;\n    }\n    if (this.position.y > height) {\n      this.position.y = 0;\n    } else if (this.position.y < 0) {\n      this.position.y = height;\n    }\n  }\n\n  align(boids) {\n    let perceptionRadius = 10//25;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.velocity);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  separation(boids) {\n    let perceptionRadius = 60//24;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        let diff = p5.Vector.sub(this.position, other.position);\n        diff.div(d * d);\n        steering.add(diff);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  cohesion(boids) {\n    let perceptionRadius = 20//50;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.position);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.sub(this.position);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\t\n\tattractCenter() {\n\t\tconst centerVec = createVector(width/2, height/2)\n    let force = p5.Vector.sub(centerVec,this.position);\n\t\tlet distance = force.mag()\n\t\tif (distance > 450) {\n\t\t\tforce.setMag(0.3)\n\t\t} else {\n\t\t\tforce.mult(0)\n\t\t}\n    //let distanceSq = constrain(force.magSq(), 100, 1000);\n    //let G = 5;\n    //let strength = G * (this.mass * mover.mass) / distanceSq;\n    //force.setMag(strength);\n    //mover.applyForce(force);\n\t\treturn force\n  }\n\n  flock(boids) {\n    let alignment = this.align(boids);\n    let cohesion = this.cohesion(boids);\n    let separation = this.separation(boids);\n\t\t\n\t\tlet centerForce = this.attractCenter();\n\n    alignment.mult(alignSlider.value());\n    cohesion.mult(cohesionSlider.value());\n    separation.mult(separationSlider.value());\n\t\t// alignment.mult(alignSlider);\n\t\t// cohesion.mult(cohesionSlider);\n\t\t// separation.mult(separationSlider);\n\n    this.acceleration.add(alignment);\n    this.acceleration.add(cohesion);\n    this.acceleration.add(separation);\n\t\tthis.acceleration.add(centerForce)\n  }\n\n  update() {\n    this.position.add(this.velocity);\n    this.velocity.add(this.acceleration);\n    this.velocity.limit(this.maxSpeed);\n    this.acceleration.mult(0);\n  }\n\n  show(g, eyeG) {\n\t\tg.push()\n\t\tg.translate(this.position.x, this.position.y)\n\t\tg.rotate(this.velocity.heading());\n    g.strokeWeight(6);\n\t\t\n    //stroke(0);\n\t\t//point(0, 0);\n\t\tg.stroke(0)\n\t\tg.fill(\"yellow\")\n\t\t//g.triangle(-this.r, -this.r / 2, -this.r, this.r / 2, this.r, 0);\n\t\tg.strokeWeight(90)\n\t\tg.point(0,0)\n    //point(this.position.x, this.position.y);\n\t\tg.pop()\n\t\t\n\t\teyeG.push()\n\t\t\teyeG.noStroke()\n\t\t\teyeG.translate(this.position.x, this.position.y)\n\t\t\t//eyeG.rotate(this.velocity.heading());\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(-15, -3)\n\t\t\t\t\teyeG.rotate(PI/6)\n\t\t\t\t\teyeG.fill(255)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\t\t\n\t\t\t\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(15, -3)\n\t\t\t\t\teyeG.rotate(-PI/6)\n\t\t\t\t\teyeG.fill(255)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\n\t\teyeG.pop()\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64496c51524b17001c4668f5",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64496c51524b17001c4668f5"
      },
      {
        "name": "texture.vert",
        "content": "precision highp float;\n\n// attributes, in\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\n// attributes, out\nvarying vec3 var_vertPos;\nvarying vec3 var_vertNormal;\nvarying vec2 var_vertTexCoord;\nvarying vec4 var_centerGlPosition;//原点\n    \n// matrices\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform float u_time;\n\n\nvoid main() {\n      vec3 pos = aPosition;\n\t\t\tvec4 posOut = uProjectionMatrix * uModelViewMatrix * vec4(pos, 1.0);\n      gl_Position = posOut;\n\n      // set out value\n      var_vertPos      = pos;\n      var_vertNormal   =  aNormal;\n      var_vertTexCoord = aTexCoord;\n\t\t\tvar_centerGlPosition = uProjectionMatrix * uModelViewMatrix * vec4(0., 0., 0.,1.0);\n    }",
        "children": [],
        "fileType": "file",
        "_id": "64496db430a3e2001a3b47f7",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64496db430a3e2001a3b47f7"
      },
      {
        "name": "texture.frag",
        "content": "precision highp float;\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec3 u_lightDir;\nuniform vec3 u_col;\nuniform mat3 uNormalMatrix;\nuniform float u_pixelDensity;\nuniform sampler2D u_tex;\n\n//attributes, in\nvarying vec4 var_centerGlPosition;\nvarying vec3 var_vertNormal;\nvarying vec2 var_vertTexCoord;\n\n#define PI 3.141592653589793\n  #define TAU 6.283185307179586\n\t\n\tfloat rand(vec2 c){\n\t\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t}\n\n\tmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n\t}\n\n\tmat2 scale2d(vec2 _scale){\n\t\t\treturn mat2(_scale.x,0.0,\n\t\t\t\t\t\t\t\t\t0.0,_scale.y);\n\t}\n\n\tvec2 tile (vec2 _st, float _zoom) {\n\t\t\t_st *= _zoom;\n\t\t\treturn fract(_st);\n\t}\n\n\t//\tClassic Perlin 3D Noise \n\t//\tby Stefan Gustavson\n\n\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\tvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n\tfloat cnoise(vec3 P){\n\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\tPi0 = mod(Pi0, 289.0);\n\t\tPi1 = mod(Pi1, 289.0);\n\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\tvec4 iz0 = Pi0.zzzz;\n\t\tvec4 iz1 = Pi1.zzzz;\n\n\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\tvec4 ixy1 = permute(ixy + iz1);\n\n\t\tvec4 gx0 = ixy0 / 7.0;\n\t\tvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n\t\tgx0 = fract(gx0);\n\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\t\tvec4 gx1 = ixy1 / 7.0;\n\t\tvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n\t\tgx1 = fract(gx1);\n\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\tg000 *= norm0.x;\n\t\tg010 *= norm0.y;\n\t\tg100 *= norm0.z;\n\t\tg110 *= norm0.w;\n\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\tg001 *= norm1.x;\n\t\tg011 *= norm1.y;\n\t\tg101 *= norm1.z;\n\t\tg111 *= norm1.w;\n\n\t\tfloat n000 = dot(g000, Pf0);\n\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\tfloat n111 = dot(g111, Pf1);\n\n\t\tvec3 fade_xyz = fade(Pf0);\n\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n\t\treturn 2.2 * n_xyz;\n\t}\n\t\n\t\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\n\t\n\tfloat pNoise(vec2 p, int res){\n\t\t// p+=u_noise_pan;\n\t\tfloat persistance = .5;\n\t\tfloat n = 0.;\n\t\tfloat normK = 0.;\n\t\tfloat f = 4.;\n\t\tfloat amp = 1.;\n\t\tint iCount = 0;\n\t\t//noprotect\n\t\tfor (int i = 0; i<50; i++){\n\t\t\tn+=amp*noise(p, f);\n\t\t\tf*=2.;\n\t\t\tnormK+=amp;\n\t\t\tamp*=persistance;\n\t\t\tif (iCount == res) break;\n\t\t\tiCount++;\n\t\t}\n\t\tfloat nf = n/normK;\n\t\treturn nf*nf*nf*nf;\n\t}\n\n\tvec2 random2( vec2 p ) {\n\t\t\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n\t}\n\nvoid main(){\n\t\tvec2 st = var_vertTexCoord.xy /u_resolution.xy; \n\n\t\t//st.x += cnoise( vec3(st*u_time,1.) )/5.*u_mouse.x;\n\t\tst.x += cnoise( vec3(st*3000.,1.) )/5.* 0.15;//u_mouse.x;\n\t\tst.y += cnoise( vec3(st*3000.,1.) )/5.* 0.15;\n\n\tvec3 colorYellow = vec3(255.-\n\t\tcnoise(vec3(st*5.,u_mouse.x+u_time/10.))*100., 227.-\n\t\tcnoise(vec3(st*5.,u_mouse.y+u_time/10.))*350. , 73.+\n\t\tcnoise(vec3(st*5.,1.+u_time/10.))*200.\n\t)/255.;\n\t\t\n\t\t\n\t\tvec3 colorYellow2 = vec3(255.-\n\t\t\tpNoise(st*1.+u_mouse.x,5)*100., 227.-\n\t\t\tpNoise(st*2.+u_mouse.y,5)*350. , 73.+\n\t\t\tpNoise(st*3.,5)*200.\n\t\t)/255.;\n\t\tvec3 color = vec3(1.);\n\t\tvec3 texColor = texture2D(u_tex,st).rgb;\n\t\t\n\t\t// texColor=texColor*colorYellow*colorYellow2;\n\t\t// float d = distance(u_mouse,st);\n\t\t// color*=1.-d;\n\t\tgl_FragColor= vec4(texColor,1.);\n\t}",
        "children": [],
        "fileType": "file",
        "_id": "64496ddf3b05ea001af5c02e",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64496ddf3b05ea001af5c02e"
      },
      {
        "name": "frag_functions_default.js",
        "content": "const frag_functions_default = `\n  #define PI 3.141592653589793\n  #define TAU 6.283185307179586\n\t\n\tfloat rand(vec2 c){\n\t\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t}\n\n\tmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n\t}\n\n\tmat2 scale2d(vec2 _scale){\n\t\t\treturn mat2(_scale.x,0.0,\n\t\t\t\t\t\t\t\t\t0.0,_scale.y);\n\t}\n\n\tvec2 tile (vec2 _st, float _zoom) {\n\t\t\t_st *= _zoom;\n\t\t\treturn fract(_st);\n\t}\n\n\t//\tClassic Perlin 3D Noise \n\t//\tby Stefan Gustavson\n\n\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\tvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n\tfloat cnoise(vec3 P){\n\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\tPi0 = mod(Pi0, 289.0);\n\t\tPi1 = mod(Pi1, 289.0);\n\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\tvec4 iz0 = Pi0.zzzz;\n\t\tvec4 iz1 = Pi1.zzzz;\n\n\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\tvec4 ixy1 = permute(ixy + iz1);\n\n\t\tvec4 gx0 = ixy0 / 7.0;\n\t\tvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n\t\tgx0 = fract(gx0);\n\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\t\tvec4 gx1 = ixy1 / 7.0;\n\t\tvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n\t\tgx1 = fract(gx1);\n\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\tg000 *= norm0.x;\n\t\tg010 *= norm0.y;\n\t\tg100 *= norm0.z;\n\t\tg110 *= norm0.w;\n\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\tg001 *= norm1.x;\n\t\tg011 *= norm1.y;\n\t\tg101 *= norm1.z;\n\t\tg111 *= norm1.w;\n\n\t\tfloat n000 = dot(g000, Pf0);\n\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\tfloat n111 = dot(g111, Pf1);\n\n\t\tvec3 fade_xyz = fade(Pf0);\n\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n\t\treturn 2.2 * n_xyz;\n\t}\n\t\n\t\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\n\t\n\tfloat pNoise(vec2 p, int res){\n\t\t// p+=u_noise_pan;\n\t\tfloat persistance = .5;\n\t\tfloat n = 0.;\n\t\tfloat normK = 0.;\n\t\tfloat f = 4.;\n\t\tfloat amp = 1.;\n\t\tint iCount = 0;\n\t\t//noprotect\n\t\tfor (int i = 0; i<50; i++){\n\t\t\tn+=amp*noise(p, f);\n\t\t\tf*=2.;\n\t\t\tnormK+=amp;\n\t\t\tamp*=persistance;\n\t\t\tif (iCount == res) break;\n\t\t\tiCount++;\n\t\t}\n\t\tfloat nf = n/normK;\n\t\treturn nf*nf*nf*nf;\n\t}\n\n\tvec2 random2( vec2 p ) {\n\t\t\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n\t}\n\n`",
        "children": [],
        "fileType": "file",
        "_id": "64496ea0524b17001c468a8e",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64496ea0524b17001c468a8e"
      },
      {
        "name": "basic.frag",
        "content": "// casey conchinha - @kcconch ( https://github.com/kcconch )\n// louise lessel - @louiselessel ( https://github.com/louiselessel )\n// more p5.js + shader examples: https://itp-xstory.github.io/p5js-shaders/\n// rotate/tile functions from example by patricio gonzalez vivo\n// @patriciogv ( patriciogonzalezvivo.com )\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n\nuniform vec2 resolution;\nuniform float time;\nuniform vec2 mouse;\n\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n\n    //  Scale the coordinate system by 2x2\n    _st *= 2.0;\n\n    //  Give each cell an index number\n    //  according to its position\n    float index = 0.0;\n    index += step(1., mod(_st.x,2.0));\n    index += step(1., mod(_st.y,2.0))*2.0;\n\n    //      |\n    //  2   |   3\n    //      |\n    //--------------\n    //      |\n    //  0   |   1\n    //      |\n\n    // Make each cell between 0.0 - 1.0\n    _st = fract(_st);\n\n    // Rotate each cell according to the index\n    if(index == 1.0){\n        //  Rotate cell 1 by 90 degrees\n        _st = rotate2D(_st,PI*0.5);\n    } else if(index == 2.0){\n        //  Rotate cell 2 by -90 degrees\n        _st = rotate2D(_st,PI*-0.5);\n    } else if(index == 3.0){\n        //  Rotate cell 3 by 180 degrees\n        _st = rotate2D(_st,PI);\n    }\n\n    return _st;\n}\n\nfloat concentricCircles(in vec2 st, in vec2 radius, in float res, in float scale) {\n    float dist = distance(st,radius);\n    float pct = floor(dist*res)/scale;\n    return pct;\n}\n\nvoid main (void) {\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n    vec2 mst = gl_FragCoord.xy/mouse.xy;\n    float mdist= distance(vec2(1.0,1.0), mst);\n\n    float dist = distance(st,vec2(sin(time/10.0),cos(time/10.0)));\n    st = tile(st,10.0);\n  \n    st = rotate2D(st,dist/(mdist/5.0)*PI*2.0);\n\n    gl_FragColor = vec4(vec3(concentricCircles(st, vec2(0.0,0.0), 5.0, 5.0),concentricCircles(st, vec2(0.0,0.0), 10.0, 10.0),concentricCircles(st, vec2(0.0,0.0), 20.0, 10.0)),1.0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497f7f6b6a61001c49b737",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64497f7f6b6a61001c49b737"
      },
      {
        "name": "basic.vert",
        "content": "// vert file and comments from adam ferriss\n// https://github.com/aferriss/p5jsShaderExamples\n\n// our vertex data\nattribute vec3 aPosition;\n\nvoid main() {\n\n  // copy the position data into a vec4, using 1.0 as the w component\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\n\n  // send the vertex information on to the fragment shader\n  gl_Position = positionVec4;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497f8730a3e2001a3c3cdc",
        "isSelectedFile": false,
        "updatedAt": "2023-04-26T20:13:01.530Z",
        "createdAt": "2023-04-26T20:13:01.530Z",
        "id": "64497f8730a3e2001a3c3cdc"
      }
    ],
    "createdAt": "2023-04-26T18:23:55.694Z",
    "id": "vKt9wLM44"
  },
  {
    "name": "circle mask face track drawing",
    "_id": "t1qgHlaxaA",
    "updatedAt": "2022-09-29T16:09:07.667Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6335c2c521744f70236e466a",
          "6335c2c521744f70236e4669",
          "6335c2c521744f70236e466b"
        ],
        "fileType": "folder",
        "_id": "6335c2c521744f70236e466c",
        "isSelectedFile": false,
        "createdAt": "2022-09-29T16:09:07.667Z",
        "updatedAt": "2022-09-29T16:09:07.667Z",
        "id": "6335c2c521744f70236e466c"
      },
      {
        "name": "sketch.js",
        "content": "let faceapi;\nlet video;\nlet detections;\nlet videoG\nlet circleG\nlet clipG\nlet circleFaceG\n\n// by default all options are set to true\nconst detection_options = {\n    withLandmarks: true,\n    withDescriptors: false,\n}\n\n\nfunction setup() {\n    createCanvas(360, 270);\n\n    // load up your video\n    video = createCapture(VIDEO);\n    video.size(width, height);\n    // video.hide(); // Hide the video element, and just show the canvas\n    circleG = createGraphics(width,height)\n    videoG = createGraphics(width,height)\n    clipG = createImage(width,height)\n    circleFaceG = createGraphics(width,height)\n    faceapi = ml5.faceApi(video, detection_options, modelReady)\n    textAlign(RIGHT);\n}\n\nfunction modelReady() {\n    console.log('ready!')\n    console.log(faceapi)\n    faceapi.detect(gotResults)\n\n}\n\nfunction gotResults(err, result) {\n    if (err) {\n        console.log(err)\n        return\n    }\n    // console.log(result)\n    detections = result;\n\n    // background(220);\n    background(255);\n    //image(video, 0,0, width, height)\n    videoG.copy(video,0,0,width,height,0,0,width,height)\n    clipG.copy(videoG,0,0,width,height,0,0,width,height)\n    clipG.mask(circleG)\n    image(video,0,0,width,height)\n    image(circleFaceG,0,0,width,height)\n    //image(circleG,0,0,width,height)\n    if (detections) {\n        if (detections.length > 0) {\n            // console.log(detections)\n            drawBox(detections)\n            //drawLandmarks(detections)\n        }\n\n    }\n    faceapi.detect(gotResults)\n}\n\nfunction drawBox(detections){\n    circleG.clear()\n    for(let i = 0; i < detections.length; i++){\n        const alignedRect = detections[i].alignedRect;\n        const x = alignedRect._box._x\n        const y = alignedRect._box._y\n        const boxWidth = alignedRect._box._width\n        const boxHeight  = alignedRect._box._height\n        circleG.ellipse(x*1.5,y*1.5,boxWidth,boxHeight)\n          circleFaceG.copy(clipG,x,y,boxWidth,boxHeight,x,y,boxWidth,boxHeight)\n        noFill();\n        stroke(161, 95, 251);\n        strokeWeight(2);\n        rect(x, y, boxWidth, boxHeight);\n    }\n    \n}\n\nfunction drawLandmarks(detections){\n    noFill();\n    stroke(161, 95, 251)\n    strokeWeight(2)\n\n    for(let i = 0; i < detections.length; i++){\n        const mouth = detections[i].parts.mouth; \n        const nose = detections[i].parts.nose;\n        const leftEye = detections[i].parts.leftEye;\n        const rightEye = detections[i].parts.rightEye;\n        const rightEyeBrow = detections[i].parts.rightEyeBrow;\n        const leftEyeBrow = detections[i].parts.leftEyeBrow;\n\n        drawPart(mouth, true);\n        drawPart(nose, false);\n        drawPart(leftEye, true);\n        drawPart(leftEyeBrow, false);\n        drawPart(rightEye, true);\n        drawPart(rightEyeBrow, false);\n\n    }\n\n}\n\nfunction drawPart(feature, closed){\n    \n    beginShape();\n    for(let i = 0; i < feature.length; i++){\n        const x = feature[i]._x\n        const y = feature[i]._y\n        vertex(x, y)\n    }\n    \n    if(closed === true){\n        endShape(CLOSE);\n    } else {\n        endShape();\n    }\n    \n}",
        "children": [],
        "fileType": "file",
        "_id": "6335c2c521744f70236e4669",
        "isSelectedFile": true,
        "createdAt": "2022-09-29T16:09:07.667Z",
        "updatedAt": "2022-09-29T16:09:07.667Z",
        "id": "6335c2c521744f70236e4669"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>FaceApi Landmarks Demo</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n\n  <style></style>\n</head>\n\n<script src=\"sketch.js\"></script>\n\n<body>\n    <h1>FaceApi Landmarks Demo</h1>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "6335c2c521744f70236e466a",
        "isSelectedFile": false,
        "createdAt": "2022-09-29T16:09:07.667Z",
        "updatedAt": "2022-09-29T16:09:07.667Z",
        "id": "6335c2c521744f70236e466a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6335c2c521744f70236e466b",
        "isSelectedFile": false,
        "createdAt": "2022-09-29T16:09:07.667Z",
        "updatedAt": "2022-09-29T16:09:07.667Z",
        "id": "6335c2c521744f70236e466b"
      }
    ],
    "createdAt": "2022-09-29T16:09:07.667Z",
    "id": "t1qgHlaxaA"
  },
  {
    "name": "cv-examples: Face Tracking copy",
    "_id": "pLWRpjVYb",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "646f18ee3eb4ef95b94ee7c1",
          "646f18ee3eb4ef95b94ee7c2",
          "646f18ee3eb4ef95b94ee7c3"
        ],
        "fileType": "folder",
        "_id": "646f18ee3eb4ef95b94ee7c0",
        "isSelectedFile": false,
        "createdAt": "2018-11-06T14:56:32.208Z",
        "updatedAt": "2018-11-06T14:56:32.208Z",
        "id": "646f18ee3eb4ef95b94ee7c0"
      },
      {
        "name": "sketch.js",
        "content": "// https://kylemcdonald.github.io/cv-examples/\n// https://github.com/kylemcdonald/AppropriatingNewTechnologies/wiki/Week-2\n\nvar capture;\nvar tracker\nvar w = 640,\n    h = 480;\n\nfunction setup() {\n    capture = createCapture({\n        audio: false,\n        video: {\n            width: w,\n            height: h\n        }\n    }, function() {\n        console.log('capture ready.')\n    });\n    capture.elt.setAttribute('playsinline', '');\n    createCanvas(w, h);\n    capture.size(w, h);\n    capture.hide();\n\n    colorMode(HSB);\n\n    tracker = new clm.tracker();\n    tracker.init();\n    tracker.start(capture.elt);\n}\n\nfunction draw() {\n    image(capture, 0, 0, w, h);\n    var positions = tracker.getCurrentPosition();\n\n    noFill();\n    stroke(255);\n    beginShape();\n    for (var i = 0; i < positions.length; i++) {\n        vertex(positions[i][0], positions[i][1]);\n    }\n    endShape();\n\n    noStroke();\n    for (var i = 0; i < positions.length; i++) {\n        fill(map(i, 0, positions.length, 0, 360), 50, 100);\n        ellipse(positions[i][0], positions[i][1], 4, 4);\n        text(i, positions[i][0], positions[i][1]);\n    }\n\n    if (positions.length > 0) {\n        var mouthLeft = createVector(positions[44][0], positions[44][1]);\n        var mouthRight = createVector(positions[50][0], positions[50][1]);\n        var smile = mouthLeft.dist(mouthRight);\n        // uncomment the line below to show an estimate of amount \"smiling\"\n        // rect(20, 20, smile * 3, 20);\n\n        // uncomment for a surprise\n        noStroke();\n        fill(0, 255, 255);\n        ellipse(positions[62][0], positions[62][1], 50, 50);\n    }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "646f18ee3eb4ef95b94ee7c2",
        "isSelectedFile": true,
        "createdAt": "2018-11-06T14:56:32.208Z",
        "updatedAt": "2018-11-06T14:56:32.208Z",
        "id": "646f18ee3eb4ef95b94ee7c2"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>FaceTracking</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://www.auduno.com/clmtrackr/build/clmtrackr.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</head>\n\n<body>\n    <script src=\"sketch.js\"></script>\n</body>\n\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "646f18ee3eb4ef95b94ee7c1",
        "isSelectedFile": false,
        "createdAt": "2018-11-06T14:56:32.208Z",
        "updatedAt": "2018-11-06T14:56:32.208Z",
        "id": "646f18ee3eb4ef95b94ee7c1"
      },
      {
        "name": "style.css",
        "content": "* {\n    font-family: sans-serif;\n}",
        "children": [],
        "fileType": "file",
        "_id": "646f18ee3eb4ef95b94ee7c3",
        "isSelectedFile": false,
        "createdAt": "2018-11-06T14:56:32.208Z",
        "updatedAt": "2018-11-06T14:56:32.208Z",
        "id": "646f18ee3eb4ef95b94ee7c3"
      }
    ],
    "createdAt": "2023-05-25T08:14:37.683Z",
    "updatedAt": "2023-05-25T08:14:37.683Z",
    "id": "pLWRpjVYb"
  },
  {
    "name": "delay camera graphic",
    "_id": "8YEu0w6jc",
    "updatedAt": "2022-10-02T14:55:12.399Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6337686b94366bc6c5bf8b29",
          "6337686b94366bc6c5bf8b28",
          "6337686b94366bc6c5bf8b2a"
        ],
        "fileType": "folder",
        "_id": "6337686b94366bc6c5bf8b2b",
        "createdAt": "2022-10-02T14:55:12.399Z",
        "updatedAt": "2022-10-02T14:55:12.399Z",
        "id": "6337686b94366bc6c5bf8b2b"
      },
      {
        "name": "sketch.js",
        "content": "let savedFrames = [];\nlet i = 0;\nlet cam;\nlet g\n\nfunction setup() {\n  createCanvas(400, 400);\n  cam = createCapture(VIDEO);\n  g = createGraphics(width,height)\n}\n\nfunction draw() {\n  background(220);\n  if (frameCount < 600) {\n    savedFrames.push(cam.get());\n  } else {\n    g.image(savedFrames[frameCount%600], 0, 0);\n    image(g,0,0)\n    //i++;\n    if (i===savedFrames.length) i=0\n  }\n  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6337686b94366bc6c5bf8b28",
        "isSelectedFile": true,
        "createdAt": "2022-10-02T14:55:12.399Z",
        "updatedAt": "2022-10-02T14:55:12.399Z",
        "id": "6337686b94366bc6c5bf8b28"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6337686b94366bc6c5bf8b29",
        "createdAt": "2022-10-02T14:55:12.399Z",
        "updatedAt": "2022-10-02T14:55:12.399Z",
        "id": "6337686b94366bc6c5bf8b29"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6337686b94366bc6c5bf8b2a",
        "createdAt": "2022-10-02T14:55:12.399Z",
        "updatedAt": "2022-10-02T14:55:12.399Z",
        "id": "6337686b94366bc6c5bf8b2a"
      }
    ],
    "createdAt": "2022-09-30T22:06:44.333Z",
    "id": "8YEu0w6jc"
  },
  {
    "name": "Demo - First Shader Texture Pixelated copy",
    "_id": "BFRnFNpUD",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64f0d95de67f5508978d9f1b",
          "64f0d95de67f5508978d9f1c",
          "64f0d95de67f5508978d9f1d",
          "64f0d95de67f5508978d9f1e",
          "64f0d95de67f5508978d9f1f",
          "64f0d95de67f5508978d9f20",
          "64f0d95de67f5508978d9f21"
        ],
        "fileType": "folder",
        "_id": "64f0d95de67f5508978d9f1a",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1a"
      },
      {
        "name": "sketch.js",
        "content": "let firstShader;\nlet img;\n\nfunction preload() {\n  firstShader = loadShader('shader.vert', 'shader.frag');\n\n  img = loadImage(\"mountain.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n  noStroke();\n}\n\nfunction draw() {\n  background(220);\n\n  shader(firstShader);\n\n  let mx = mouseX / width;\n  let my = mouseY / height;\n\n  firstShader.setUniform(\"mouse\", [mx, my]);\n  firstShader.setUniform(\"tex\", img);\n\n  rect(0, 0, width, height);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f20",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f20"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f1c",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f21",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f21"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f1f",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1f"
      },
      {
        "name": "shader.frag",
        "content": "// // Set the precision\n// precision highp float;\n\n// uniform vec2 mouse;\n// uniform sampler2D tex;\n\n// varying vec2 vTexCoord;\n\n// void main() {\n  \n//   vec2 uv = vTexCoord;\n//   // Flip the texture coords\n//   uv.y = 1.0 - uv.y;\n  \n//   vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n//   vec2 pixelUv = floor( uv * steps ) / steps;\n  \n//   vec4 color = texture2D(tex, pixelUv);\n  \n//   gl_FragColor = color;\n// } \n// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n\n  // Calculate the distance from the current fragment to the mouse position\n  float distanceToMouse = distance(uv, mouse);\n\n  // Check if the distance is within the specified radius\n  if (distanceToMouse < 0.1) { // 0.1 is equivalent to 100 in normalized coordinates\n    // Apply pixelation effect only within the circular region\n    vec2 steps = vec2(200.0, 200.0) * mouse;\n    vec2 pixelUv = floor(uv * steps) / steps;\n    vec4 color = texture2D(tex, pixelUv);\n    gl_FragColor = color;\n  } else {\n    // Keep the original color outside the circular region\n    gl_FragColor = texture2D(tex, uv);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f1e",
        "isSelectedFile": true,
        "createdAt": "2023-12-11T19:37:36.717Z",
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1e"
      },
      {
        "name": "flowers.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f1b",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/fa25c0d5-d9f4-4a82-873c-9668936bd7e7.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "createdAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1b"
      },
      {
        "name": "mountain.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64f0d95de67f5508978d9f1d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/ab32db9a-7afc-4553-8b35-29330a9650e2.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-12-11T19:37:36.717Z",
        "createdAt": "2023-12-11T19:37:36.717Z",
        "id": "64f0d95de67f5508978d9f1d"
      }
    ],
    "createdAt": "2023-08-31T18:18:06.982Z",
    "updatedAt": "2023-12-11T19:37:36.717Z",
    "id": "BFRnFNpUD"
  },
  {
    "name": "demo finish",
    "_id": "kjDIO6FRp",
    "updatedAt": "2023-03-08T20:35:22.335Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6408efbdda46578279b2d0e5",
          "6408efbdda46578279b2d0e4",
          "6408efbdda46578279b2d0e6"
        ],
        "fileType": "folder",
        "_id": "6408efbdda46578279b2d0e7",
        "createdAt": "2023-03-08T20:35:22.335Z",
        "updatedAt": "2023-03-08T20:35:22.335Z",
        "id": "6408efbdda46578279b2d0e7"
      },
      {
        "name": "sketch.js",
        "content": "let x = 300;\nlet y = 300;\nlet xspeed = 5;\nlet yspeed = 2;\n\nlet r = 25;\n\nfunction setup() {\n  createCanvas(600, 600);\n}\n\nfunction draw() {\n  background(0);\n  ellipse(x, y, r*2, r*2);\n  x += xspeed;\n  y += yspeed;\n  if (x > width - r || x < r) {\n    xspeed = -xspeed;\n  }\n  if (y > height - r || y < r) {\n    yspeed = -yspeed;\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "6408efbdda46578279b2d0e4",
        "isSelectedFile": true,
        "createdAt": "2023-03-08T20:35:22.335Z",
        "updatedAt": "2023-03-08T20:35:22.335Z",
        "id": "6408efbdda46578279b2d0e4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6408efbdda46578279b2d0e5",
        "createdAt": "2023-03-08T20:35:22.335Z",
        "updatedAt": "2023-03-08T20:35:22.335Z",
        "id": "6408efbdda46578279b2d0e5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6408efbdda46578279b2d0e6",
        "createdAt": "2023-03-08T20:35:22.335Z",
        "updatedAt": "2023-03-08T20:35:22.335Z",
        "id": "6408efbdda46578279b2d0e6"
      }
    ],
    "createdAt": "2023-03-08T20:27:49.945Z",
    "id": "kjDIO6FRp"
  },
  {
    "name": "demo start",
    "_id": "vK-UmW9u4",
    "updatedAt": "2023-03-08T21:03:43.382Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6408efcb7cdc8b07d65f0d5e",
          "6408efcb7cdc8b07d65f0d5d",
          "6408efcb7cdc8b07d65f0d5f"
        ],
        "fileType": "folder",
        "_id": "6408efcb7cdc8b07d65f0d60",
        "createdAt": "2023-03-08T21:03:43.382Z",
        "updatedAt": "2023-03-08T21:03:43.382Z",
        "isSelectedFile": false,
        "id": "6408efcb7cdc8b07d65f0d60"
      },
      {
        "name": "sketch.js",
        "content": "let x = 300\nlet y = 300\nlet r = 25\n\nlet xspeed = 3\nlet yspeed = 2\nfunction setup() {\n  createCanvas(600, 600);\n}\n\nfunction draw() {\n  background(0);\n  ellipse(x, y, r*2, r*2)\n  \n  x+=xspeed\n  y+=yspeed\n  \n  if (x > width - r || x < 0+r) {\n    xspeed = xspeed * -1\n  }\n  \n  if (y > height - r || y < 0+r) {\n    yspeed = yspeed * -1\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6408efcb7cdc8b07d65f0d5d",
        "isSelectedFile": true,
        "createdAt": "2023-03-08T21:03:43.382Z",
        "updatedAt": "2023-03-08T21:03:43.382Z",
        "id": "6408efcb7cdc8b07d65f0d5d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6408efcb7cdc8b07d65f0d5e",
        "createdAt": "2023-03-08T21:03:43.382Z",
        "updatedAt": "2023-03-08T21:03:43.382Z",
        "isSelectedFile": false,
        "id": "6408efcb7cdc8b07d65f0d5e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6408efcb7cdc8b07d65f0d5f",
        "createdAt": "2023-03-08T21:03:43.382Z",
        "updatedAt": "2023-03-08T21:03:43.382Z",
        "isSelectedFile": false,
        "id": "6408efcb7cdc8b07d65f0d5f"
      }
    ],
    "createdAt": "2023-03-08T20:35:46.942Z",
    "id": "vK-UmW9u4"
  },
  {
    "name": "dog face",
    "_id": "OFF0LUWJx",
    "updatedAt": "2022-11-13T18:56:47.641Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63713dab0df0405f70374388",
          "63713dab0df0405f70374387",
          "63713dab0df0405f70374389"
        ],
        "fileType": "folder",
        "_id": "63713dab0df0405f7037438a",
        "createdAt": "2022-11-13T18:56:47.641Z",
        "updatedAt": "2022-11-13T18:56:47.641Z",
        "id": "63713dab0df0405f7037438a"
      },
      {
        "name": "sketch.js",
        "content": "// https://github.com/runemadsen/programmingdesignsystems.com/blob/master/examples/shape/custom-shapes/quad-circle.js\nfunction setup()\n{\n  createCanvas(600, 500);\n  background(240);\n\n \n}\n\nfunction draw() {\n  background(240)\n   const r = width * 0.25;\n  const offset1 = 30\n  const offset2 = 30\n  const offset3 = 20\n  noStroke();\n  fill(30);\n  //console.log(mouseX)\n  translate(width/2, height/2);\n  beginShape();\n    vertex(0, -r)\n    quadraticVertex(r-offset1, -r, r, 0+offset1);\n    quadraticVertex(r+offset2, r-offset3, 0, r-offset3);\n    quadraticVertex(-r-offset2, r-offset3, -r, 0+offset1);\n    quadraticVertex(-r+offset1, -r, 0, -r);\n  endShape();\n\n  //noLoop();\n}",
        "children": [],
        "fileType": "file",
        "_id": "63713dab0df0405f70374387",
        "isSelectedFile": true,
        "createdAt": "2022-11-13T18:56:47.641Z",
        "updatedAt": "2022-11-13T18:56:47.641Z",
        "id": "63713dab0df0405f70374387"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63713dab0df0405f70374388",
        "createdAt": "2022-11-13T18:56:47.641Z",
        "updatedAt": "2022-11-13T18:56:47.641Z",
        "id": "63713dab0df0405f70374388"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63713dab0df0405f70374389",
        "createdAt": "2022-11-13T18:56:47.641Z",
        "updatedAt": "2022-11-13T18:56:47.641Z",
        "id": "63713dab0df0405f70374389"
      }
    ],
    "createdAt": "2022-11-13T18:55:55.545Z",
    "id": "OFF0LUWJx"
  },
  {
    "name": "Example 3.10: Swinging pendulum copy copy",
    "_id": "Xv02ToqT_I",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "656636456239477e09b46955",
          "656636456239477e09b46956",
          "656636456239477e09b46957",
          "656636456239477e09b46958",
          "656636456239477e09b46959"
        ],
        "fileType": "folder",
        "_id": "656636456239477e09b46954",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": false,
        "id": "656636456239477e09b46954"
      },
      {
        "name": "style.css",
        "content": "html, body {\n margin: 0;\n padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "656636456239477e09b46959",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": false,
        "id": "656636456239477e09b46959"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.min.js\"></script>\n    <meta charset=\"utf-8\" />\n    <title>NOC_3_07_oscillating_objects</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"pendulum.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "656636456239477e09b46955",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": false,
        "id": "656636456239477e09b46955"
      },
      {
        "name": "pendulum.js",
        "content": "// The Nature of Code\n// Daniel Shiffman\n// http://natureofcode.com\n\n// Pendulum\n\n// A Simple Pendulum Class\n\n// This constructor could be improved to allow a greater variety of pendulums\nclass Pendulum {\n  constructor(x, y, r) {\n    // Fill all variables\n    this.pivot = createVector(x, y);\n    this.bob = createVector();\n    this.r = r;\n    this.angle = PI-0.5;\n\n    this.angleVelocity = 0;\n    this.angleAcceleration = 0;\n    this.damping = 0.995; // Arbitrary damping\n    this.ballr = 24.0; // Arbitrary ball radius\n  }\n\n  // Function to update position\n  update() {\n    // if (mouseIsPressed) {\n    //   this.angleAcceleration = map(mouseX, 0, width, -0.001, 0.001);\n    // } else {\n    //   this.angleAcceleration = 0;\n    // }\n\n    // As long as we aren't dragging the pendulum, let it swing!\n    if (!this.dragging) {\n      let gravity = 0.4; // Arbitrary constant\n      this.angleAcceleration = (gravity / this.r) * sin(this.angle); // Calculate acceleration (see: http://www.myphysicslab.com/pendulum1.html)\n\n      this.angleVelocity += this.angleAcceleration; // Increment velocity\n      this.angle += this.angleVelocity; // Increment angle\n      this.angleVelocity *= this.damping; // Apply some damping\n    }\n  }\n\n  show() {\n    this.bob.set(this.r * sin(this.angle), this.r * cos(this.angle), 0); // Polar to cartesian conversion\n    this.bob.add(this.pivot); // Make sure the position is relative to the pendulum's origin\n    \n    push();\n    translate(this.pivot.x, this.pivot.y - this.r/2);\n    rectMode(CENTER);\n    rotate(-this.angle);\n    square(0, 0, 100);\n    pop();\n\n    stroke(0);\n    strokeWeight(2);\n    // Draw the arm\n    line(this.pivot.x, this.pivot.y, this.bob.x, this.bob.y);\n    fill(127);\n    // Draw the ball\n    circle(this.bob.x, this.bob.y, this.ballr * 2);\n  }\n\n  // The methods below are for mouse interaction\n\n  // This checks to see if we clicked on the pendulum ball\n  clicked(mx, my) {\n    let d = dist(mx, my, this.bob.x, this.bob.y);\n    if (d < this.ballr) {\n      this.dragging = true;\n    }\n  }\n\n  // This tells us we are not longer clicking on the ball\n  stopDragging() {\n    this.angleVelocity = 0; // No velocity once you let go\n    this.dragging = false;\n  }\n\n  drag() {\n    // If we are draging the ball, we calculate the angle between the\n    // pendulum origin and mouse position\n    // we assign that angle to the pendulum\n    if (this.dragging) {\n      let diff = p5.Vector.sub(this.pivot, createVector(mouseX, mouseY)); // Difference between 2 points\n      this.angle = atan2(-1 * diff.y, diff.x) - radians(90); // Angle relative to vertical axis\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "656636456239477e09b46956",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": false,
        "id": "656636456239477e09b46956"
      },
      {
        "name": "sketch.js",
        "content": "// The Nature of Code\n// Daniel Shiffman\n// http://natureofcode.com\n\n// Pendulum\n\n// A simple pendulum simulation\n// Given a pendulum with an angle theta (0 being the pendulum at rest) and a radius r\n// we can use sine to calculate the angular component of the gravitational force.\n\n// Gravity Force = Mass * Gravitational Constant;\n// Pendulum Force = Gravity Force * sine(theta)\n// Angular Acceleration = Pendulum Force / Mass = gravitational acceleration * sine(theta);\n\n// Note this is an ideal world scenario with no tension in the\n// pendulum arm, a more realistic formula might be:\n// Angular Acceleration = (g / R) * sine(theta)\n\n// For a more substantial explanation, visit:\n// http://www.myphysicslab.com/pendulum1.html\nlet pendulum;\n\nfunction setup() {\n  createCanvas(600, 400);\n  // Make a new Pendulum with an origin position and armlength\n  pendulum = new Pendulum(width / 2, height, 175);\n}\n\n\nfunction mousePressed() {\n  //pendulum.angle = PI-0.5;\n}\n\nfunction draw() {\n  background(255);\n  pendulum.update();\n  pendulum.show();\n\n  pendulum.drag(); // for user interaction\n}\n\n// function mousePressed() {\n//   pendulum.clicked(mouseX, mouseY);\n// }\n\n// function mouseReleased() {\n//   pendulum.stopDragging();\n// }\n",
        "children": [],
        "fileType": "file",
        "_id": "656636456239477e09b46958",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": true,
        "id": "656636456239477e09b46958"
      },
      {
        "name": "screenshot.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "656636456239477e09b46957",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/5675906e-066e-4b0d-8483-9e2dc8d981ea.png",
        "updatedAt": "2023-11-28T18:54:47.048Z",
        "createdAt": "2023-11-28T18:54:47.048Z",
        "isSelectedFile": false,
        "id": "656636456239477e09b46957"
      }
    ],
    "createdAt": "2023-11-28T18:49:42.678Z",
    "updatedAt": "2023-11-28T18:54:47.048Z",
    "id": "Xv02ToqT_I"
  },
  {
    "name": "FaceApi_Video_Landmarks copy",
    "_id": "sMFdIFjgo",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6339a65be58da8aafa0c3f63",
          "6339a65be58da8aafa0c3f64"
        ],
        "fileType": "folder",
        "_id": "6339a65be58da8aafa0c3f62",
        "createdAt": "2020-03-13T00:48:56.336Z",
        "updatedAt": "2020-03-13T00:48:56.336Z",
        "id": "6339a65be58da8aafa0c3f62"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>FaceApi Landmarks Demo</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n\n  <style></style>\n</head>\n\n<script src=\"sketch.js\"></script>\n\n<body>\n    <h1>FaceApi Landmarks Demo</h1>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "6339a65be58da8aafa0c3f63",
        "createdAt": "2020-03-13T00:48:56.336Z",
        "updatedAt": "2020-03-13T00:48:56.336Z",
        "id": "6339a65be58da8aafa0c3f63"
      },
      {
        "name": "sketch.js",
        "content": "let faceapi;\nlet video;\nlet detections;\n\n// by default all options are set to true\nconst detection_options = {\n    withLandmarks: true,\n    withDescriptors: false,\n}\n\n\nfunction setup() {\n    createCanvas(360, 270);\n\n    // load up your video\n    video = createCapture(VIDEO);\n    video.size(width, height);\n    // video.hide(); // Hide the video element, and just show the canvas\n    faceapi = ml5.faceApi(video, detection_options, modelReady)\n    textAlign(RIGHT);\n}\n\nfunction modelReady() {\n    console.log('ready!')\n    console.log(faceapi)\n    faceapi.detect(gotResults)\n\n}\n\nfunction gotResults(err, result) {\n    if (err) {\n        console.log(err)\n        return\n    }\n    // console.log(result)\n    detections = result;\n\n    // background(220);\n    background(255);\n    image(video, 0,0, width, height)\n    if (detections) {\n        if (detections.length > 0) {\n            // console.log(detections)\n            drawBox(detections)\n            drawLandmarks(detections)\n        }\n\n    }\n    faceapi.detect(gotResults)\n}\n\nfunction drawBox(detections){\n    for(let i = 0; i < detections.length; i++){\n        const alignedRect = detections[i].alignedRect;\n        const x = alignedRect._box._x\n        const y = alignedRect._box._y\n        const boxWidth = alignedRect._box._width\n        const boxHeight  = alignedRect._box._height\n        \n        noFill();\n        stroke(161, 95, 251);\n        strokeWeight(2);\n        rect(x, y, boxWidth, boxHeight);\n    }\n    \n}\n\nfunction drawLandmarks(detections){\n    noFill();\n    stroke(161, 95, 251)\n    strokeWeight(2)\n\n    for(let i = 0; i < detections.length; i++){\n        const mouth = detections[i].parts.mouth; \n        const nose = detections[i].parts.nose;\n        const leftEye = detections[i].parts.leftEye;\n        const rightEye = detections[i].parts.rightEye;\n        const rightEyeBrow = detections[i].parts.rightEyeBrow;\n        const leftEyeBrow = detections[i].parts.leftEyeBrow;\n\n        drawPart(mouth, true);\n        drawPart(nose, false);\n        drawPart(leftEye, true);\n        drawPart(leftEyeBrow, false);\n        drawPart(rightEye, true);\n        drawPart(rightEyeBrow, false);\n\n    }\n\n}\n\nfunction drawPart(feature, closed){\n    \n    beginShape();\n    for(let i = 0; i < feature.length; i++){\n        const x = feature[i]._x\n        const y = feature[i]._y\n        vertex(x, y)\n    }\n    \n    if(closed === true){\n        endShape(CLOSE);\n    } else {\n        endShape();\n    }\n    \n}",
        "children": [],
        "fileType": "file",
        "_id": "6339a65be58da8aafa0c3f64",
        "isSelectedFile": true,
        "createdAt": "2020-03-13T00:48:56.336Z",
        "updatedAt": "2020-03-13T00:48:56.336Z",
        "id": "6339a65be58da8aafa0c3f64"
      }
    ],
    "createdAt": "2022-10-02T14:55:20.944Z",
    "updatedAt": "2022-10-02T14:55:20.944Z",
    "id": "sMFdIFjgo"
  },
  {
    "name": "Final Project copy",
    "_id": "ZRPw2TiWK",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64149f43331f021471a48897",
          "64149f43331f021471a48898",
          "64149f43331f021471a48899"
        ],
        "fileType": "folder",
        "_id": "64149f43331f021471a48896",
        "isSelectedFile": false,
        "createdAt": "2023-03-17T17:42:13.692Z",
        "updatedAt": "2023-03-17T17:42:13.692Z",
        "id": "64149f43331f021471a48896"
      },
      {
        "name": "sketch.js",
        "content": "//array\nlet faces=[];\n\n\nfunction setup() {\n  createCanvas(550, 400);\n  for (let i=0; i<5; i++) {\n    faces.push ( new Face (random(width), random(height),\"#FFFF00\", random([\"happy\",\"frown\"])));\n  }\n}\n\nfunction draw() { \n     background(0);\n    \n  ////FACES\n//   //happy face\n// ellipse (96, 146, 155, 155);\n//   //hf eyes\n// ellipse(56, 132, 25, 25);\n// ellipse(126, 132, 25, 25);\n\n// //SMILE\n//    arc(100, 180, 50, 40, 18, PI + QUARTER_PI, CHORD);\n//   //sad face \n//   ellipse (410, 146, 155, 155)\n//   //sf eyes\n// ellipse(446, 132, 25, 25);\n// ellipse(370, 132, 25, 25);\n//     arc(400, 155, 100, 70, 20, HALF_PI);\n  \n    //draw new face\n  for(let i=0; i<5; i++) {\n    // faces[i].draw()\n    \n    //faces[i].startMotion()\n    faces[i].move()\n    faces[i].show()\n  }\n//   for (let i=0; i < 5000, i++;){\n//     faces[i].draw();\n  \n    \n//     //faces move  \n//     faces[i].move ();\n    \n//    //faces are this color  \n//     fill(this.c);\n\n}\n\n\n  \nfunction mousePressed () {\n  for (let i=0; i<5; i++){\n    faces [i].startMotion (random (-10, 10), random (-10, 10))\n  }\n}\n  \n  \nclass Face {\n  constructor (ax,ay,ac, faceType){\n  this.x = ax;\n  this.y = ay;\n  this.c = ac;\n  this.faceType = faceType\n  this.xspeed = random(3);\n  this.yspeed = random(2);\n  }\n  \n  show() {\n    push()\n    translate(this.x, this.y)\n    // face\n    fill(this.c)\n    circle(0, 0, 50)\n    \n    // if faceType === \"happy\", draw happy face\n    if (this.faceType === \"happy\") {\n      //left eye\n      fill(0)\n      circle(-10,-5,10)\n      \n      //right eye\n      fill(0)\n      circle(10, -5, 10)\n    } else {\n      //left eye\n      fill(255)\n      circle(-10,-5,10)\n      \n      //right eye\n    }\n    \n    pop()\n    // else, draw frown face\n  }\n  \n  startMotion (xspeed, yspeed){\n    this.xspeed=xspeed;\n    this.yspeed = yspeed;\n  }\n  \n  move (){\n    this.x = this.x + this.xspeed;\n    if ((this.x>width) || (this.x <0 )){\n      this.xspeed*=-1; \n    }\n      \n    this.y=this.y+this.yspeed;\n    if ((this.y>height) || (this.y <0 )){\n      this.yspeed*=-1;\n    }\n  }\n  \n  // a method that check collision, \n  // if two balls collide\n  // push a new ball to your faces array\n  // https://www.youtube.com/watch?v=uAfw-ko3kB8\n\n\n  \n  \n    \n  }\n\n",
        "children": [],
        "fileType": "file",
        "_id": "64149f43331f021471a48898",
        "isSelectedFile": true,
        "createdAt": "2023-03-17T17:42:13.692Z",
        "updatedAt": "2023-03-17T17:42:13.692Z",
        "id": "64149f43331f021471a48898"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64149f43331f021471a48897",
        "isSelectedFile": false,
        "createdAt": "2023-03-17T17:42:13.692Z",
        "updatedAt": "2023-03-17T17:42:13.692Z",
        "id": "64149f43331f021471a48897"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64149f43331f021471a48899",
        "isSelectedFile": false,
        "createdAt": "2023-03-17T17:42:13.692Z",
        "updatedAt": "2023-03-17T17:42:13.692Z",
        "id": "64149f43331f021471a48899"
      }
    ],
    "createdAt": "2023-03-17T17:11:31.164Z",
    "updatedAt": "2023-03-17T17:42:13.692Z",
    "id": "ZRPw2TiWK"
  },
  {
    "name": "flock of shader",
    "_id": "LPVIjn19v",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "644988636b6a61001c4a2485",
          "64497204f11dacbc522f11c8",
          "64497204f11dacbc522f11c9",
          "64497204f11dacbc522f11ca",
          "64497204f11dacbc522f11cb",
          "64497204f11dacbc522f11cc"
        ],
        "fileType": "folder",
        "_id": "64497204f11dacbc522f11c7",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11c7"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * @name Applying Shaders as Textures\n * @description Shaders can be applied to 2D/3D shapes as textures.\n * To learn more about shaders and p5.js: https://itp-xstory.github.io/p5js-shaders/\n */\n\nlet theShader;\nlet webGLCanvas;\nlet originalGraphics;\nlet eyeGraphics;\nconst flock = [];\n\nfunction preload() {\n  // load the shader\n  theShader = loadShader(\"texture.vert\", \"texture.frag\");\n}\n\nfunction setup() {\n  // disables scaling for retina screens which can create inconsistent scaling between displays\n  //pixelDensity(1);\n  // shaders require WEBGL mode to work\n  // createCanvas(1000, 1000);\n  createCanvas(displayWidth, displayHeight);\n  noCursor()\n  noStroke();\n\n  webGLCanvas = createGraphics(width, height, WEBGL);\n  originalGraphics = createGraphics(width, height);\n  eyeGraphics = createGraphics(width, height);\n\n  alignSlider = 2; //createSlider(0, 2, 1.5, 0.1);\n  cohesionSlider = 0; //createSlider(0, 2, 1, 0.1);\n  separationSlider = 2; //createSlider(0, 2, 2, 0.1);\n\n  originalGraphics.noStroke();\n  webGLCanvas.noStroke();\n  noStroke();\n\n  for (let i = 0; i < 40; i++) {\n    flock.push(new Boid());\n  }\n}\n\nfunction draw() {\n  // here we're using setUniform() to send our uniform values to the shader\n  theShader.setUniform(\"resolution\", [width, height]);\n  theShader.setUniform(\"time\", millis() / 1000.0);\n  theShader.setUniform(\"mouse\", [mouseX, map(mouseY, 0, height, height, 0)]);\n\n  webGLCanvas.shader(theShader);\n  theShader.setUniform(\"u_resolution\", [width / width, height / height]);\n  theShader.setUniform(\"u_time\", millis() / 1000);\n  theShader.setUniform(\"u_mouse\", [mouseX / width, mouseY / height]);\n  theShader.setUniform(\"u_tex\", originalGraphics);\n  //console.log(mouseX/width)\n\n  webGLCanvas.clear();\n  webGLCanvas.rect(-width / 2, -height / 2, width, height);\n\n  originalGraphics.background(240);\n  eyeGraphics.clear();\n  for (let boid of flock) {\n    //boid.edges();\n    boid.flock(flock);\n    boid.update();\n    boid.show(originalGraphics, eyeGraphics);\n  }\n\n  image(webGLCanvas, 0, 0);\n  image(eyeGraphics, 0, 0);\n  //image(originalGraphics,0,0)\n  //image(eyeGraphics,0,0)\n}\n\nfunction windowResized() {\n  //resizeCanvas(windowWidth, windowHeight);\n  \n}\n\nfunction keyPressed() {\n  if (key === \"f\" || key === \"F\") {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n  // if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n  //   let fs = fullscreen();\n  //   fullscreen(!fs);\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497204f11dacbc522f11c9",
        "isSelectedFile": true,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11c9"
      },
      {
        "name": "index.html",
        "content": "<!-- This is a static file -->\n<!-- served from your routes in server.js -->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>shader as texture</title>\n    <meta name=\"description\" content=\"p5.js CDN Template\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script> \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.js\"></script>\n    <script src=\"boid.js\"></script>\n    <script src=\"sketch.js\"></script>   \n  </head>\n  <body>\n    <header>\n<!--       <h1>\n        shader as texture\n      </h1> -->\n    </header>    \n\n    \n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64497204f11dacbc522f11c8",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11c8"
      },
      {
        "name": "style.css",
        "content": "* {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden;\n}\ncanvas {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden\n}\n\ncanvas::-webkit-scrollbar, html::-webkit-scrollbar, body::-webkit-scrollbar {\n    display: none;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497204f11dacbc522f11ca",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11ca"
      },
      {
        "name": "texture.frag",
        "content": "// casey conchinha - @kcconch ( https://github.com/kcconch )\n// louise lessel - @louiselessel ( https://github.com/louiselessel )\n// more p5.js + shader examples: https://itp-xstory.github.io/p5js-shaders/\n// rotate/tile functions from example by patricio gonzalez vivo\n// @patriciogv ( patriciogonzalezvivo.com )\n\n\nprecision mediump float;\n\n  #define PI 3.141592653589793\n  #define TAU 6.283185307179586\n\nuniform vec2 u_resolution;\n\tuniform vec2 u_mouse;\n\tuniform float u_time;\n\tuniform vec3 u_lightDir;\n\tuniform vec3 u_col;\n\tuniform mat3 uNormalMatrix;\n\tuniform float u_pixelDensity;\n\tuniform sampler2D u_tex;\n\n\t//attributes, in\n\tvarying vec4 var_centerGlPosition;\n\tvarying vec3 var_vertNormal;\n\tvarying vec2 var_vertTexCoord;\n\t\n\tfloat rand(vec2 c){\n\t\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t}\n\n\tmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n\t}\n\n\tmat2 scale2d(vec2 _scale){\n\t\t\treturn mat2(_scale.x,0.0,\n\t\t\t\t\t\t\t\t\t0.0,_scale.y);\n\t}\n\n\tvec2 tile (vec2 _st, float _zoom) {\n\t\t\t_st *= _zoom;\n\t\t\treturn fract(_st);\n\t}\n\n\t//\tClassic Perlin 3D Noise \n\t//\tby Stefan Gustavson\n\n\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\tvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n\tfloat cnoise(vec3 P){\n\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\tPi0 = mod(Pi0, 289.0);\n\t\tPi1 = mod(Pi1, 289.0);\n\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\tvec4 iz0 = Pi0.zzzz;\n\t\tvec4 iz1 = Pi1.zzzz;\n\n\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\tvec4 ixy1 = permute(ixy + iz1);\n\n\t\tvec4 gx0 = ixy0 / 7.0;\n\t\tvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n\t\tgx0 = fract(gx0);\n\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\t\tvec4 gx1 = ixy1 / 7.0;\n\t\tvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n\t\tgx1 = fract(gx1);\n\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\tg000 *= norm0.x;\n\t\tg010 *= norm0.y;\n\t\tg100 *= norm0.z;\n\t\tg110 *= norm0.w;\n\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\tg001 *= norm1.x;\n\t\tg011 *= norm1.y;\n\t\tg101 *= norm1.z;\n\t\tg111 *= norm1.w;\n\n\t\tfloat n000 = dot(g000, Pf0);\n\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\tfloat n111 = dot(g111, Pf1);\n\n\t\tvec3 fade_xyz = fade(Pf0);\n\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n\t\treturn 2.2 * n_xyz;\n\t}\n\t\n\t\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\n\t\n\tfloat pNoise(vec2 p, int res){\n\t\t// p+=u_noise_pan;\n\t\tfloat persistance = .5;\n\t\tfloat n = 0.;\n\t\tfloat normK = 0.;\n\t\tfloat f = 4.;\n\t\tfloat amp = 1.;\n\t\tint iCount = 0;\n\t\t//noprotect\n\t\tfor (int i = 0; i<50; i++){\n\t\t\tn+=amp*noise(p, f);\n\t\t\tf*=2.;\n\t\t\tnormK+=amp;\n\t\t\tamp*=persistance;\n\t\t\tif (iCount == res) break;\n\t\t\tiCount++;\n\t\t}\n\t\tfloat nf = n/normK;\n\t\treturn nf*nf*nf*nf;\n\t}\n\n\tvec2 random2( vec2 p ) {\n\t\t\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n\t}\n\nvoid main (void) {\n//     vec2 st = gl_FragCoord.xy/resolution.xy;\n//     vec2 mst = gl_FragCoord.xy/mouse.xy;\n//     float mdist= distance(vec2(1.0,1.0), mst);\n\n//     float dist = distance(st,vec2(sin(time/10.0),cos(time/10.0)));\n//     st = tile(st,10.0);\n  \n//     st = rotate2D(st,dist/(mdist/5.0)*PI*2.0);\n\n//     gl_FragColor = vec4(vec3(concentricCircles(st, vec2(0.0,0.0), 5.0, 5.0),concentricCircles(st, vec2(0.0,0.0), 10.0, 10.0),concentricCircles(st, vec2(0.0,0.0), 20.0, 10.0)),1.0);\n  \n  \t\tvec2 st = var_vertTexCoord.xy /u_resolution.xy; \n\n\t\t//st.x += cnoise( vec3(st*u_time,1.) )/5.*u_mouse.x;\n\t\tst.x += cnoise( vec3(st*3000.,1.) )/5.* 0.15;//u_mouse.x;\n\t\tst.y += cnoise( vec3(st*3000.,1.) )/5.* 0.15;\n\n\tvec3 colorYellow = vec3(255.-\n\t\tcnoise(vec3(st*5.,u_mouse.x+u_time/10.))*100., 227.-\n\t\tcnoise(vec3(st*5.,u_mouse.y+u_time/10.))*350. , 73.+\n\t\tcnoise(vec3(st*5.,1.+u_time/10.))*200.\n\t)/255.;\n\t\t\n\t\t\n\t\tvec3 colorYellow2 = vec3(255.-\n\t\t\tpNoise(st*1.+u_mouse.x,5)*100., 227.-\n\t\t\tpNoise(st*2.+u_mouse.y,5)*350. , 73.+\n\t\t\tpNoise(st*3.,5)*200.\n\t\t)/255.;\n\t\tvec3 color = vec3(1.);\n\t\tvec3 texColor = texture2D(u_tex,st).rgb;\n\t\t\n\t\t// texColor=texColor*colorYellow*colorYellow2;\n\t\t// float d = distance(u_mouse,st);\n\t\t// color*=1.-d;\n\t\tgl_FragColor= vec4(texColor,1.);\n  \n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497204f11dacbc522f11cb",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11cb"
      },
      {
        "name": "texture.vert",
        "content": "// vert file and comments from adam ferriss\n// https://github.com/aferriss/p5jsShaderExamples\n\n// our vertex data\n// attributes, in\n    attribute vec3 aPosition;\n    attribute vec3 aNormal;\n    attribute vec2 aTexCoord;\n\n    // attributes, out\n    varying vec3 var_vertPos;\n    varying vec3 var_vertNormal;\n    varying vec2 var_vertTexCoord;\n\t\tvarying vec4 var_centerGlPosition;//原点\n    \n    // matrices\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n    uniform mat3 uNormalMatrix;\n\t\tuniform float u_time;\n\nvoid main() {\n\n  // copy the position data into a vec4, using 1.0 as the w component\n//   vec4 positionVec4 = vec4(aPosition, 1.0);\n//   positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\n\n//   // send the vertex information on to the fragment shader\n//   gl_Position = positionVec4;\n  \n    vec3 pos = aPosition;\n\t\t\tvec4 posOut = uProjectionMatrix * uModelViewMatrix * vec4(pos, 1.0);\n      gl_Position = posOut;\n\n      // set out value\n      var_vertPos      = pos;\n      var_vertNormal   =  aNormal;\n      var_vertTexCoord = aTexCoord;\n\t\t\tvar_centerGlPosition = uProjectionMatrix * uModelViewMatrix * vec4(0., 0., 0.,1.0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64497204f11dacbc522f11cc",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T16:27:33.789Z",
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "id": "64497204f11dacbc522f11cc"
      },
      {
        "name": "boid.js",
        "content": "// Flocking\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/124-flocking-boids.html\n// https://youtu.be/mhjuuHl6qHM\n\nclass Boid {\n  constructor() {\n    this.position = createVector(random(width), random(height));\n    this.velocity = p5.Vector.random2D();\n    this.velocity.setMag(random(2, 5));\n    this.acceleration = createVector();\n    this.maxForce = 0.2;\n    this.maxSpeed = 3;\n\t\tthis.r = 4;\n  }\n\n  edges() {\n    if (this.position.x > width) {\n      this.position.x = 0;\n    } else if (this.position.x < 0) {\n      this.position.x = width;\n    }\n    if (this.position.y > height) {\n      this.position.y = 0;\n    } else if (this.position.y < 0) {\n      this.position.y = height;\n    }\n  }\n\n  align(boids) {\n    let perceptionRadius = 10//25;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.velocity);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  separation(boids) {\n    let perceptionRadius = 60//24;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        let diff = p5.Vector.sub(this.position, other.position);\n        diff.div(d * d);\n        steering.add(diff);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  cohesion(boids) {\n    let perceptionRadius = 20//50;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.position);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.sub(this.position);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\t\n\tattractCenter() {\n\t\tconst centerVec = createVector(width/2, height/2)\n    let force = p5.Vector.sub(centerVec,this.position);\n\t\tlet distance = force.mag()\n\t\tif (distance > 450) {\n\t\t\tforce.setMag(0.1)\n\t\t} else {\n\t\t\tforce.mult(0)\n\t\t}\n    //let distanceSq = constrain(force.magSq(), 100, 1000);\n    //let G = 5;\n    //let strength = G * (this.mass * mover.mass) / distanceSq;\n    //force.setMag(strength);\n    //mover.applyForce(force);\n\t\treturn force\n  }\n\n  flock(boids) {\n    let alignment = this.align(boids);\n    let cohesion = this.cohesion(boids);\n    let separation = this.separation(boids);\n\t\t\n\t\tlet centerForce = this.attractCenter();\n\n    // alignment.mult(alignSlider.value());\n    // cohesion.mult(cohesionSlider.value());\n    // separation.mult(separationSlider.value());\n\t\talignment.mult(alignSlider);\n\t\tcohesion.mult(cohesionSlider);\n\t\tseparation.mult(separationSlider);\n\n    this.acceleration.add(alignment);\n    this.acceleration.add(cohesion);\n    this.acceleration.add(separation);\n\tthis.acceleration.add(centerForce)\n  }\n\n  update() {\n    this.position.add(this.velocity);\n    this.velocity.add(this.acceleration);\n    this.velocity.limit(this.maxSpeed);\n    this.acceleration.mult(0);\n  }\n\n  show(g, eyeG) {\n\t\tg.push()\n\t\tg.translate(this.position.x, this.position.y)\n\t\tg.rotate(this.velocity.heading());\n    g.strokeWeight(6);\n\t\t\n    //stroke(0);\n\t\t//point(0, 0);\n\t\tg.stroke(0)\n\t\tg.fill(\"yellow\")\n\t\t//g.triangle(-this.r, -this.r / 2, -this.r, this.r / 2, this.r, 0);\n\t\tg.strokeWeight(90)\n\t\tg.point(0,0)\n    //point(this.position.x, this.position.y);\n\t\tg.pop()\n\t\t\n\t\teyeG.push()\n\t\t\teyeG.noStroke()\n\t\t\teyeG.translate(this.position.x, this.position.y)\n\t\t\t//eyeG.rotate(this.velocity.heading());\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(-15, -3)\n\t\t\t\t\teyeG.rotate(PI/6)\n\t\t\t\t\teyeG.fill(255)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\t\t\n\t\t\t\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(15, -3)\n\t\t\t\t\teyeG.rotate(-PI/6)\n\t\t\t\t\teyeG.fill(255)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\n\t\teyeG.pop()\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644988636b6a61001c4a2485",
        "isSelectedFile": false,
        "updatedAt": "2023-04-27T16:27:33.789Z",
        "createdAt": "2023-04-27T16:27:33.789Z",
        "id": "644988636b6a61001c4a2485"
      }
    ],
    "createdAt": "2023-04-26T18:48:36.948Z",
    "updatedAt": "2023-04-27T16:27:33.789Z",
    "id": "LPVIjn19v"
  },
  {
    "name": "flock of shader display",
    "_id": "HcIeutyg1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "644ab74e470f9c6e642b3be4",
          "644ab74e470f9c6e642b3be5",
          "644ab74e470f9c6e642b3be6",
          "644ab74e470f9c6e642b3be7",
          "644ab74e470f9c6e642b3be8",
          "644ab74e470f9c6e642b3be9"
        ],
        "fileType": "folder",
        "_id": "644ab74e470f9c6e642b3be3",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be3"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * @name Applying Shaders as Textures\n * @description Shaders can be applied to 2D/3D shapes as textures.\n * To learn more about shaders and p5.js: https://itp-xstory.github.io/p5js-shaders/\n */\n\nlet theShader;\nlet webGLCanvas;\nlet originalGraphics;\nlet eyeGraphics;\nconst flock = [];\n\nfunction preload() {\n  // load the shader\n  theShader = loadShader(\"texture.vert\", \"texture.frag\");\n}\n\nfunction setup() {\n  // disables scaling for retina screens which can create inconsistent scaling between displays\n  //pixelDensity(1);\n  // shaders require WEBGL mode to work\n  // createCanvas(1000, 1000);\n  createCanvas(displayWidth, displayHeight);\n  noCursor()\n  noStroke();\n\n  webGLCanvas = createGraphics(width, height, WEBGL);\n  originalGraphics = createGraphics(width, height);\n  eyeGraphics = createGraphics(width, height);\n\n  alignSlider = 2; //createSlider(0, 2, 1.5, 0.1);\n  cohesionSlider = 0; //createSlider(0, 2, 1, 0.1);\n  separationSlider = 2; //createSlider(0, 2, 2, 0.1);\n\n  originalGraphics.noStroke();\n  webGLCanvas.noStroke();\n  noStroke();\n\n  for (let i = 0; i < 40; i++) {\n    flock.push(new Boid());\n  }\n}\n\nfunction draw() {\n  // here we're using setUniform() to send our uniform values to the shader\n  theShader.setUniform(\"resolution\", [width, height]);\n  theShader.setUniform(\"time\", millis() / 1000.0);\n  theShader.setUniform(\"mouse\", [mouseX, map(mouseY, 0, height, height, 0)]);\n\n  webGLCanvas.shader(theShader);\n  theShader.setUniform(\"u_resolution\", [width / width, height / height]);\n  theShader.setUniform(\"u_time\", millis() / 1000);\n  theShader.setUniform(\"u_mouse\", [mouseX / width, mouseY / height]);\n  theShader.setUniform(\"u_tex\", originalGraphics);\n  //console.log(mouseX/width)\n\n  webGLCanvas.clear();\n  webGLCanvas.rect(-width / 2, -height / 2, width, height);\n\n  originalGraphics.background(0);\n  eyeGraphics.clear();\n  for (let boid of flock) {\n    //boid.edges();\n    boid.flock(flock);\n    boid.update();\n    boid.show(originalGraphics, eyeGraphics);\n  }\n\n  image(webGLCanvas, 0, 0);\n  image(eyeGraphics, 0, 0);\n  //image(originalGraphics,0,0)\n  //image(eyeGraphics,0,0)\n}\n\nfunction windowResized() {\n  //resizeCanvas(windowWidth, windowHeight);\n  \n}\n\nfunction keyPressed() {\n  if (key === \"f\" || key === \"F\") {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n  // if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n  //   let fs = fullscreen();\n  //   fullscreen(!fs);\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be6",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be6"
      },
      {
        "name": "index.html",
        "content": "<!-- This is a static file -->\n<!-- served from your routes in server.js -->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>shader as texture</title>\n    <meta name=\"description\" content=\"p5.js CDN Template\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script> \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.js\"></script>\n    <script src=\"boid.js\"></script>\n    <script src=\"sketch.js\"></script>   \n  </head>\n  <body>\n    <header>\n<!--       <h1>\n        shader as texture\n      </h1> -->\n    </header>    \n\n    \n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be5",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be5"
      },
      {
        "name": "style.css",
        "content": "* {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden;\n}\ncanvas {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden\n}\n\ncanvas::-webkit-scrollbar, html::-webkit-scrollbar, body::-webkit-scrollbar {\n    display: none;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be7",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be7"
      },
      {
        "name": "texture.frag",
        "content": "// casey conchinha - @kcconch ( https://github.com/kcconch )\n// louise lessel - @louiselessel ( https://github.com/louiselessel )\n// more p5.js + shader examples: https://itp-xstory.github.io/p5js-shaders/\n// rotate/tile functions from example by patricio gonzalez vivo\n// @patriciogv ( patriciogonzalezvivo.com )\n\n\nprecision mediump float;\n\n  #define PI 3.141592653589793\n  #define TAU 6.283185307179586\n\nuniform vec2 u_resolution;\n\tuniform vec2 u_mouse;\n\tuniform float u_time;\n\tuniform vec3 u_lightDir;\n\tuniform vec3 u_col;\n\tuniform mat3 uNormalMatrix;\n\tuniform float u_pixelDensity;\n\tuniform sampler2D u_tex;\n\n\t//attributes, in\n\tvarying vec4 var_centerGlPosition;\n\tvarying vec3 var_vertNormal;\n\tvarying vec2 var_vertTexCoord;\n\t\n\tfloat rand(vec2 c){\n\t\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t}\n\n\tmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n\t}\n\n\tmat2 scale2d(vec2 _scale){\n\t\t\treturn mat2(_scale.x,0.0,\n\t\t\t\t\t\t\t\t\t0.0,_scale.y);\n\t}\n\n\tvec2 tile (vec2 _st, float _zoom) {\n\t\t\t_st *= _zoom;\n\t\t\treturn fract(_st);\n\t}\n\n\t//\tClassic Perlin 3D Noise \n\t//\tby Stefan Gustavson\n\n\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\tvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n\tfloat cnoise(vec3 P){\n\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\tPi0 = mod(Pi0, 289.0);\n\t\tPi1 = mod(Pi1, 289.0);\n\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\tvec4 iz0 = Pi0.zzzz;\n\t\tvec4 iz1 = Pi1.zzzz;\n\n\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\tvec4 ixy1 = permute(ixy + iz1);\n\n\t\tvec4 gx0 = ixy0 / 7.0;\n\t\tvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n\t\tgx0 = fract(gx0);\n\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\t\tvec4 gx1 = ixy1 / 7.0;\n\t\tvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n\t\tgx1 = fract(gx1);\n\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\tg000 *= norm0.x;\n\t\tg010 *= norm0.y;\n\t\tg100 *= norm0.z;\n\t\tg110 *= norm0.w;\n\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\tg001 *= norm1.x;\n\t\tg011 *= norm1.y;\n\t\tg101 *= norm1.z;\n\t\tg111 *= norm1.w;\n\n\t\tfloat n000 = dot(g000, Pf0);\n\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\tfloat n111 = dot(g111, Pf1);\n\n\t\tvec3 fade_xyz = fade(Pf0);\n\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n\t\treturn 2.2 * n_xyz;\n\t}\n\t\n\t\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\n\t\n\tfloat pNoise(vec2 p, int res){\n\t\t// p+=u_noise_pan;\n\t\tfloat persistance = .5;\n\t\tfloat n = 0.;\n\t\tfloat normK = 0.;\n\t\tfloat f = 4.;\n\t\tfloat amp = 1.;\n\t\tint iCount = 0;\n\t\t//noprotect\n\t\tfor (int i = 0; i<50; i++){\n\t\t\tn+=amp*noise(p, f);\n\t\t\tf*=2.;\n\t\t\tnormK+=amp;\n\t\t\tamp*=persistance;\n\t\t\tif (iCount == res) break;\n\t\t\tiCount++;\n\t\t}\n\t\tfloat nf = n/normK;\n\t\treturn nf*nf*nf*nf;\n\t}\n\n\tvec2 random2( vec2 p ) {\n\t\t\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n\t}\n\nvoid main (void) {\n//     vec2 st = gl_FragCoord.xy/resolution.xy;\n//     vec2 mst = gl_FragCoord.xy/mouse.xy;\n//     float mdist= distance(vec2(1.0,1.0), mst);\n\n//     float dist = distance(st,vec2(sin(time/10.0),cos(time/10.0)));\n//     st = tile(st,10.0);\n  \n//     st = rotate2D(st,dist/(mdist/5.0)*PI*2.0);\n\n//     gl_FragColor = vec4(vec3(concentricCircles(st, vec2(0.0,0.0), 5.0, 5.0),concentricCircles(st, vec2(0.0,0.0), 10.0, 10.0),concentricCircles(st, vec2(0.0,0.0), 20.0, 10.0)),1.0);\n  \n  \t\tvec2 st = var_vertTexCoord.xy /u_resolution.xy; \n\n\t\t//st.x += cnoise( vec3(st*u_time,1.) )/5.*u_mouse.x;\n\t\tst.x += cnoise( vec3(st*3000.,1.) )/5.* 0.15;//u_mouse.x;\n\t\tst.y += cnoise( vec3(st*3000.,1.) )/5.* 0.15;\n\n\tvec3 colorYellow = vec3(255.-\n\t\tcnoise(vec3(st*5.,u_mouse.x+u_time/10.))*100., 227.-\n\t\tcnoise(vec3(st*5.,u_mouse.y+u_time/10.))*350. , 73.+\n\t\tcnoise(vec3(st*5.,1.+u_time/10.))*200.\n\t)/255.;\n\t\t\n\t\t\n\t\tvec3 colorYellow2 = vec3(255.-\n\t\t\tpNoise(st*1.+u_mouse.x,5)*100., 227.-\n\t\t\tpNoise(st*2.+u_mouse.y,5)*350. , 73.+\n\t\t\tpNoise(st*3.,5)*200.\n\t\t)/255.;\n\t\tvec3 color = vec3(1.);\n\t\tvec3 texColor = texture2D(u_tex,st).rgb;\n\t\t\n\t\t// texColor=texColor*colorYellow*colorYellow2;\n\t\t// float d = distance(u_mouse,st);\n\t\t// color*=1.-d;\n\t\tgl_FragColor= vec4(texColor,1.);\n  \n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be8",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be8"
      },
      {
        "name": "texture.vert",
        "content": "// vert file and comments from adam ferriss\n// https://github.com/aferriss/p5jsShaderExamples\n\n// our vertex data\n// attributes, in\n    attribute vec3 aPosition;\n    attribute vec3 aNormal;\n    attribute vec2 aTexCoord;\n\n    // attributes, out\n    varying vec3 var_vertPos;\n    varying vec3 var_vertNormal;\n    varying vec2 var_vertTexCoord;\n\t\tvarying vec4 var_centerGlPosition;//原点\n    \n    // matrices\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n    uniform mat3 uNormalMatrix;\n\t\tuniform float u_time;\n\nvoid main() {\n\n  // copy the position data into a vec4, using 1.0 as the w component\n//   vec4 positionVec4 = vec4(aPosition, 1.0);\n//   positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\n\n//   // send the vertex information on to the fragment shader\n//   gl_Position = positionVec4;\n  \n    vec3 pos = aPosition;\n\t\t\tvec4 posOut = uProjectionMatrix * uModelViewMatrix * vec4(pos, 1.0);\n      gl_Position = posOut;\n\n      // set out value\n      var_vertPos      = pos;\n      var_vertNormal   =  aNormal;\n      var_vertTexCoord = aTexCoord;\n\t\t\tvar_centerGlPosition = uProjectionMatrix * uModelViewMatrix * vec4(0., 0., 0.,1.0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be9",
        "isSelectedFile": false,
        "createdAt": "2023-04-27T18:13:10.592Z",
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be9"
      },
      {
        "name": "boid.js",
        "content": "// Flocking\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/124-flocking-boids.html\n// https://youtu.be/mhjuuHl6qHM\n\nclass Boid {\n  constructor() {\n    this.position = createVector(random(width), random(height));\n    this.velocity = p5.Vector.random2D();\n    this.velocity.setMag(random(2, 5));\n    this.acceleration = createVector();\n    this.maxForce = 0.2;\n    this.maxSpeed = 3;\n\t\tthis.r = 4;\n  }\n\n  edges() {\n    if (this.position.x > width) {\n      this.position.x = 0;\n    } else if (this.position.x < 0) {\n      this.position.x = width;\n    }\n    if (this.position.y > height) {\n      this.position.y = 0;\n    } else if (this.position.y < 0) {\n      this.position.y = height;\n    }\n  }\n\n  align(boids) {\n    let perceptionRadius = 10//25;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.velocity);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  separation(boids) {\n    let perceptionRadius = 60//24;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        let diff = p5.Vector.sub(this.position, other.position);\n        diff.div(d * d);\n        steering.add(diff);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  cohesion(boids) {\n    let perceptionRadius = 20//50;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.position);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.sub(this.position);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\t\n\tattractCenter() {\n\t\tconst centerVec = createVector(width/2, height/2)\n    let force = p5.Vector.sub(centerVec,this.position);\n\t\tlet distance = force.mag()\n\t\tif (distance > 450) {\n\t\t\tforce.setMag(0.1)\n\t\t} else {\n\t\t\tforce.mult(0)\n\t\t}\n    //let distanceSq = constrain(force.magSq(), 100, 1000);\n    //let G = 5;\n    //let strength = G * (this.mass * mover.mass) / distanceSq;\n    //force.setMag(strength);\n    //mover.applyForce(force);\n\t\treturn force\n  }\n\n  flock(boids) {\n    let alignment = this.align(boids);\n    let cohesion = this.cohesion(boids);\n    let separation = this.separation(boids);\n\t\t\n\t\tlet centerForce = this.attractCenter();\n\n    // alignment.mult(alignSlider.value());\n    // cohesion.mult(cohesionSlider.value());\n    // separation.mult(separationSlider.value());\n\t\talignment.mult(alignSlider);\n\t\tcohesion.mult(cohesionSlider);\n\t\tseparation.mult(separationSlider);\n\n    this.acceleration.add(alignment);\n    this.acceleration.add(cohesion);\n    this.acceleration.add(separation);\n\tthis.acceleration.add(centerForce)\n  }\n\n  update() {\n    this.position.add(this.velocity);\n    this.velocity.add(this.acceleration);\n    this.velocity.limit(this.maxSpeed);\n    this.acceleration.mult(0);\n  }\n\n  show(g, eyeG) {\n\t\tg.push()\n\t\tg.translate(this.position.x, this.position.y)\n\t\tg.rotate(this.velocity.heading());\n    g.strokeWeight(6);\n\t\t\n    //stroke(0);\n\t\t//point(0, 0);\n\t\tg.stroke(255)\n\t\tg.fill(\"yellow\")\n\t\t//g.triangle(-this.r, -this.r / 2, -this.r, this.r / 2, this.r, 0);\n\t\tg.strokeWeight(90)\n\t\tg.point(0,0)\n    //point(this.position.x, this.position.y);\n\t\tg.pop()\n\t\t\n\t\teyeG.push()\n\t\t\teyeG.noStroke()\n\t\t\teyeG.translate(this.position.x, this.position.y)\n\t\t\t//eyeG.rotate(this.velocity.heading());\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(-15, -3)\n\t\t\t\t\teyeG.rotate(PI/6)\n\t\t\t\t\teyeG.fill(0)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\t\t\n\t\t\t\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(15, -3)\n\t\t\t\t\teyeG.rotate(-PI/6)\n\t\t\t\t\teyeG.fill(0)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\n\t\teyeG.pop()\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644ab74e470f9c6e642b3be4",
        "isSelectedFile": true,
        "updatedAt": "2023-04-27T18:13:10.592Z",
        "createdAt": "2023-04-27T18:13:10.592Z",
        "id": "644ab74e470f9c6e642b3be4"
      }
    ],
    "createdAt": "2023-04-27T17:56:30.551Z",
    "updatedAt": "2023-04-27T18:13:10.592Z",
    "id": "HcIeutyg1"
  },
  {
    "name": "flock of shader display and posenet",
    "_id": "JBiYtu_1I",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "644bed8297e274540b3fb2e3",
          "644bed8297e274540b3fb2e4",
          "644bed8297e274540b3fb2e5",
          "644bed8297e274540b3fb2e6",
          "644bed8297e274540b3fb2e7",
          "644bed8297e274540b3fb2e8"
        ],
        "fileType": "folder",
        "_id": "644bed8297e274540b3fb2e2",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e2"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * @name Applying Shaders as Textures\n * @description Shaders can be applied to 2D/3D shapes as textures.\n * To learn more about shaders and p5.js: https://itp-xstory.github.io/p5js-shaders/\n */\n\nlet theShader;\nlet webGLCanvas;\nlet originalGraphics;\nlet eyeGraphics;\nconst flock = [];\n\nlet attractor\n\nlet video;\nlet cacheGraphic\nlet videoW = 640\nlet videoH = 480\nlet poseNet;\nlet poses = [];\nlet windowCenter\n\nfunction preload() {\n  // load the shader\n  theShader = loadShader(\"texture.vert\", \"texture.frag\");\n}\n\nfunction setup() {\n  // disables scaling for retina screens which can create inconsistent scaling between displays\n  //pixelDensity(1);\n  // shaders require WEBGL mode to work\n  // createCanvas(1000, 1000);\n  createCanvas(displayWidth, displayHeight);\n  //noCursor()\n  noStroke();\n\n  webGLCanvas = createGraphics(width, height, WEBGL);\n  originalGraphics = createGraphics(width, height);\n  eyeGraphics = createGraphics(width, height);\n\n  alignSlider = 2; //createSlider(0, 2, 1.5, 0.1);\n  cohesionSlider = 0; //createSlider(0, 2, 1, 0.1);\n  separationSlider = 2; //createSlider(0, 2, 2, 0.1);\n\n  originalGraphics.noStroke();\n  webGLCanvas.noStroke();\n  noStroke();\n  \n  video = createCapture(VIDEO);\n  video.size(videoW, videoH);\n  \n  cacheGraphic = createGraphics(videoW, videoH)\n  cacheGraphic.translate(videoW,0)\n  cacheGraphic.scale(-1,1)\n  windowCenter = createVector(width/2, height/2)\n  \n  video.hide()\n  \n  // Create a new poseNet method with a single detection\n  poseNet = ml5.poseNet(video, modelReady);\n  // This sets up an event that fills the global variable \"poses\"\n  // with an array every time new poses are detected\n  poseNet.on('pose', function(results) {\n    poses = results;\n  });\n  attractor = createVector(width/2, height/2)\n  for (let i = 0; i < 40; i++) {\n    flock.push(new Boid());\n  }\n}\n\nfunction draw() {\n  // here we're using setUniform() to send our uniform values to the shader\n  theShader.setUniform(\"resolution\", [width, height]);\n  theShader.setUniform(\"time\", millis() / 1000.0);\n  theShader.setUniform(\"mouse\", [mouseX, map(mouseY, 0, height, height, 0)]);\n\n  webGLCanvas.shader(theShader);\n  theShader.setUniform(\"u_resolution\", [width / width, height / height]);\n  theShader.setUniform(\"u_time\", millis() / 1000);\n  theShader.setUniform(\"u_mouse\", [mouseX / width, mouseY / height]);\n  theShader.setUniform(\"u_tex\", originalGraphics);\n  //console.log(mouseX/width)\n\n  webGLCanvas.clear();\n  webGLCanvas.rect(-width / 2, -height / 2, width, height);\n\n  originalGraphics.background(0);\n  eyeGraphics.clear();\n  //drawPoseCenter()\n  for (let boid of flock) {\n    //boid.edges();\n    boid.flock(flock, attractor);\n    boid.update();\n    boid.show(originalGraphics, eyeGraphics);\n  }\n\n  image(webGLCanvas, 0, 0);\n  image(eyeGraphics, 0, 0);\n  //image(originalGraphics,0,0)\n  //image(eyeGraphics,0,0)\n  // if (poses.length) {\n  //   //cacheGraphic.image(video, 0, 0, videoW, videoH)\n  //   image(cacheGraphic, 0, 0, videoW, videoH)\n  // }\n  \n  cacheGraphic.clear()\n  drawKeypoints();\n  drawSkeleton();\n  drawPoseCenter()\n  image(cacheGraphic,0,0, width, height)\n  push()\n  fill(0,0,255)\n  ellipse(attractor.x, attractor.y, 50,50)\n  fill(255,0,0)\n  ellipse(attractor.x, height/2, 20,20)\n  pop()\n  // push()\n  // fill(0,0,255)\n  // ellipse(attractor.x, height/2, 20,20)\n  // pop()\n}\n\nfunction windowResized() {\n  //resizeCanvas(windowWidth, windowHeight);\n  \n}\n\nfunction keyPressed() {\n  if (key === \"f\" || key === \"F\") {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n  // if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n  //   let fs = fullscreen();\n  //   fullscreen(!fs);\n  // }\n}\n\n// A function to draw ellipses over the detected keypoints\nfunction drawKeypoints()  {\n  // Loop through all the poses detected\n  for (let i = 0; i < poses.length; i++) {\n    // For each pose detected, loop through all the keypoints\n    let pose = poses[i].pose;\n    for (let j = 0; j < pose.keypoints.length; j++) {\n      // A keypoint is an object describing a body part (like rightArm or leftShoulder)\n      let keypoint = pose.keypoints[j];\n      // Only draw an ellipse is the pose probability is bigger than 0.2\n      if (keypoint.score > 0.2) {\n        cacheGraphic.fill(0, 255, 0);\n        //cacheGraphic.noStroke();\n        //cacheGraphic.ellipse(keypoint.position.x, keypoint.position.y, 10, 10);\n        cacheGraphic.text(j, keypoint.position.x, keypoint.position.y)\n      }\n    }\n  }\n}\n\nfunction drawPoseCenter() {\n  if (poses.length) {\n    let pose = poses[0]\n    let keypoint1 = pose.pose.keypoints[5]\n    let keypoint2 = pose.pose.keypoints[6]\n    if (keypoint1.score > 0.2 && keypoint2.score > 0.2) {\n      let keypointL = createVector(keypoint1.position.x,keypoint1.position.y)\n      let keypointR = createVector(keypoint2.position.x,keypoint2.position.y)\n\n      let mid = p5.Vector.lerp(keypointL, keypointR, 0.5);\n      attractor.x = map(mid.x, 0, 640, width, 0, true)\n      attractor.y = height/2//map(mid.y, 0, 640, 0, height, true)\n\n      cacheGraphic.fill(0, 255, 0);\n      cacheGraphic.noStroke();\n      cacheGraphic.ellipse(mid.x, mid.y, 50, 50);\n    }\n  } else {\n    console.log('no pose')\n    attractor = p5.Vector.lerp(attractor, windowCenter, 0.2)//createVector(width/2, height/2)\n  }\n}\n\n// A function to draw the skeletons\nfunction drawSkeleton() {\n  // Loop through all the skeletons detected\n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    // For every skeleton, loop through all body connections\n    for (let j = 0; j < skeleton.length; j++) {\n      let partA = skeleton[j][0];\n      let partB = skeleton[j][1];\n      cacheGraphic.stroke(0, 255, 0);\n      cacheGraphic.line(partA.position.x, partA.position.y, partB.position.x, partB.position.y);\n    }\n  }\n}\n\nfunction modelReady() {\n  console.log('posenet ready')\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e5",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e5"
      },
      {
        "name": "index.html",
        "content": "<!-- This is a static file -->\n<!-- served from your routes in server.js -->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>shader as texture</title>\n    <meta name=\"description\" content=\"p5.js CDN Template\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script> \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n    <script src=\"boid.js\"></script>\n    <script src=\"sketch.js\"></script>   \n  </head>\n  <body>\n    <header>\n<!--       <h1>\n        shader as texture\n      </h1> -->\n    </header>    \n\n    \n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e4",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e4"
      },
      {
        "name": "style.css",
        "content": "* {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden;\n}\ncanvas {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  overflow: hidden\n}\n\ncanvas::-webkit-scrollbar, html::-webkit-scrollbar, body::-webkit-scrollbar {\n    display: none;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e6",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e6"
      },
      {
        "name": "texture.frag",
        "content": "// casey conchinha - @kcconch ( https://github.com/kcconch )\n// louise lessel - @louiselessel ( https://github.com/louiselessel )\n// more p5.js + shader examples: https://itp-xstory.github.io/p5js-shaders/\n// rotate/tile functions from example by patricio gonzalez vivo\n// @patriciogv ( patriciogonzalezvivo.com )\n\n\nprecision mediump float;\n\n  #define PI 3.141592653589793\n  #define TAU 6.283185307179586\n\nuniform vec2 u_resolution;\n\tuniform vec2 u_mouse;\n\tuniform float u_time;\n\tuniform vec3 u_lightDir;\n\tuniform vec3 u_col;\n\tuniform mat3 uNormalMatrix;\n\tuniform float u_pixelDensity;\n\tuniform sampler2D u_tex;\n\n\t//attributes, in\n\tvarying vec4 var_centerGlPosition;\n\tvarying vec3 var_vertNormal;\n\tvarying vec2 var_vertTexCoord;\n\t\n\tfloat rand(vec2 c){\n\t\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t}\n\n\tmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n\t}\n\n\tmat2 scale2d(vec2 _scale){\n\t\t\treturn mat2(_scale.x,0.0,\n\t\t\t\t\t\t\t\t\t0.0,_scale.y);\n\t}\n\n\tvec2 tile (vec2 _st, float _zoom) {\n\t\t\t_st *= _zoom;\n\t\t\treturn fract(_st);\n\t}\n\n\t//\tClassic Perlin 3D Noise \n\t//\tby Stefan Gustavson\n\n\tvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\tvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\tvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n\tfloat cnoise(vec3 P){\n\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\tPi0 = mod(Pi0, 289.0);\n\t\tPi1 = mod(Pi1, 289.0);\n\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\tvec4 iz0 = Pi0.zzzz;\n\t\tvec4 iz1 = Pi1.zzzz;\n\n\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\tvec4 ixy1 = permute(ixy + iz1);\n\n\t\tvec4 gx0 = ixy0 / 7.0;\n\t\tvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n\t\tgx0 = fract(gx0);\n\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\t\tvec4 gx1 = ixy1 / 7.0;\n\t\tvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n\t\tgx1 = fract(gx1);\n\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\tg000 *= norm0.x;\n\t\tg010 *= norm0.y;\n\t\tg100 *= norm0.z;\n\t\tg110 *= norm0.w;\n\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\tg001 *= norm1.x;\n\t\tg011 *= norm1.y;\n\t\tg101 *= norm1.z;\n\t\tg111 *= norm1.w;\n\n\t\tfloat n000 = dot(g000, Pf0);\n\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\tfloat n111 = dot(g111, Pf1);\n\n\t\tvec3 fade_xyz = fade(Pf0);\n\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n\t\treturn 2.2 * n_xyz;\n\t}\n\t\n\t\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\n\t\n\tfloat pNoise(vec2 p, int res){\n\t\t// p+=u_noise_pan;\n\t\tfloat persistance = .5;\n\t\tfloat n = 0.;\n\t\tfloat normK = 0.;\n\t\tfloat f = 4.;\n\t\tfloat amp = 1.;\n\t\tint iCount = 0;\n\t\t//noprotect\n\t\tfor (int i = 0; i<50; i++){\n\t\t\tn+=amp*noise(p, f);\n\t\t\tf*=2.;\n\t\t\tnormK+=amp;\n\t\t\tamp*=persistance;\n\t\t\tif (iCount == res) break;\n\t\t\tiCount++;\n\t\t}\n\t\tfloat nf = n/normK;\n\t\treturn nf*nf*nf*nf;\n\t}\n\n\tvec2 random2( vec2 p ) {\n\t\t\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n\t}\n\nvoid main (void) {\n//     vec2 st = gl_FragCoord.xy/resolution.xy;\n//     vec2 mst = gl_FragCoord.xy/mouse.xy;\n//     float mdist= distance(vec2(1.0,1.0), mst);\n\n//     float dist = distance(st,vec2(sin(time/10.0),cos(time/10.0)));\n//     st = tile(st,10.0);\n  \n//     st = rotate2D(st,dist/(mdist/5.0)*PI*2.0);\n\n//     gl_FragColor = vec4(vec3(concentricCircles(st, vec2(0.0,0.0), 5.0, 5.0),concentricCircles(st, vec2(0.0,0.0), 10.0, 10.0),concentricCircles(st, vec2(0.0,0.0), 20.0, 10.0)),1.0);\n  \n  \t\tvec2 st = var_vertTexCoord.xy /u_resolution.xy; \n\n\t\t//st.x += cnoise( vec3(st*u_time,1.) )/5.*u_mouse.x;\n\t\tst.x += cnoise( vec3(st*3000.,1.) )/5.* 0.15;//u_mouse.x;\n\t\tst.y += cnoise( vec3(st*3000.,1.) )/5.* 0.15;\n\n\tvec3 colorYellow = vec3(255.-\n\t\tcnoise(vec3(st*5.,u_mouse.x+u_time/10.))*100., 227.-\n\t\tcnoise(vec3(st*5.,u_mouse.y+u_time/10.))*350. , 73.+\n\t\tcnoise(vec3(st*5.,1.+u_time/10.))*200.\n\t)/255.;\n\t\t\n\t\t\n\t\tvec3 colorYellow2 = vec3(255.-\n\t\t\tpNoise(st*1.+u_mouse.x,5)*100., 227.-\n\t\t\tpNoise(st*2.+u_mouse.y,5)*350. , 73.+\n\t\t\tpNoise(st*3.,5)*200.\n\t\t)/255.;\n\t\tvec3 color = vec3(1.);\n\t\tvec3 texColor = texture2D(u_tex,st).rgb;\n\t\t\n\t\t// texColor=texColor*colorYellow*colorYellow2;\n\t\t// float d = distance(u_mouse,st);\n\t\t// color*=1.-d;\n\t\tgl_FragColor= vec4(texColor,1.);\n  \n\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e7",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e7"
      },
      {
        "name": "texture.vert",
        "content": "// vert file and comments from adam ferriss\n// https://github.com/aferriss/p5jsShaderExamples\n\n// our vertex data\n// attributes, in\n    attribute vec3 aPosition;\n    attribute vec3 aNormal;\n    attribute vec2 aTexCoord;\n\n    // attributes, out\n    varying vec3 var_vertPos;\n    varying vec3 var_vertNormal;\n    varying vec2 var_vertTexCoord;\n\t\tvarying vec4 var_centerGlPosition;//原点\n    \n    // matrices\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n    uniform mat3 uNormalMatrix;\n\t\tuniform float u_time;\n\nvoid main() {\n\n  // copy the position data into a vec4, using 1.0 as the w component\n//   vec4 positionVec4 = vec4(aPosition, 1.0);\n//   positionVec4.xy = positionVec4.xy * 2.0 - 1.0;\n\n//   // send the vertex information on to the fragment shader\n//   gl_Position = positionVec4;\n  \n    vec3 pos = aPosition;\n\t\t\tvec4 posOut = uProjectionMatrix * uModelViewMatrix * vec4(pos, 1.0);\n      gl_Position = posOut;\n\n      // set out value\n      var_vertPos      = pos;\n      var_vertNormal   =  aNormal;\n      var_vertTexCoord = aTexCoord;\n\t\t\tvar_centerGlPosition = uProjectionMatrix * uModelViewMatrix * vec4(0., 0., 0.,1.0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e8",
        "isSelectedFile": false,
        "createdAt": "2023-04-29T00:18:26.795Z",
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e8"
      },
      {
        "name": "boid.js",
        "content": "// Flocking\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/124-flocking-boids.html\n// https://youtu.be/mhjuuHl6qHM\n\nclass Boid {\n  constructor() {\n    this.position = createVector(random(width), random(height));\n    this.velocity = p5.Vector.random2D();\n    this.velocity.setMag(random(2, 5));\n    this.acceleration = createVector();\n    this.maxForce = 0.2;\n    this.maxSpeed = 3;\n\t\tthis.r = 4;\n  }\n\n  edges() {\n    if (this.position.x > width) {\n      this.position.x = 0;\n    } else if (this.position.x < 0) {\n      this.position.x = width;\n    }\n    if (this.position.y > height) {\n      this.position.y = 0;\n    } else if (this.position.y < 0) {\n      this.position.y = height;\n    }\n  }\n\n  align(boids) {\n    let perceptionRadius = 10//25;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.velocity);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  separation(boids) {\n    let perceptionRadius = 60//24;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        let diff = p5.Vector.sub(this.position, other.position);\n        diff.div(d * d);\n        steering.add(diff);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\n  cohesion(boids) {\n    let perceptionRadius = 20//50;\n    let steering = createVector();\n    let total = 0;\n    for (let other of boids) {\n      let d = dist(this.position.x, this.position.y, other.position.x, other.position.y);\n      if (other != this && d < perceptionRadius) {\n        steering.add(other.position);\n        total++;\n      }\n    }\n    if (total > 0) {\n      steering.div(total);\n      steering.sub(this.position);\n      steering.setMag(this.maxSpeed);\n      steering.sub(this.velocity);\n      steering.limit(this.maxForce);\n    }\n    return steering;\n  }\n\t\n\tattractCenter(attractor) {\n\t\tconst centerVec = attractor//acreateVector(attractor.x, height/2)\n    let force = p5.Vector.sub(centerVec,this.position);\n\t\tlet distance = force.mag()\n\t\tif (distance > 450) {\n            this.maxSpeed = 10;\n\t\t\tforce.setMag(0.1)\n\t\t} else {\n            this.maxSpeed = 3;\n\t\t\tforce.mult(0)\n\t\t}\n    //let distanceSq = constrain(force.magSq(), 100, 1000);\n    //let G = 5;\n    //let strength = G * (this.mass * mover.mass) / distanceSq;\n    //force.setMag(strength);\n    //mover.applyForce(force);\n\t\treturn force\n  }\n\n  flock(boids, attractor) {\n    let alignment = this.align(boids);\n    let cohesion = this.cohesion(boids);\n    let separation = this.separation(boids);\n\t\t\n\t\tlet centerForce = this.attractCenter(attractor);\n\n    // alignment.mult(alignSlider.value());\n    // cohesion.mult(cohesionSlider.value());\n    // separation.mult(separationSlider.value());\n\t\talignment.mult(alignSlider);\n\t\tcohesion.mult(cohesionSlider);\n\t\tseparation.mult(separationSlider);\n\n    this.acceleration.add(alignment);\n    this.acceleration.add(cohesion);\n    this.acceleration.add(separation);\n\tthis.acceleration.add(centerForce)\n  }\n\n  update() {\n    this.position.add(this.velocity);\n    this.velocity.add(this.acceleration);\n    this.velocity.limit(this.maxSpeed);\n    this.acceleration.mult(0);\n  }\n\n  show(g, eyeG) {\n\t\tg.push()\n\t\tg.translate(this.position.x, this.position.y)\n\t\tg.rotate(this.velocity.heading());\n    g.strokeWeight(6);\n\t\t\n    //stroke(0);\n\t\t//point(0, 0);\n\t\tg.stroke(255)\n\t\tg.fill(\"yellow\")\n\t\t//g.triangle(-this.r, -this.r / 2, -this.r, this.r / 2, this.r, 0);\n\t\tg.strokeWeight(90)\n\t\tg.point(0,0)\n    //point(this.position.x, this.position.y);\n\t\tg.pop()\n\t\t\n\t\teyeG.push()\n\t\t\teyeG.noStroke()\n\t\t\teyeG.translate(this.position.x, this.position.y)\n\t\t\t//eyeG.rotate(this.velocity.heading());\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(-15, -3)\n\t\t\t\t\teyeG.rotate(PI/6)\n\t\t\t\t\teyeG.fill(0)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\t\t\n\t\t\t\n\t\t\t\teyeG.push()\n\t\t\t\t\teyeG.translate(15, -3)\n\t\t\t\t\teyeG.rotate(-PI/6)\n\t\t\t\t\teyeG.fill(0)\n\t\t\t\t\teyeG.arc(0,0,25,25,0,PI)\n\t\t\t\t\t// eyeG.fill(50)\n\t\t\t\t\t// eyeG.arc(0,0,15,15,0,PI)\n\t\t\t\t\t//eyeG.strokeWeight(10)\n\t\t\t\teyeG.pop()\n\n\t\teyeG.pop()\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "644bed8297e274540b3fb2e3",
        "isSelectedFile": true,
        "updatedAt": "2023-04-29T00:18:26.795Z",
        "createdAt": "2023-04-29T00:18:26.795Z",
        "id": "644bed8297e274540b3fb2e3"
      }
    ],
    "createdAt": "2023-04-28T16:00:02.789Z",
    "updatedAt": "2023-04-29T00:18:26.795Z",
    "id": "JBiYtu_1I"
  },
  {
    "name": "Floyd-Steinberg Dithering\t copy",
    "_id": "Nng44BQ6u",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64ef95dab5d4ee001a1ac66d",
          "64ef95737c180d762ba39d90",
          "64ef95737c180d762ba39d91",
          "64ef95737c180d762ba39d92",
          "64ef95737c180d762ba39d93"
        ],
        "fileType": "folder",
        "_id": "64ef95737c180d762ba39d8f",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "id": "64ef95737c180d762ba39d8f"
      },
      {
        "name": "sketch.js",
        "content": "let kitten;\n\nfunction preload() {\n  kitten = loadImage(\"homie.png\");\n}\n\nfunction setup() {\n  createCanvas(1024, 512);\n\n  image(kitten, 0, 0);\n  makeDithered(kitten, 1);\n  image(kitten, 512, 0);\n  // Apply gray filter to the whole canvas\n  filter(GRAY);\n}\n\nfunction imageIndex(img, x, y) {\n  return 4 * (x + y * img.width);\n}\n\nfunction getColorAtindex(img, x, y) {\n  let idx = imageIndex(img, x, y);\n  let pix = img.pixels;\n  let red = pix[idx];\n  let green = pix[idx + 1];\n  let blue = pix[idx + 2];\n  let alpha = pix[idx + 3];\n  return color(red, green, blue, alpha);\n}\n\nfunction setColorAtIndex(img, x, y, clr) {\n  let idx = imageIndex(img, x, y);\n\n  let pix = img.pixels;\n  pix[idx] = red(clr);\n  pix[idx + 1] = green(clr);\n  pix[idx + 2] = blue(clr);\n  pix[idx + 3] = alpha(clr);\n}\n\n// Finds the closest step for a given value\n// The step 0 is always included, so the number of steps\n// is actually steps + 1\nfunction closestStep(max, steps, value) {\n  return round(steps * value / 255) * floor(255 / steps);\n}\n\nfunction makeDithered(img, steps) {\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let clr = getColorAtindex(img, x, y);\n      let oldR = red(clr);\n      let oldG = green(clr);\n      let oldB = blue(clr);\n      let newR = closestStep(255, steps, oldR);\n      let newG = closestStep(255, steps, oldG);\n      let newB = closestStep(255, steps, oldB);\n\n      let newClr = color(newR, newG, newB);\n      setColorAtIndex(img, x, y, newClr);\n\n      let errR = oldR - newR;\n      let errG = oldG - newG;\n      let errB = oldB - newB;\n\n      distributeError(img, x, y, errR, errG, errB);\n    }\n  }\n\n  img.updatePixels();\n}\n\nfunction distributeError(img, x, y, errR, errG, errB) {\n  addError(img, 7 / 16.0, x + 1, y, errR, errG, errB);\n  addError(img, 3 / 16.0, x - 1, y + 1, errR, errG, errB);\n  addError(img, 5 / 16.0, x, y + 1, errR, errG, errB);\n  addError(img, 1 / 16.0, x + 1, y + 1, errR, errG, errB);\n}\n\nfunction addError(img, factor, x, y, errR, errG, errB) {\n  if (x < 0 || x >= img.width || y < 0 || y >= img.height) return;\n  let clr = getColorAtindex(img, x, y);\n  let r = red(clr);\n  let g = green(clr);\n  let b = blue(clr);\n  clr.setRed(r + errR * factor);\n  clr.setGreen(g + errG * factor);\n  clr.setBlue(b + errB * factor);\n\n  setColorAtIndex(img, x, y, clr);\n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef95737c180d762ba39d92",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "isSelectedFile": true,
        "id": "64ef95737c180d762ba39d92"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef95737c180d762ba39d90",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "id": "64ef95737c180d762ba39d90"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef95737c180d762ba39d93",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "id": "64ef95737c180d762ba39d93"
      },
      {
        "name": "kitten.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef95737c180d762ba39d91",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/def12834-2002-4966-8da2-94f25cf9aa17.jpg",
        "id": "64ef95737c180d762ba39d91"
      },
      {
        "name": "homie.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef95dab5d4ee001a1ac66d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/38bd11ae-36e4-4698-ae60-4716ec3cdade.png",
        "updatedAt": "2023-08-30T20:12:45.059Z",
        "createdAt": "2023-08-30T20:12:45.059Z",
        "id": "64ef95dab5d4ee001a1ac66d"
      }
    ],
    "createdAt": "2023-08-30T19:16:06.153Z",
    "updatedAt": "2023-08-30T20:12:45.059Z",
    "id": "Nng44BQ6u"
  },
  {
    "name": "Floyd-Steinberg Dithering\t copy copy",
    "_id": "9RKboFM2S",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64ef93a1a520c646e742d6e6",
          "64ef93a1a520c646e742d6e7",
          "64ef93a1a520c646e742d6e8",
          "64ef93a1a520c646e742d6e9",
          "64ef93a1a520c646e742d6ea",
          "64ef9651c5e4cc001ac82d89"
        ],
        "fileType": "folder",
        "_id": "64ef93a1a520c646e742d6e5",
        "updatedAt": "2023-08-30T19:19:45.794Z",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "isSelectedFile": false,
        "id": "64ef93a1a520c646e742d6e5"
      },
      {
        "name": "sketch.js",
        "content": "let img;\nlet capture;\nlet sizeX=64;\nlet sizeY=48;\n\nfunction preload() {\n}\n\nfunction setup() {\n  frameRate(8);\n  \n  createCanvas(512, 512+128);\n\n  capture = createCapture(VIDEO);\n  capture.size(sizeX, sizeY);\n  \n  img = createImage(sizeX, sizeY);\n}\n\nfunction draw(){\n  noSmooth();\n  //image(kitten, 0, 0);\n  image(capture, 0, 0, sizeX, sizeY);\n  \n  img.loadPixels();\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      img.set(x, y, get(x,y));\n    }\n  }\n  img.updatePixels();\n  \n  makeDithered(img, 1);\n  image(img, 0,sizeY, 512, 512*sizeY/sizeX);\n  //filter(GRAY);\n  \n}\n\nfunction imageIndex(img, x, y) {\n  return 4 * (x + y * img.width);\n}\n\nfunction getColorAtindex(img, x, y) {\n  let idx = imageIndex(img, x, y);\n  let pix = img.pixels;\n  let red = pix[idx];\n  let green = pix[idx + 1];\n  let blue = pix[idx + 2];\n  let alpha = pix[idx + 3];\n  \n  green=blue=red=(green+blue+red)*0.3333;\n  \n  return color(red, green, blue, alpha);\n}\n\nfunction setColorAtIndex(img, x, y, clr) {\n  let idx = imageIndex(img, x, y);\n\n  let pix = img.pixels;\n  pix[idx] = red(clr);\n  pix[idx + 1] = green(clr);\n  pix[idx + 2] = blue(clr);\n  pix[idx + 3] = alpha(clr);\n}\n\n// Finds the closest step for a given value\n// The step 0 is always included, so the number of steps\n// is actually steps + 1\nfunction closestStep(max, steps, value) {\n  return round(steps * value / 255) * floor(255 / steps);\n}\n\nfunction makeDithered(img, steps) {\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let clr = getColorAtindex(img, x, y);\n      let oldR = red(clr);\n      let oldG = green(clr);\n      let oldB = blue(clr);\n      let newR = closestStep(255, steps, oldR);\n      let newG = closestStep(255, steps, oldG);\n      let newB = closestStep(255, steps, oldB);\n\n      let newClr = color(newR, newG, newB);\n      setColorAtIndex(img, x, y, newClr);\n\n      let errR = oldR - newR;\n      let errG = oldG - newG;\n      let errB = oldB - newB;\n\n      distributeError(img, x, y, errR, errG, errB);\n    }\n  }\n\n  img.updatePixels();\n}\n\nfunction distributeError(img, x, y, errR, errG, errB) {\n  /*\n  addError(img, 7 / 16.0, x + 1, y, errR, errG, errB);\n  addError(img, 3 / 16.0, x - 1, y + 1, errR, errG, errB);\n  addError(img, 5 / 16.0, x, y + 1, errR, errG, errB);\n  addError(img, 1 / 16.0, x + 1, y + 1, errR, errG, errB);\n  */\n  \n  addError(img, 2 / 4.0, x + 1, y, errR, errG, errB);\n  addError(img, 1 / 4.0, x - 1, y + 1, errR, errG, errB);\n  addError(img, 1 / 4.0, x, y + 1, errR, errG, errB);\n  \n  \n}\n\nfunction addError(img, factor, x, y, errR, errG, errB) {\n  if (x < 0 || x >= img.width || y < 0 || y >= img.height) return;\n  let clr = getColorAtindex(img, x, y);\n  let r = red(clr);\n  let g = green(clr);\n  let b = blue(clr);\n  clr.setRed(r + errR * factor);\n  clr.setGreen(g + errG * factor);\n  clr.setBlue(b + errB * factor);\n\n  setColorAtIndex(img, x, y, clr);\n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef93a1a520c646e742d6e9",
        "updatedAt": "2023-08-30T19:14:02.837Z",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "isSelectedFile": true,
        "id": "64ef93a1a520c646e742d6e9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef93a1a520c646e742d6e7",
        "updatedAt": "2023-08-30T19:14:02.837Z",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "isSelectedFile": false,
        "id": "64ef93a1a520c646e742d6e7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef93a1a520c646e742d6ea",
        "updatedAt": "2023-08-30T19:14:02.837Z",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "isSelectedFile": false,
        "id": "64ef93a1a520c646e742d6ea"
      },
      {
        "name": "kitten.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef93a1a520c646e742d6e8",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "updatedAt": "2023-08-30T19:14:02.837Z",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/738abfd5-6c31-4532-8a55-690108ba17b0.jpg",
        "isSelectedFile": false,
        "id": "64ef93a1a520c646e742d6e8"
      },
      {
        "name": "BlueNoise64.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef93a1a520c646e742d6e6",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/d93da358-5b2a-46db-be01-9d3a742a805c.png",
        "updatedAt": "2023-08-30T19:14:02.837Z",
        "createdAt": "2023-08-30T19:14:02.837Z",
        "id": "64ef93a1a520c646e742d6e6"
      },
      {
        "name": "homie.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef9651c5e4cc001ac82d89",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/cd9883a1-cf7f-4db2-a498-ec4cf17afe55.png",
        "updatedAt": "2023-08-30T19:19:45.783Z",
        "createdAt": "2023-08-30T19:19:45.783Z",
        "id": "64ef9651c5e4cc001ac82d89"
      }
    ],
    "createdAt": "2023-08-30T19:08:19.595Z",
    "updatedAt": "2023-08-30T19:19:45.795Z",
    "id": "9RKboFM2S"
  },
  {
    "name": "for lingyi",
    "_id": "ySHRWvaUO",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "657765104cd0ee458dc2e428",
          "657765104cd0ee458dc2e429",
          "657765104cd0ee458dc2e42a",
          "657765104cd0ee458dc2e42b",
          "657765104cd0ee458dc2e42c",
          "657765104cd0ee458dc2e42d",
          "657765104cd0ee458dc2e42e"
        ],
        "fileType": "folder",
        "_id": "657765104cd0ee458dc2e427",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e427"
      },
      {
        "name": "sketch.js",
        "content": "let firstShader;\nlet img;\n\nfunction preload() {\n  firstShader = loadShader('shader.vert', 'shader.frag');\n\n  img = loadImage(\"mountain.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n  noStroke();\n}\n\nfunction draw() {\n  background(220);\n\n  shader(firstShader);\n\n  let mx = mouseX / width;\n  let my = mouseY / height;\n\n  firstShader.setUniform(\"mouse\", [mx, my]);\n  firstShader.setUniform(\"tex\", img);\n\n  rect(0, 0, width, height);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e42d",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e42d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e429",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e429"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e42e",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e42e"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e42c",
        "isSelectedFile": false,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e42c"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n\n  // Get the color of the current pixel\n  vec4 originalColor = texture2D(tex, uv);\n\n  // Check if the pixel is not white\n  if (originalColor.rgb != vec3(1.0)) {\n    // Calculate the distance from the current fragment to the mouse position\n    float distanceToMouse = distance(uv, mouse);\n\n    // Check if the distance is within the specified radius\n    if (distanceToMouse < 0.1) { // 0.1 is equivalent to 100 in normalized coordinates\n      // Apply pixelation effect only within the circular region\n      vec2 steps = vec2(200.0, 200.0) * mouse;\n      vec2 pixelUv = floor(uv * steps) / steps;\n      vec4 color = texture2D(tex, pixelUv);\n      gl_FragColor = color;\n    } else {\n      // Keep the original color outside the circular region\n      gl_FragColor = originalColor;\n    }\n  } else {\n    // Keep the original color if it's white\n    gl_FragColor = originalColor;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e42b",
        "isSelectedFile": true,
        "createdAt": "2023-12-11T19:42:21.625Z",
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e42b"
      },
      {
        "name": "flowers.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e428",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/13f3fcd5-2703-4e17-a516-413118756ac6.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "createdAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e428"
      },
      {
        "name": "mountain.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "657765104cd0ee458dc2e42a",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/34cdd72b-dea5-4853-a2e0-04b64cd3c911.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-12-11T19:42:21.625Z",
        "createdAt": "2023-12-11T19:42:21.625Z",
        "id": "657765104cd0ee458dc2e42a"
      }
    ],
    "createdAt": "2023-12-11T19:37:53.919Z",
    "updatedAt": "2023-12-11T19:42:21.625Z",
    "id": "ySHRWvaUO"
  },
  {
    "name": "Fuchsia fernleaf",
    "_id": "6DJ11Fx8U",
    "updatedAt": "2023-03-09T17:25:18.414Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "640a133a34296707ce82379f",
          "640a131834296707ce82379c",
          "640a131834296707ce82379b",
          "640a131834296707ce82379d"
        ],
        "fileType": "folder",
        "_id": "640a131834296707ce82379e",
        "isSelectedFile": false,
        "createdAt": "2023-03-09T17:25:18.414Z",
        "updatedAt": "2023-03-09T17:25:18.414Z",
        "id": "640a131834296707ce82379e"
      },
      {
        "name": "sketch.js",
        "content": "let snow= [];\nvar test=1;\n\nlet font,\nfontsize = 30;\n\n// function preload(){\n//   //preload the font\n//   font = loadFont('assets/SourceSansPro-Regular.otf');\n// }\n\nfunction setup() {\n  createCanvas(600, 600);\n  //40 snowflake in the whole canvas\n  for (let i=0; i<40; i++){\n    snow[i]=new Snow();\n  }\n  //text\n//  textFont(font);\n  textSize(fontsize);\n  textAlign(CENTER, CENTER);\n}\n\nfunction draw() {\n  background(\"#B9B0B7\");\n\n  DrawGlass();\n  DrawTree(260,200,230,50);\n  DrawTree(430,270,150,30);\n  DrawHouse();\n  DrawTree2()\n  SnowGround(360,430,210,30);\n  SnowGround(260,430,250,30);\n  //ShouldISnow();\n  ShowandMoveSnow();\n  Bottom();\n  Text();\n  }\n\nfunction DrawGlass(){\n  //draw the glass\n  fill(255,80);\n  stroke(255)\n  strokeWeight(4)\n  ellipse(300,280,450,450);\n\n}\n\nfunction DrawTree(PstnX, PstnY, Height, Width){\n  //draw trees in the back\n  fill(\"#657C54\");\n  strokeWeight(1);\n  triangle(PstnX,PstnY,PstnX-1.2*Width,PstnY+Height,PstnX+1.2*Width,PstnY+Height);\n  triangle(PstnX,PstnY-0.2*Height,PstnX-Width,PstnY+0.8*Height,PstnX+Width,PstnY+0.8*Height);\n\n}\n\nfunction DrawHouse(){\n  //snow in the back\n  fill(255,255,255);\n  stroke(0)\n  triangle(270,240,200,330,400,330);\n\n  //The walls\n  fill(\"#837E72\");\n  beginShape();\n  triangle(280,250,220,320,340,320);\n  rect(220,320,120,110);\n  rect(340,320,80,110);\n  endShape();\n\n  //The snow at the front\n  fill(255,255,255);\n  quad(270,240,330,340,440,340,390,240);\n\n  //Windows\n  fill(\"#F0E091\");\n  ellipse(270,320,30,40);\n  rect(230,360,20,30);\n  rect(360,360,50,30);\n\n  //Door\n  fill(\"#A78B67\");\n  ellipse(300,410,50,80);\n}\n\nfunction DrawTree2(){\n  fill(\"#78896C\");\n  stroke(255)\n  triangle(180,320,130,440,230,440);\n  triangle(180,280,140,380,220,380);\n  triangle(180,240,150,330,210,330);\n}\n\nfunction Bottom(){\n  //Bottom\n  fill(\"#72817B\");\n  stroke(\"#5C6762\");\n  strokeWeight(2)\n  rect(100,430,400,80);\n  //Texture\n  fill(\"#628B76\");\n  noStroke()\n  rect(102,440,396,7);\n  rect(102,490,396,15);\n}\n\nfunction SnowGround(SnowX,SnowY,SnowW,SnowH){\n  //Snow on the ground\n  fill(255,255,255);\n  arc(SnowX,SnowY,SnowW,SnowH, PI, PI+PI);\n}\n\nfunction ShouldISnow(){\n  //if(mouseIsPressed){\n    test=test*-1;\n  //}\n\n}\n\nfunction mouseClicked() {\n  test = test *= -1\n}\n\nfunction ShowandMoveSnow(){\n  if(test<0){\n    for (let i=0; i<40; i++){\n      snow[i].move();\n      if(snow[i].intersects()){\n      snow[i].show();      \n      }\n    }\n  }\n}\n\nfunction Text(){\n  fill(255);\n  if(test>0){\n    text('Try to click your mouse!', 300, 550);\n  }\n  else{\n    text('~WOOOOOOOOOOOOW~',300,470);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "640a131834296707ce82379b",
        "isSelectedFile": true,
        "createdAt": "2023-03-09T17:25:18.414Z",
        "updatedAt": "2023-03-09T17:25:18.414Z",
        "id": "640a131834296707ce82379b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"Snow.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "640a131834296707ce82379c",
        "isSelectedFile": false,
        "createdAt": "2023-03-09T17:25:18.414Z",
        "updatedAt": "2023-03-09T17:25:18.414Z",
        "id": "640a131834296707ce82379c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "640a131834296707ce82379d",
        "isSelectedFile": false,
        "createdAt": "2023-03-09T17:25:18.414Z",
        "updatedAt": "2023-03-09T17:25:18.414Z",
        "id": "640a131834296707ce82379d"
      },
      {
        "name": "Snow.js",
        "content": "class Snow{\n  constructor(){\n    this.x=random(0,600);\n    this.y=random(0,600);\n  }\n  move(){\n    this.x+=random(-5,+5);\n    this.y+=2+random(-1,+1);\n    if(this.y>600){\n      this.y=0;\n      this.x=random(0,600);\n    }\n  }\n  show(){\n    fill(255,200);\n    noStroke();\n    circle(this.x,this.y,10);\n  }\n  intersects(){\n    let d=dist(this.x,this.y,300,280);\n    if (d<225){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "640a133a34296707ce82379f",
        "isSelectedFile": false,
        "createdAt": "2023-03-09T17:25:18.414Z",
        "updatedAt": "2023-03-09T17:25:18.414Z",
        "id": "640a133a34296707ce82379f"
      }
    ],
    "createdAt": "2023-03-09T17:11:45.199Z",
    "id": "6DJ11Fx8U"
  },
  {
    "name": "gen3 2024",
    "_id": "kAzp_Okh9",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6595ada9d3d9a06999923f81",
          "6595ada9d3d9a06999923f82",
          "6595ada9d3d9a06999923f83",
          "6595ada9d3d9a06999923f84",
          "6595ada9d3d9a06999923f85",
          "6595ada9d3d9a06999923f86",
          "6595ada9d3d9a06999923f87"
        ],
        "fileType": "folder",
        "_id": "6595ada9d3d9a06999923f80",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T22:11:50.959Z",
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f80"
      },
      {
        "name": "sketch.js",
        "content": "// Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet g\n\nlet physics;\n\nlet particles = [];\nlet eyes = [];\nlet springs = [];\n\nlet showSprings = false;\nlet homieCount = 10\nlet homieGraphic\nlet homieGraphics = []\nlet quadrantDiagramGraphic\nlet pixelShader\n\nfunction keyPressed() {\n  if (key == ' ') {\n    showSprings = !showSprings;\n  }\n}\n\nfunction setup() {\n  createCanvas(900, 900);\n  homieGraphic = createGraphics(width, height)\n  for (let i=0; i<5; i++) {\n    homieGraphics.push(createGraphics(width, height))\n  }\n  quadrantDiagramGraphic = createGraphics(width, height)\n  pixelShader = loadShader('shader.vert', 'shader.frag');\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width/2, -height/2, width, height);\n  physics.setWorldBounds(bounds);\n\n  particles.push(new Particle(-220, -180));\n  particles.push(new Particle(-170, -180));\n  particles.push(new Particle(-120, -180));\n  particles.push(new Particle(130, -180));\n  particles.push(new Particle(180, -180));\n  particles.push(new Particle(30, 20));\n  particles.push(new Particle(180, 180));\n  particles.push(new Particle(130, 180));\n  particles.push(new Particle(-20, 180));\n  particles.push(new Particle(-70, 180));\n  particles.push(new Particle(-220, 180));\n  particles.push(new Particle(-70, 20));\n\n  eyes.push(new Particle(-45, -30));\n  eyes.push(new Particle(-5, -30));\n  // eyes.push(new Particle(-70, -130));\n  // eyes.push(new Particle(30, -130));\n\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n \n  for (let particle of particles) {\n    springs.push(new Spring(particle, eyes[0], 0.01));\n    springs.push(new Spring(particle, eyes[1], 0.01));\n  }\n\n//   springs.push(new Spring(eyes[2], particles[1], 0.01));\n//   springs.push(new Spring(eyes[3], particles[3], 0.01));\n\n//   springs.push(new Spring(eyes[2], particles[3], 0.01));\n//   springs.push(new Spring(eyes[3], particles[1], 0.01));\n\n//   springs.push(new Spring(eyes[2], particles[0], 0.01));\n//   springs.push(new Spring(eyes[3], particles[4], 0.01));\n\n//   springs.push(new Spring(eyes[3], particles[2], 0.01));\n//   springs.push(new Spring(eyes[2], particles[2], 0.01));\n\n//   springs.push(new Spring(eyes[2], eyes[3], 0.01));\n\n//   springs.push(new Spring(eyes[0], eyes[3], 0.01));\n//   springs.push(new Spring(eyes[0], eyes[2], 0.01));\n//   springs.push(new Spring(eyes[1], eyes[2], 0.01));\n//   springs.push(new Spring(eyes[1], eyes[3], 0.01));\n}\n\nfunction draw() {\n  background(255);\n  drawGrid(quadrantDiagramGraphic)\n  \n//   push()\n//   translate(width/2, height/2)\n//   physics.update();\n\n//   stroke(112, 50, 126);\n//   if (showSprings) stroke(112, 50, 126, 100);\n  //push()\n  //translate(width/2, height/2)\n  \n \n  \n  // strokeWeight(4);\n  // line(particles[1].x, particles[1].y, eyes[2].x, eyes[2].y);\n  // line(particles[3].x, particles[3].y, eyes[3].x, eyes[3].y);\n  // strokeWeight(16);\n  // point(eyes[2].x, eyes[2].y);\n  // point(eyes[3].x, eyes[3].y);\n\n  // fill(45, 197, 244);\n  // if (showSprings) fill(45, 197, 244, 100);\n  // strokeWeight(2);\n  // beginShape();\n  // for (let particle of particles) {\n  //   vertex(particle.x, particle.y);\n  // }\n  // endShape(CLOSE);\n\n  //   fill(127, 127);\n  //   stroke(0);\n  //   strokeWeight(2);\n  //   beginShape();\n  //   for (let particle of particles) {\n  //     vertex(particle.x, particle.y);\n  //   }\n  //   endShape(CLOSE);\n\n  // for (let particle of particles) {\n  //   particle.show();\n  // }\n\n  // eyes[0].show();\n  // eyes[1].show();\n  \n  // for (let eye of eyes) {\n  //   eye.show();\n  // }\n\n  // if (showSprings) {\n  //   for (let spring of springs) {\n  //     spring.show();\n  //   }\n  // }\n\n  // if (mouseIsPressed) {\n  //   particles[0].lock();\n  //   particles[0].x = mouseX-width/2;\n  //   particles[0].y = mouseY-height/2;\n  //   particles[0].unlock();\n  // }\n  // pop()\n  //drawShape(homieGraphic,2)\n  //drawShape(homieGraphic,1)\n  \n  drawShape(homieGraphic,1)\n  //drawShape(homieGraphics[1], 0.9)\n  // for(let i=0; i<homieGraphics.length; i++) {\n  //   drawShape(homieGraphics[i], 1-i*0.1)\n  // }\n}\n\nfunction drawShape(g, scaleV) {\n  //g.clear()\n  //g.background(255);\n  g.push();\n  g.translate(width / 2, height / 2);\n  // g.scale(scaleV, scaleV)\n  physics.update();\n  g.fill(45, 197, 244);\n  //g.stroke(bodyStrokeColorPicker.color());\n  // if (showSprings.checked())\n  //   g.stroke([\n  //     red(bodyStrokeColorPicker.color()),\n  //     green(bodyStrokeColorPicker.color()),\n  //     blue(bodyStrokeColorPicker.color()),\n  //     100,\n  //   ]);\n\n  //g.fill(bodyColorPicker.color());\n  stroke(112, 50, 126);\n  if (showSprings) stroke(112, 50, 126, 100);\n\n  //if (showSprings.checked())\n    // g.fill([\n    //   red(bodyColorPicker.color()),\n    //   green(bodyColorPicker.color()),\n    //   blue(bodyColorPicker.color()),\n    //   100,\n    // ]);\n\n  g.strokeWeight(4);\n\n  //if (modeSelect.value() === \"直線\") {\n    // g.beginShape(); // 開始將點點們變成Shape\n    // for (let particle of particles) {\n    //   g.vertex(particle.x, particle.y);\n    // }\n    // g.endShape(CLOSE);\n  //}\n  \n    g.beginShape();\n    for (let p of particles) {\n      g.curveVertex(p.x, p.y);\n    }\n    g.curveVertex(particles[0].x, particles[0].y);\n    g.curveVertex(particles[1].x, particles[1].y);\n    g.curveVertex(particles[2].x, particles[2].y);\n    g.endShape();\n  \n  for (let eye of eyes) {\n    eye.show(g);\n  }\n\n  \n  if (mouseIsPressed) {\n    if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n      particles[0].lock();\n      particles[0].x = mouseX - width/2;\n      particles[0].y = mouseY - height/2;\n      particles[0].unlock();\n    }\n  }\n  g.pop();\n  push()\n  imageMode(CENTER)\n  translate(width/2, height/2)\n  scale(scaleV, scaleV)\n  image(g, 0,0)\n  pop()\n}\n\nfunction drawGrid(graphic) {\n  graphic.clear()\n  \n  graphic.push()\n    graphic.strokeWeight(1)\n    graphic.translate(width/2, height/2)\n    graphic.line(-width/2, 0, width/2, 0) // X軸\n    graphic.line(0, -height/2, 0, height/2) // Y軸\n\n    for (let x=-width/2; x<width/2; x+=50) {\n      graphic.line(x, 0, x, 5 )\n      graphic.textSize(8)\n      graphic.text(x, x, 10)\n    }\n  \n    for (let y=-height/2; y<height/2; y+=50) {\n      graphic.line(0, y, 5, y)\n      graphic.textSize(8)\n      graphic.text(y, 0, y)\n    }\n  \n  graphic.pop()\n  \n  image(graphic, 0, 0)\n}\n\nfunction keyTyped() {\n\tif (key === 's' || key === 'S') {\n    saveCanvas('myCanvas', 'jpg');\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f85",
        "isSelectedFile": true,
        "createdAt": "2024-01-03T22:11:50.959Z",
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f85"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f81",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T22:11:50.959Z",
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f81"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f87",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T22:11:50.959Z",
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f87"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y) {\n    super(x, y);\n    this.r = 2;\n    physics.addParticle(this);\n  }\n\n  show(g) {\n    g.fill(252, 238, 33);\n    g.strokeWeight(1);\n    g.circle(this.x, this.y, this.r * 12);\n\n    g.strokeWeight(this.r * 4);\n    g.point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f82",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "createdAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f82"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show() {\n    strokeWeight(1);\n    stroke(0, 127);\n    line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f86",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "createdAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f86"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f84",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "createdAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f84"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "6595ada9d3d9a06999923f83",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T22:11:50.959Z",
        "createdAt": "2024-01-03T22:11:50.959Z",
        "id": "6595ada9d3d9a06999923f83"
      }
    ],
    "createdAt": "2024-01-03T18:55:37.974Z",
    "updatedAt": "2024-01-03T22:11:50.959Z",
    "id": "kAzp_Okh9"
  },
  {
    "name": "Genuary 3: Droste copy",
    "_id": "RMHhwSn76",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6595d777c849631c75bbdf4a",
          "6595d777c849631c75bbdf4b",
          "6595d777c849631c75bbdf4c"
        ],
        "fileType": "folder",
        "_id": "6595d777c849631c75bbdf49",
        "createdAt": "2024-01-03T18:43:47.534Z",
        "updatedAt": "2024-01-03T18:43:47.534Z",
        "isSelectedFile": false,
        "id": "6595d777c849631c75bbdf49"
      },
      {
        "name": "sketch.js",
        "content": "let gB, fullRes, windowRes;\nlet requiredFrames = 360;\nlet wobbleEachFrame = false;\nlet rotateEachFrame = false\nlet exportGifStraightAway = false;\n\nfunction setup() {\n  windowRes = min(windowWidth, windowHeight);\n  createCanvas(windowRes, windowRes);\n  imageMode(CENTER);\n  gB = createGraphics(fullRes = 1024, fullRes);\n  gB.colorMode(HSB, 360);\n  gB.imageMode(CENTER);\n  background(360);\n}\n\nfunction draw() {\n  gB.resetMatrix();\n  gB.translate(gB.width * 0.5, gB.height * 0.5);\n  gB.stroke(0);\n  gB.noFill();\n  gB.strokeWeight(1);\n  \n  if (frameCount == 1) {\n    gB.stroke(0, 360, 360, 1);\n    gB.ellipse(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random() * random());\n    gB.rect(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random());\n    gB.stroke(120, 360, 360, 1);\n    gB.ellipse(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random() * random());\n    gB.rect(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random());\n    gB.stroke(240, 360, 360, 1);\n    gB.ellipse(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random() * random());\n    gB.rect(fullRes * random(-0.5, 0.5), fullRes * random(-0.5, 0.5), fullRes * random());\n    if (exportGifStraightAway) {\n      sG();\n    }\n  }\n  \n  gB.rotate(rotateEachFrame * 0.005);\n  gB.image(gB, wobbleEachFrame * random(-1, 1) * random(), wobbleEachFrame * random(-1, 1) * random(), fullRes * 0.95, fullRes * 0.95);\n  background(360);\n  displayBuffer(gB);\n  \n  if (frameCount > requiredFrames) {\n    noLoop();\n  }\n}\n\nfunction sG() {\n  windowRes = 512;\n  resizeCanvas(512, 512);\n  saveGif('export', requiredFrames, {\n  delay: 0,\n  units: \"frames\"\n  });\n}\n\nfunction keyPressed() {\n  if (key === \"r\") {\n    sG();\n  }\n  if (key === \"s\") {\n  saveCanvas();\n  }\n}\n\nfunction displayBuffer(buffer) {\n  image(buffer, windowRes / 2, windowRes / 2, windowRes, windowRes);\n}\n\nfunction windowResized() {\n  windowRes = min(windowWidth, windowHeight);\n  resizeCanvas(windowRes, windowRes);\n}",
        "children": [],
        "fileType": "file",
        "_id": "6595d777c849631c75bbdf4b",
        "isSelectedFile": true,
        "createdAt": "2024-01-03T18:43:47.534Z",
        "updatedAt": "2024-01-03T18:43:47.534Z",
        "id": "6595d777c849631c75bbdf4b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6595d777c849631c75bbdf4a",
        "createdAt": "2024-01-03T18:43:47.534Z",
        "updatedAt": "2024-01-03T18:43:47.534Z",
        "isSelectedFile": false,
        "id": "6595d777c849631c75bbdf4a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6595d777c849631c75bbdf4c",
        "createdAt": "2024-01-03T18:43:47.534Z",
        "updatedAt": "2024-01-03T18:43:47.534Z",
        "isSelectedFile": false,
        "id": "6595d777c849631c75bbdf4c"
      }
    ],
    "createdAt": "2024-01-03T21:54:00.046Z",
    "updatedAt": "2024-01-03T21:54:00.046Z",
    "id": "RMHhwSn76"
  },
  {
    "name": "Grass learning",
    "_id": "KeZsxTOF6",
    "updatedAt": "2024-03-28T17:46:16.165Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6605a2d34f699d92d43eac63",
          "6605a2d34f699d92d43eac62",
          "6605a2d34f699d92d43eac64"
        ],
        "fileType": "folder",
        "_id": "6605a2d34f699d92d43eac65",
        "createdAt": "2024-03-28T17:46:16.165Z",
        "updatedAt": "2024-03-28T17:46:16.165Z",
        "isSelectedFile": false,
        "id": "6605a2d34f699d92d43eac65"
      },
      {
        "name": "sketch.js",
        "content": "// Create a 2D array\n// Sorry if you are used to matrix math!\n// How would you do this with a\n// higher order function????\n\nlet lineSegments = [];\n\nfunction make2DArray(cols, rows) {\n  let arr = new Array(cols);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(rows);\n    // Fill the array with 0s\n    for (let j = 0; j < arr[i].length; j++) {\n      //arr[i][j] = 0;\n      arr[i][j] = new MySquare()\n    }\n  }\n  return arr;\n}\n\nclass MySquare {\n  constructor() {\n    this.state = hueValue\n    this.isLine = false\n  }\n}\n\n// The grid\nlet grid;\n// How big is each square?\nlet w = 4;\nlet cols, rows;\nlet hueValue = 200;\n\n// Check if a row is within the bounds\nfunction withinCols(i) {\n  return i >= 0 && i <= cols - 1;\n}\n\n// Check if a column is within the bounds\nfunction withinRows(j) {\n  return j >= 0 && j <= rows - 1;\n}\n\nfunction setup() {\n  createCanvas(500, 300);\n  colorMode(HSB, 360, 255, 255);\n  cols = width / w;\n  rows = height / w;\n  grid = make2DArray(cols, rows);\n}\nfunction mouseDragged() {\n    //lineSegments.push({x1: pmouseX, y1: pmouseY, x2: mouseX, y2: mouseY});\n\n  let mouseCol = floor(cols / 2); // Middle column position\n  let mouseRow = 0; // Top row position\n  \n  // Randomly add an area of sand particles\n  let matrix = 1; // Set matrix width to 1\n  let extent = floor(matrix / 2);\n  for (let i = -extent; i <= extent; i++) {\n    for (let j = -extent; j <= extent; j++) {\n      if (random(1) < 0.75) {\n        let col = mouseCol + i;\n        let row = mouseRow + j;\n        if (withinCols(col) && withinRows(row)) {\n          grid[col][row].state = hueValue;\n        }\n      }\n    }\n  }\n  // Change the color of the sand over time\n  hueValue += 1;\n  if (hueValue > 360) {\n    hueValue = 1;\n  }\n}\n\nfunction mouseClicked() {\n  // Calculate the column and row where the mouse was clicked\n  let col = floor(mouseX / w);\n  let row = floor(mouseY / w);\n  \n  // Check if the click is within the grid bounds\n  if (withinCols(col) && withinRows(row)) {\n    // Read the index of the grid based on the mouse click\n    // let index = grid[col][row];\n    // grid[col][row].state = 360\n    // console.log(\"Index at (\" + col + \", \" + row + \"): \" + index);\n  }\n}\n\n\nfunction draw() {\n  background(0);\n  \n  stroke(255);\n  strokeWeight(2);\n  for (let i = 0; i < lineSegments.length; i++) {\n    line(lineSegments[i].x1, lineSegments[i].y1, lineSegments[i].x2, lineSegments[i].y2);\n  }\n  // Draw the sand\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      noStroke();\n      if (grid[i][j].state > 0) {\n        fill(grid[i][j].state, 255, 255);\n        let x = i * w;\n        let y = j * w;\n        square(x, y, w);\n      }\n    }\n  }\n  \n  // Create a 2D array for the next frame of animation\n  let nextGrid = make2DArray(cols, rows);\n  \n  // Check every cell\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows ; j++) {\n      // What is the state?\n      let state = grid[i][j].state;\n      \n      // If it's a piece of sand!\n      if (state > 0) {\n        // What is below?\n        let below = grid[i][j + 1];\n        \n        // Randomly fall left or right\n        let dir = 1;\n        if (random(1) < 0.5) {\n          dir *= -1;\n        }\n        \n        // Check below left or right\n        let belowA = -1;\n        let belowB = -1;\n        if (withinCols(i + dir)) {\n          belowA = grid[i + dir][j + 1];\n        }\n        if (withinCols(i - dir)) {\n          belowB = grid[i - dir][j + 1];\n        }\n        \n        \n        // Can it fall below or left or right?\n        if (below === 0) {\n          nextGrid[i][j + 1].state = state;\n        } else if (belowA === 0) {\n          nextGrid[i + dir][j + 1].state = state;\n        } else if (belowB === 0) {\n          nextGrid[i - dir][j + 1].state = state;\n        // Stay put!\n        } else {\n          nextGrid[i][j].state = state;\n        }\n      }\n    }\n  }\n  grid = nextGrid;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6605a2d34f699d92d43eac62",
        "isSelectedFile": true,
        "createdAt": "2024-03-28T17:46:16.165Z",
        "updatedAt": "2024-03-28T17:46:16.165Z",
        "id": "6605a2d34f699d92d43eac62"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6605a2d34f699d92d43eac63",
        "createdAt": "2024-03-28T17:46:16.165Z",
        "updatedAt": "2024-03-28T17:46:16.165Z",
        "isSelectedFile": false,
        "id": "6605a2d34f699d92d43eac63"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6605a2d34f699d92d43eac64",
        "createdAt": "2024-03-28T17:46:16.165Z",
        "updatedAt": "2024-03-28T17:46:16.165Z",
        "isSelectedFile": false,
        "id": "6605a2d34f699d92d43eac64"
      }
    ],
    "createdAt": "2024-03-28T17:03:45.149Z",
    "id": "KeZsxTOF6"
  },
  {
    "name": "HTML workshop",
    "_id": "gSK5X9wQ5k",
    "updatedAt": "2022-11-16T17:56:21.040Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6375045b5c2f5c2d4471cbd6",
          "6375045b5c2f5c2d4471cbd5",
          "6375045b5c2f5c2d4471cbd7"
        ],
        "fileType": "folder",
        "_id": "6375045b5c2f5c2d4471cbd8",
        "createdAt": "2022-11-16T17:56:21.040Z",
        "updatedAt": "2022-11-16T17:56:21.040Z",
        "isSelectedFile": false,
        "id": "6375045b5c2f5c2d4471cbd8"
      },
      {
        "name": "sketch.js",
        "content": "let mySlider\nlet myText\nlet textBox\nlet myButton\n\n// Dave: select scrollable list\n// attribute('size', 4)\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // create HTML elements\n  mySlider = createSlider(12, 100, 24)\n  myText = createP('hello')\n  textBox = createInput('type things here')\n  myButton = createButton('Enter')\n  \n  // initialize events\n  textBox.input(changeText)\n  mySlider.changed(changeTextSize)\n  myButton.mousePressed(changeTextColor)\n  myButton.mouseOver(changeBtnBackground)\n  myButton.mouseOut(setWhiteBackground)\n  \n  // select HTML elements\n  let bigText = select('#big_text')\n  bigText.style('font-size', '36px')\n  let blueText = selectAll('.blue')\n  for(let i = 0; i < blueText.length; i++) {\n    blueText[i].style('color', 'blue')\n  }\n  let paragraphs = selectAll('.paragraph')\n  for(let i = 0; i < paragraphs.length; i++) {\n    paragraphs[i].mouseOver(setUnderline)\n    paragraphs[i].mouseOut(removeUnderline)\n  }\n}\n\nfunction draw() {\n  background(220);\n  text(myText.html(), width/2, height/2)\n}\n\nfunction changeText() {\n  myText.html(textBox.value())\n}\n\nfunction changeTextSize() {\n  myText.style('font-size', mySlider.value() + 'px')\n}\n\nfunction changeTextColor() {\n  let r = random(255)\n  let g = random(255)\n  let b = random(255)\n  myText.style('color',\n               'rgb(' + r + ',' + g + ',' + b + ')'\n              )\n  // short cut writing multiple variables and strings together\n  //myText.style('color', `rgb(${r}, ${g}, ${g})`)\n}\n\nfunction changeBtnBackground() {\n  let r = random(255)\n  let g = random(255)\n  let b = random(255)\n  myButton.style('background-color' , 'rgb(' + r + ',' + g + ',' + b + ')')\n}\n\nfunction setWhiteBackground() {\n  myButton.style('background-color' , 'white')\n}\n\nfunction setUnderline() {\n  this.style('text-decoration', 'underline')\n}\n\nfunction removeUnderline() {\n  this.style('text-decoration', 'none')\n}",
        "children": [],
        "fileType": "file",
        "_id": "6375045b5c2f5c2d4471cbd5",
        "isSelectedFile": true,
        "createdAt": "2022-11-16T17:56:21.040Z",
        "updatedAt": "2022-11-16T17:56:21.040Z",
        "id": "6375045b5c2f5c2d4471cbd5"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n      <p id=\"big_text\">id is set uniquely</p>\n      <p class=\"paragraph\">hello I am a paragraph 1</p>\n      <p class=\"paragraph blue\">hello I am a paragraph 2</p>\n      <p class=\"paragraph\">hello I am a paragraph 3</p>\n      <p class=\"paragraph blue\">hello I am a paragraph 4</p>\n      <p class=\"paragraph\">hello I am a paragraph 5</p>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6375045b5c2f5c2d4471cbd6",
        "createdAt": "2022-11-16T17:56:21.040Z",
        "updatedAt": "2022-11-16T17:56:21.040Z",
        "isSelectedFile": false,
        "id": "6375045b5c2f5c2d4471cbd6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6375045b5c2f5c2d4471cbd7",
        "createdAt": "2022-11-16T17:56:21.040Z",
        "updatedAt": "2022-11-16T17:56:21.040Z",
        "isSelectedFile": false,
        "id": "6375045b5c2f5c2d4471cbd7"
      }
    ],
    "createdAt": "2022-11-16T15:50:11.408Z",
    "id": "gSK5X9wQ5k"
  },
  {
    "name": "I AM: Coding My Things CC Fest",
    "_id": "opD9csRDs",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65a8b0e9b87e53f337c6be8e",
          "65a8b0e9b87e53f337c6be8f",
          "65a8b0e9b87e53f337c6be90",
          "65a8b0e9b87e53f337c6be91",
          "65a8b0e9b87e53f337c6be92",
          "65a8b0e9b87e53f337c6be93",
          "65a8b0e9b87e53f337c6be94"
        ],
        "fileType": "folder",
        "_id": "65a8b0e9b87e53f337c6be8d",
        "isSelectedFile": false,
        "createdAt": "2024-01-28T18:48:28.448Z",
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be8d"
      },
      {
        "name": "sketch.js",
        "content": "// modified from Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\n// import physics engine (Toxiclibs.js)\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\nlet particles = []; // where we save our particles\nlet springs = []; // where we save our springs\n\nlet shapeGraphic; // graphic/layer to draw the shape\nlet quadrantDiagramGraphic; // graphic/layer to draw the diagram\nlet webGLGraphic; // webGL graphic\nlet pixelShader; // shader for pixel effect\n\nlet screenShotBtn; // button to save canvas\nlet modeSelect; // select straight or curved mode for shape\nlet bodyColorPicker; // color picker for shape body\nlet bodyStrokeColorPicker; // color picker for shape stroke\nlet backgroundColorPicker; // color picker for background\nlet textColorPicker; // color picker for text, diagram\nlet strokeWeightSlider; // slider to adjust stroke weight\nlet pixelSliderX; // slider to adjust pixel effect on x axis\nlet pixelSliderY; // slider to adjust pixel effect on y axis\nlet showGrid; // checkbox to show/not show diagram\nlet showSprings; // checkbox to show/not show springs\nlet showShapePoints; // checkbox to show/not points\nlet showShape; // checkbox to show/not show shape\n\n// preload\nfunction preload() {\n  pixelShader = loadShader(\"shader.vert\", \"shader.frag\");\n}\n\n// p5 environment setup\nfunction setup() {\n  createCanvas(800, 800); // create a 800x800 canvas\n  shapeGraphic = createGraphics(width, height); // create shapeGraphic graphic/layer to draw shape\n  quadrantDiagramGraphic = createGraphics(width, height); // create quadrantDiagramGraphic to draw diagram\n  webGLGraphic = createGraphics(width, height, WEBGL); // create webGL graphic/layer\n\n  screenShotBtn = createButton(\"save canvas\"); // create a button named save canvas\n  screenShotBtn.mousePressed(() => saveCanvas(\"myCanvas\", \"jpg\")); // when mouse clicks screenShotBtn, save canvas\n  modeSelect = createSelect(); // create a select\n  modeSelect.option(\"straight\"); // add a straight option to modeSelect\n  modeSelect.option(\"curved\"); // add a curved option to modeSelect\n  bodyColorPicker = createColorPicker(\"#fff\"); // create color picker, #fff by default\n  bodyStrokeColorPicker = createColorPicker(\"#ff00ff\"); // create body stroke color picker, #ff00ff by default\n  backgroundColorPicker = createColorPicker(\"#fff\"); // create background color picker, #fff by default\n  textColorPicker = createColorPicker(\"#000\"); // crete text color picker, #000 by default\n  strokeWeightSlider = createSlider(2, 20, 4, 1); // create stroke weight slider, min value 2, max value 20, default value 4, step value 1\n  pixelSliderX = createSlider(0.1, 1, 1, 0.1); // create pixel x axis slider, min value 0.1, max value 1, default value 1, step value 0.1\n  pixelSliderY = createSlider(0.1, 1, 1, 0.1); // create pixel y axis slider, min value 0.1, max value 1, default value 1, step value 0.1\n  showShape = createCheckbox(\"show shape\", false); // create showShape checkbox, false by default\n  showGrid = createCheckbox(\"show diagram\", true); // create showGrid checkbox, true by default\n  showShapePoints = createCheckbox(\"show points\", true); // create showShapePoints checkbox, true by default\n  showSprings = createCheckbox(\"show springs\", false); // create showSprings checkbox, false by default\n\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width / 2, -height / 2, width, height);\n  physics.setWorldBounds(bounds);\n\n  // add points one by one in order into particles\n  particles.push(new Particle(-350, -200)); // tzu's book\n  particles.push(new Particle(0, 0)); // eleonora's essence\n  particles.push(new Particle(300, -300)); // jack's watch\n  particles.push(new Particle(350, 100)); // tzu's book\n  particles.push(new Particle(350, 250)); // angela's phone\n  particles.push(new Particle(350, 350)); // janie's birth control\n  particles.push(new Particle(250, 300)); // nicole's laptop\n  particles.push(new Particle(140, 200)); // tiny needling purse\n  particles.push(new Particle(100, 300)); // matthew's pen\n  particles.push(new Particle(0, 350)); // saber's coke\n  particles.push(new Particle(-300, 300)); // jack's watch\n  particles.push(new Particle(-350, 180)); // tiny needling purse\n  particles.push(new Particle(-350, 300)); // nicole's laptop\n  particles.push(new Particle(-250, 100)); // angela's phone\n  \n  // particles.push(new Particle(-150, -100)); // particle 0: position(-150, -100)\n  // particles.push(new Particle(-20, -50)); // particle 1: position(-20, -50)\n  // particles.push(new Particle(80, -80)); // particle 2: position(80, -80)\n  // particles.push(new Particle(30, 20)); // particle 3: position(30, 20)\n  // particles.push(new Particle(80, 120)); // particle 4: position(80, 120)\n  // particles.push(new Particle(-20, 80)); // particle 5: position(-20, 80)\n  // particles.push(new Particle(-120, 120)); // particle 6: position(-120, 120)\n  // particles.push(new Particle(-70, 20)); // particle 7: position(-70, 20)\n\n  // add springs between each particle\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n}\n\n// do every frame\nfunction draw() {\n  //clear()\n  webGLGraphic.shader(pixelShader);\n  pixelShader.setUniform(\"mouse\", [pixelSliderX.value(), pixelSliderY.value()]);\n  pixelShader.setUniform(\"tex\", shapeGraphic);\n  webGLGraphic.rect(-width / 2, -height / 2, width, height);\n\n  shapeGraphic.background(255);\n\n  image(webGLGraphic, 0, 0);\n\n  if (showShape.checked()) {\n    // if showShape is checked\n    drawShape(shapeGraphic); // draw shape on shapeGraphic\n  }\n\n  if (showGrid.checked()) {\n    // if showGrid is checked\n    drawGrid(quadrantDiagramGraphic); // draw diagram on quadrantDiagramGraphic\n  }\n\n  if (showSprings.checked()) {\n    // if showSprings is checked\n    drawSprings(quadrantDiagramGraphic); // draw springs on quadrantDiagramGraphic\n  }\n\n  if (showShapePoints.checked()) {\n    // if showShapePoints is checked,\n    drawShapePoints(quadrantDiagramGraphic); //draw points on quadrantDiagramGraphic\n  }\n}\n\n// draw shape on the given graphic\nfunction drawShape(g) {\n  g.background(backgroundColorPicker.color());\n  g.push();\n  g.translate(width / 2, height / 2);\n  physics.update();\n\n  g.stroke(bodyStrokeColorPicker.color());\n  if (showSprings.checked())\n    g.stroke([\n      red(bodyStrokeColorPicker.color()),\n      green(bodyStrokeColorPicker.color()),\n      blue(bodyStrokeColorPicker.color()),\n      100,\n    ]);\n\n  g.fill(bodyColorPicker.color());\n\n  if (showSprings.checked())\n    g.fill([\n      red(bodyColorPicker.color()),\n      green(bodyColorPicker.color()),\n      blue(bodyColorPicker.color()),\n      100,\n    ]);\n\n  g.strokeWeight(strokeWeightSlider.value());\n\n  if (modeSelect.value() === \"straight\") {\n    g.beginShape(); // begin the make the shape with the vertices\n    for (let particle of particles) {\n      g.vertex(particle.x, particle.y);\n    }\n    g.endShape(CLOSE);\n  }\n\n  if (modeSelect.value() === \"curved\") {\n    g.beginShape();\n    for (let p of particles) {\n      g.curveVertex(p.x, p.y);\n    }\n    g.curveVertex(particles[0].x, particles[0].y);\n    g.curveVertex(particles[1].x, particles[1].y);\n    g.curveVertex(particles[2].x, particles[2].y);\n    g.endShape();\n  }\n\n  if (mouseIsPressed) {\n    if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n      particles[0].lock();\n      particles[0].x = mouseX - width/2;\n      particles[0].y = mouseY - height/2;\n      particles[0].unlock();\n    }\n  }\n  g.pop();\n}\n\n// draw diagram on the given graphic\nfunction drawGrid(graphic) {\n  graphic.clear(); //background(\"yellow\")\n\n  graphic.push();\n  // graphic.textAlign(LEFT, TOP)\n  graphic.stroke(textColorPicker.color());\n  graphic.strokeWeight(1);\n  graphic.fill(textColorPicker.color());\n  graphic.translate(width / 2, height / 2);\n  graphic.line(-width / 2, 0, width / 2, 0); // X axis\n  graphic.line(0, -height / 2, 0, height / 2); // Y axis\n  graphic.textSize(12);\n  graphic.noStroke();\n  for (let x = -width / 2; x < width / 2; x += 50) {\n    graphic.line(x, 0, x, 5);\n    graphic.text(x, x, 10);\n  }\n\n  for (let y = -height / 2; y < height / 2; y += 50) {\n    graphic.line(0, y, 5, y);\n    graphic.text(y, 0, y);\n  }\n  graphic.push();\n  graphic.textAlign(RIGHT);\n  graphic.text(\"protect\", width / 2, 0);\n  graphic.textAlign(LEFT);\n  graphic.text(\"release\", -width / 2, 0);\n  graphic.text(\"human-made\", 0, height / 2);\n  graphic.textAlign(LEFT, TOP);\n  graphic.text(\"nature\", 0, -height / 2);\n  graphic.pop();\n\n  graphic.pop();\n\n  image(graphic, 0, 0);\n}\n\n// draw points and index on the given graphic\nfunction drawShapePoints(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  particles.forEach((particle, index) => {\n    graphic.push();\n    //graphic.strokeWeight(5)\n    //graphic.point(particle.x, particle.y)\n    graphic.noFill();\n    graphic.stroke(textColorPicker.color());\n    //graphic.circle(particle.x, particle.y, 15);\n    graphic.fill(textColorPicker.color());\n    graphic.noStroke();\n    graphic.textSize(15);\n    graphic.textAlign(CENTER, CENTER);\n    graphic.text(index, particle.x, particle.y);\n    graphic.pop();\n  });\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\n// draw springs on the given graphic\nfunction drawSprings(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  // graphic.stroke([\n  //     red(bodyStrokeColorPicker.color()),\n  //     green(bodyStrokeColorPicker.color()),\n  //     blue(bodyStrokeColorPicker.color()),\n  //     100]\n  //   );\n\n  for (let spring of springs) {\n    graphic.stroke(textColorPicker.color());\n    graphic.strokeWeight(1);\n    spring.show(graphic);\n  }\n\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\nfunction keyTyped() {\n  if (key === \"s\" || key === \"S\") {\n    saveCanvas(\"myCanvas\", \"jpg\");\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be92",
        "isSelectedFile": true,
        "createdAt": "2024-01-28T18:48:28.448Z",
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be92"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be8e",
        "isSelectedFile": false,
        "createdAt": "2024-01-28T18:48:28.448Z",
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be8e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be94",
        "isSelectedFile": false,
        "createdAt": "2024-01-28T18:48:28.448Z",
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be94"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y, s) {\n    super(x, y);\n    this.r = 2;\n    this.s = s\n    physics.addParticle(this);\n  }\n\n  show(g) {\n    g.fill(252, 238, 33);\n    g.strokeWeight(4);\n    g.circle(this.x, this.y, this.r * 12);\n\n    g.strokeWeight(this.r * 4);\n    g.point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be8f",
        "isSelectedFile": false,
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "createdAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be8f"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show(g) {\n    g.strokeWeight(1);\n    //g.stroke(0, 127);\n    g.line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be93",
        "isSelectedFile": false,
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "createdAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be93"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be91",
        "isSelectedFile": false,
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "createdAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be91"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "65a8b0e9b87e53f337c6be90",
        "isSelectedFile": false,
        "updatedAt": "2024-01-28T18:48:28.448Z",
        "createdAt": "2024-01-28T18:48:28.448Z",
        "id": "65a8b0e9b87e53f337c6be90"
      }
    ],
    "createdAt": "2024-01-18T05:02:37.587Z",
    "updatedAt": "2024-01-28T18:48:28.448Z",
    "id": "opD9csRDs"
  },
  {
    "name": "ims-01-yu",
    "_id": "wseW-x0GP",
    "updatedAt": "2024-03-12T15:41:17.179Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65f0773bfabe6959759b6cec",
          "65f0773bfabe6959759b6ceb",
          "65f0773bfabe6959759b6ced"
        ],
        "fileType": "folder",
        "_id": "65f0773bfabe6959759b6cee",
        "createdAt": "2024-03-12T15:41:17.179Z",
        "updatedAt": "2024-03-12T15:41:17.179Z",
        "id": "65f0773bfabe6959759b6cee"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/leey611/sketches/wseW-x0GP\n// ima-01-yu\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "65f0773bfabe6959759b6ceb",
        "isSelectedFile": true,
        "createdAt": "2024-03-12T15:41:17.179Z",
        "updatedAt": "2024-03-12T15:41:17.179Z",
        "id": "65f0773bfabe6959759b6ceb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65f0773bfabe6959759b6cec",
        "createdAt": "2024-03-12T15:41:17.179Z",
        "updatedAt": "2024-03-12T15:41:17.179Z",
        "id": "65f0773bfabe6959759b6cec"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65f0773bfabe6959759b6ced",
        "createdAt": "2024-03-12T15:41:17.179Z",
        "updatedAt": "2024-03-12T15:41:17.179Z",
        "id": "65f0773bfabe6959759b6ced"
      }
    ],
    "createdAt": "2024-03-12T15:39:55.670Z",
    "id": "wseW-x0GP"
  },
  {
    "name": "ims02-yu",
    "_id": "T5zVm6jEl",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "660ad85f9fb0bc027eb7c4d1",
          "660ad85f9fb0bc027eb7c4d2",
          "660ad85f9fb0bc027eb7c4d3"
        ],
        "fileType": "folder",
        "_id": "660ad85f9fb0bc027eb7c4d0",
        "createdAt": "2024-04-04T17:48:46.342Z",
        "updatedAt": "2024-04-04T17:48:46.342Z",
        "isSelectedFile": false,
        "id": "660ad85f9fb0bc027eb7c4d0"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/leey611/sketches/T5zVm6jEl\n// ims02-yu\n\nlet my = {};\n\nlet palette = \"c2f970-44344f-564d80-98a6d4-d3fcd5\"\n  .split(\"-\")\n  .map((a) => \"#\" + a);\nlet inc = 0.05;\nlet scl = 10;\nlet cols, rows;\nlet zoff = 0;\nlet particles = [];\nlet flowfield;\nconst golden_ratio_conjugate = 0.618033988749895;\nlet h = Math.random();\n\nfunction setup() {\n  my.width = 900;\n  my.height = 900;\n  my.xpos = 0;\n  my.ypos = 0;\n  my.xspeed = 1;\n  my.yspeed = 1;\n  // my.xlen = 0;\n  // my.ylen = 0;\n  my.debug = 1;\n  // my.fullScreenBtn = 0;\n  my.startTime = 0;\n  my.changeTime = 1.0;\n\n  if (!my.debug) {\n    my.width = windowWidth;\n    my.height = windowHeight;\n  }\n  createCanvas(my.width, my.height);\n  //noStroke();\n  makeNewFlowField()\n\n  my.fullScreenBtn = createButton(\"Full Screen\");\n  my.fullScreenBtn.mousePressed(full_screen_action);\n  my.fullScreenBtn.style(\"font-size:42px\");\n\n  my.startTime = millis() / 1000.0;\n\n  new_pos();\n\n  // init_dim();\n}\n\nfunction draw() {\n  let yoff = 0;\n  // describe(\"Initialize y offset for noise, making the particles move by time.\");\n  for (let y = 0; y < rows; y++) {\n    let xoff = 0;\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n      let r = noise(xoff, yoff) * 255;\n      let angle = noise(xoff, yoff, zoff) * TWO_PI * 2;\n      let cir = TWO_PI;\n      let mapAng = map(angle, 0, cir * 2, -cir, cir);\n      let v = p5.Vector.fromAngle(mapAng);\n      v.setMag(1);\n      flowfield[index] = v;\n      xoff += inc;\n      // push()\n      // translate(x*scl, y*scl)\n      // rotate(v.heading())\n      // line(0,0,scl,0)\n      // pop()\n      //fill(r)\n      //rect(x*scl, y*scl, scl, scl)\n    }\n    yoff += inc;\n    zoff += 0.0005;\n  }\n  // describe(\n  //   \"Loop through rows and columns and store vector in flowfield array, meaning that accessibility help knowledge spread freely.\"\n  // );\n\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].follow(flowfield);\n    particles[i].update();\n    //particles[i].edges()\n    particles[i].show(i);\n  }\n  // describe(\"Update and display particles\");\n}\n\nfunction new_pos() {\n  my.xpos = random(0, width);\n  my.ypos = random(0, height);\n}\n\nfunction check_time() {\n  let now = millis() / 1000;\n  if (now - my.startTime > my.changeTime) {\n    my.startTime = now;\n    new_pos();\n  }\n}\n\n// function init_dim() {\n//   xlen = width / 3;\n//   ylen = height;\n// }\n\n// From\n// https://editor.p5js.org/jht1493/sketches/5LgILr8RF\n\nfunction full_screen_action() {\n  my.fullScreenBtn.remove();\n  fullscreen(1);\n  let delay = 3000;\n  h = Math.random()\n  setTimeout(ui_present_window, delay);\n}\n\nfunction ui_present_window() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(\"#c3c3c3\");\n  h = Math.random()\n  //setInterval(makeNewFlowField,5000)\n  makeNewFlowField()\n  setInterval(makeNewFlowField,15000)\n}\n\nfunction makeNewFlowField(newH) {\n  background(\"#c3c3c3\");\n  strokeCap(SQUARE);\n  cols = floor(width / scl);\n  rows = floor(height / scl);\n  \n  flowfield = new Array(cols * rows);\n  h = Math.random()\n  // describe(\"Initialize flowfield array\");\n  particles = []\n  for (let i = 0; i < 2000; i++) {\n    if (random() > 0.8) {\n      h += golden_ratio_conjugate;\n      h %= 1;\n      particles.push(new Particle(getNewVec()));\n    } else if (random() < 0.1) {\n      particles.push(new Particle());\n    }\n  }\n}\n\nconst dia = 350;\nfunction getNewVec() {\n  // describe(\n  //   \"Function to get a new random vector within a circular area, symbolizing that time and knowledge will grow forever.\"\n  // );\n  let vec = createVector(random(width), random(height));\n  if (dist(width / 2, height / 2, vec.x, vec.y) < dia) {\n    return vec;\n  }\n  return getNewVec();\n}\n\nfunction Particle(pos) {\n  this.pos = pos || createVector(random(width), random(height));\n  this.vel = createVector(0, 0); //p5.Vector.random2D()//\n  this.acc = createVector(0, 0);\n  this.sw = random() > 0.1 ? random(1, 4) : random(40);\n  this.clr = color(...hsvToRgb(h, 0.6, 0.95));\n  this.maxspeed = 1.3;\n\n  // describe(\n  //   \"Particle object constructor: Set stroke weight and color. Different attributes of the particles manifest diversity.\"\n  // );\n\n  this.update = function () {\n    this.vel.add(this.acc);\n    this.vel.limit(this.maxspeed);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n\n    if (this.sw > 5) {\n      this.sw *= 0.99;\n    }\n  };\n\n  this.follow = function (vectors) {\n    let x = floor(this.pos.x / scl);\n    let y = floor(this.pos.y / scl);\n    let index = x + y * cols;\n    let force = vectors[index];\n    this.applyForce(force);\n  };\n\n  this.applyForce = function (force) {\n    this.acc.add(force);\n  };\n\n  this.show = function (index) {\n    push();\n    translate(this.pos.x, this.pos.y);\n    //rotate(this.vel.heading())\n    stroke(this.clr);\n    strokeWeight(this.sw)\n    //strokeWeight(this.sw)\n    point(0, 0);\n    //rect(0,0,10,10)\n\n    pop();\n    //stroke(this.clr)\n    //stroke(palette[index%palette.length])\n\n    // fill(this.clr)\n    // rect(this.pos.x, this.pos.y, 10, 10)\n  };\n\n  this.edges = function () {\n    // if (this.pos.x > width) this.pos.x = 0\n    // if (this.pos.x < 0) this.pos.x = width\n    // if (this.pos.y > height) this.pos.y = 0\n    // if (this.pos.y < 0) this.pos.y = height\n    if (dist(width / 2, height / 2, this.pos.x, this.pos.y) > dia) {\n      this.pos = getNewVec();\n    }\n  };\n}\n\nfunction hsvToRgb(h, s, v) {\n  // describe(\"Function to convert HSV color to RGB color\");\n  let h_i = Math.floor(h * 6);\n  let f = h * 6 - h_i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  let r, g, b;\n\n  if (h_i === 0) {\n    r = v;\n    g = t;\n    b = p;\n  }\n  if (h_i === 1) {\n    r = q;\n    g = v;\n    b = p;\n  }\n  if (h_i === 2) {\n    r = p;\n    g = v;\n    b = t;\n  }\n  if (h_i === 3) {\n    r = p;\n    g = q;\n    b = v;\n  }\n  if (h_i === 4) {\n    r = t;\n    g = p;\n    b = v;\n  }\n  if (h_i === 5) {\n    r = v;\n    g = p;\n    b = q;\n  }\n\n  return [Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)];\n}\n\nfunction mousePressed() {\n  particles = [];\n  for (let i = 0; i < 100; i++) {\n    if (random() > 0.1) {\n      particles.push(new Particle());\n    }\n  }\n  // describe(\"Function to regenerate particles on mouse click\");\n}\n\n// https://editor.p5js.org/jht9629-nyu/sketches/8Iazn1D_P\n// ims black-n white-1\n\n// https://editor.p5js.org/jht9629-nyu/sketches/3VKJ-q8ar\n// ims03-jht scrolling color bars\n\n// forked and modified from https://editor.p5js.org/jht9629-nyu/sketches/Mpgun-Kti\n// https://openprocessing.org/sketch/2135015\n// ims black-n white-1 bounce",
        "children": [],
        "fileType": "file",
        "_id": "660ad85f9fb0bc027eb7c4d2",
        "isSelectedFile": true,
        "createdAt": "2024-04-04T17:48:46.342Z",
        "updatedAt": "2024-04-04T17:48:46.342Z",
        "id": "660ad85f9fb0bc027eb7c4d2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "660ad85f9fb0bc027eb7c4d1",
        "createdAt": "2024-04-04T17:48:46.342Z",
        "updatedAt": "2024-04-04T17:48:46.342Z",
        "isSelectedFile": false,
        "id": "660ad85f9fb0bc027eb7c4d1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "660ad85f9fb0bc027eb7c4d3",
        "createdAt": "2024-04-04T17:48:46.342Z",
        "updatedAt": "2024-04-04T17:48:46.342Z",
        "isSelectedFile": false,
        "id": "660ad85f9fb0bc027eb7c4d3"
      }
    ],
    "createdAt": "2024-04-01T15:53:03.608Z",
    "updatedAt": "2024-04-04T17:48:46.342Z",
    "id": "T5zVm6jEl"
  },
  {
    "name": "ims03-yu",
    "_id": "jtoE5kFtT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6614902546f7f4e1164bf939",
          "6614902546f7f4e1164bf93a",
          "6614902546f7f4e1164bf93b"
        ],
        "fileType": "folder",
        "_id": "6614902546f7f4e1164bf938",
        "createdAt": "2024-04-09T12:58:53.437Z",
        "updatedAt": "2024-04-09T12:58:53.437Z",
        "isSelectedFile": false,
        "id": "6614902546f7f4e1164bf938"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/leey611/sketches/jtoE5kFtT\n// ima03-yu\n// https://leey611.github.io/p5mirror-leey611/p5projects/ims03-yu-jtoE5kFtT/?v=1\n\nlet my = {};\n\nlet palette = \"c2f970-44344f-564d80-98a6d4-d3fcd5\"\n  .split(\"-\")\n  .map((a) => \"#\" + a);\nlet inc = 0.05;\nlet scl = 10;\nlet cols, rows;\nlet zoff = 0;\nlet particles = [];\nlet flowfield;\nconst golden_ratio_conjugate = 0.618033988749895;\nlet h = Math.random();\n\nlet urlParams\n\nfunction setup() {\n  my.width = 900;\n  my.height = 900;\n  my.xpos = 0;\n  my.ypos = 0;\n  my.xspeed = 1;\n  my.yspeed = 1;\n  // my.xlen = 0;\n  // my.ylen = 0;\n  my.debug = 1;\n  // my.fullScreenBtn = 0;\n  my.startTime = 0;\n  my.changeTime = 1.0;\n  \n  urlParams = get_url_params();\n  \n  console.log('urlParams', urlParams);\n\n  if (!my.debug) {\n    my.width = windowWidth;\n    my.height = windowHeight;\n  }\n  createCanvas(my.width, my.height);\n  //noStroke();\n  makeNewFlowField()\n\n  my.fullScreenBtn = createButton(\"Full Screen\");\n  my.fullScreenBtn.mousePressed(full_screen_action);\n  my.fullScreenBtn.style(\"font-size:42px\");\n\n  my.startTime = millis() / 1000.0;\n\n  new_pos();\n\n  // init_dim();\n}\n\nfunction draw() {\n  let yoff = 0;\n  // describe(\"Initialize y offset for noise, making the particles move by time.\");\n  for (let y = 0; y < rows; y++) {\n    let xoff = 0;\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n      let r = noise(xoff, yoff) * 255;\n      let angle = noise(xoff, yoff, zoff) * TWO_PI * 2;\n      let cir = TWO_PI;\n      let mapAng = map(angle, 0, cir * 2, -cir, cir);\n      let v = p5.Vector.fromAngle(mapAng);\n      v.setMag(1);\n      flowfield[index] = v;\n      xoff += inc;\n      // push()\n      // translate(x*scl, y*scl)\n      // rotate(v.heading())\n      // line(0,0,scl,0)\n      // pop()\n      //fill(r)\n      //rect(x*scl, y*scl, scl, scl)\n    }\n    yoff += inc;\n    zoff += 0.0005;\n  }\n  // describe(\n  //   \"Loop through rows and columns and store vector in flowfield array, meaning that accessibility help knowledge spread freely.\"\n  // );\n\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].follow(flowfield);\n    particles[i].update();\n    //particles[i].edges()\n    particles[i].show(i);\n  }\n  // describe(\"Update and display particles\");\n}\n\nfunction get_url_params() {\n  let query = window.location.search;\n  // console.log('query |' + query + '|');\n  console.log('query.length', query.length);\n  if (query.length < 1) return null;\n  let params = params_query(query);\n  return params;\n  // let store = params['store'];\n  // console.log('nstore', store);\n  // return store;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\nfunction params_query(query) {\n  // eg. query='abc=foo&def=%5Basf%5D&xyz=5'\n  // params={abc: \"foo\", def: \"[asf]\", xyz: \"5\"}\n  const urlParams = new URLSearchParams(query);\n  const params = Object.fromEntries(urlParams);\n  return params;\n}\n\nfunction new_pos() {\n  my.xpos = random(0, width);\n  my.ypos = random(0, height);\n}\n\nfunction check_time() {\n  let now = millis() / 1000;\n  if (now - my.startTime > my.changeTime) {\n    my.startTime = now;\n    new_pos();\n  }\n}\n\n// function init_dim() {\n//   xlen = width / 3;\n//   ylen = height;\n// }\n\n// From\n// https://editor.p5js.org/jht1493/sketches/5LgILr8RF\n\nfunction full_screen_action() {\n  my.fullScreenBtn.remove();\n  fullscreen(1);\n  let delay = 3000;\n  h = Math.random()\n  setTimeout(ui_present_window, delay);\n}\n\nfunction ui_present_window() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(\"#c3c3c3\");\n  if (urlParams?.v) background(\"#000\");\n    \n  h = Math.random()\n  //setInterval(makeNewFlowField,5000)\n  makeNewFlowField()\n  setInterval(makeNewFlowField,15000)\n}\n\nfunction makeNewFlowField(newH) {\n  background(\"#c3c3c3\");\n  if (urlParams?.v) background(\"#000\");\n  strokeCap(SQUARE);\n  cols = floor(width / scl);\n  rows = floor(height / scl);\n  \n  flowfield = new Array(cols * rows);\n  h = Math.random()\n  // describe(\"Initialize flowfield array\");\n  particles = []\n  for (let i = 0; i < 2000; i++) {\n    if (random() > 0.8) {\n      h += golden_ratio_conjugate;\n      h %= 1;\n      particles.push(new Particle(getNewVec()));\n    } else if (random() < 0.1) {\n      particles.push(new Particle());\n    }\n  }\n}\n\nconst dia = 350;\nfunction getNewVec() {\n  // describe(\n  //   \"Function to get a new random vector within a circular area, symbolizing that time and knowledge will grow forever.\"\n  // );\n  let vec = createVector(random(width), random(height));\n  if (dist(width / 2, height / 2, vec.x, vec.y) < dia) {\n    return vec;\n  }\n  return getNewVec();\n}\n\nfunction Particle(pos) {\n  this.pos = pos || createVector(random(width), random(height));\n  this.vel = createVector(0, 0); //p5.Vector.random2D()//\n  this.acc = createVector(0, 0);\n  this.sw = random() > 0.1 ? random(1, 4) : random(40);\n  this.clr = urlParams?.v ? color(random(['red', 'green', [187, 165, 61], 'black'])) : color(...hsvToRgb(h, 0.6, 0.95));\n  this.maxspeed = 1.3;\n\n  // describe(\n  //   \"Particle object constructor: Set stroke weight and color. Different attributes of the particles manifest diversity.\"\n  // );\n\n  this.update = function () {\n    this.vel.add(this.acc);\n    this.vel.limit(this.maxspeed);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n\n    if (this.sw > 5) {\n      this.sw *= 0.99;\n    }\n  };\n\n  this.follow = function (vectors) {\n    let x = floor(this.pos.x / scl);\n    let y = floor(this.pos.y / scl);\n    let index = x + y * cols;\n    let force = vectors[index];\n    this.applyForce(force);\n  };\n\n  this.applyForce = function (force) {\n    this.acc.add(force);\n  };\n\n  this.show = function (index) {\n    push();\n    translate(this.pos.x, this.pos.y);\n    //rotate(this.vel.heading())\n    stroke(this.clr);\n    strokeWeight(this.sw)\n    //strokeWeight(this.sw)\n    point(0, 0);\n    //rect(0,0,10,10)\n\n    pop();\n    //stroke(this.clr)\n    //stroke(palette[index%palette.length])\n\n    // fill(this.clr)\n    // rect(this.pos.x, this.pos.y, 10, 10)\n  };\n\n  this.edges = function () {\n    // if (this.pos.x > width) this.pos.x = 0\n    // if (this.pos.x < 0) this.pos.x = width\n    // if (this.pos.y > height) this.pos.y = 0\n    // if (this.pos.y < 0) this.pos.y = height\n    if (dist(width / 2, height / 2, this.pos.x, this.pos.y) > dia) {\n      this.pos = getNewVec();\n    }\n  };\n}\n\nfunction hsvToRgb(h, s, v) {\n  // describe(\"Function to convert HSV color to RGB color\");\n  let h_i = Math.floor(h * 6);\n  let f = h * 6 - h_i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  let r, g, b;\n\n  if (h_i === 0) {\n    r = v;\n    g = t;\n    b = p;\n  }\n  if (h_i === 1) {\n    r = q;\n    g = v;\n    b = p;\n  }\n  if (h_i === 2) {\n    r = p;\n    g = v;\n    b = t;\n  }\n  if (h_i === 3) {\n    r = p;\n    g = q;\n    b = v;\n  }\n  if (h_i === 4) {\n    r = t;\n    g = p;\n    b = v;\n  }\n  if (h_i === 5) {\n    r = v;\n    g = p;\n    b = q;\n  }\n\n  return [Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)];\n}\n\nfunction mousePressed() {\n  particles = [];\n  for (let i = 0; i < 100; i++) {\n    if (random() > 0.1) {\n      particles.push(new Particle());\n    }\n  }\n  // describe(\"Function to regenerate particles on mouse click\");\n}\n\n// https://editor.p5js.org/jht9629-nyu/sketches/8Iazn1D_P\n// ims black-n white-1\n\n// https://editor.p5js.org/jht9629-nyu/sketches/3VKJ-q8ar\n// ims03-jht scrolling color bars\n\n// forked and modified from \n// https://editor.p5js.org/leey611/sketches/T5zVm6jEl\n// ims02-yu",
        "children": [],
        "fileType": "file",
        "_id": "6614902546f7f4e1164bf93a",
        "isSelectedFile": true,
        "createdAt": "2024-04-09T12:58:53.437Z",
        "updatedAt": "2024-04-09T12:58:53.437Z",
        "id": "6614902546f7f4e1164bf93a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6614902546f7f4e1164bf939",
        "createdAt": "2024-04-09T12:58:53.437Z",
        "updatedAt": "2024-04-09T12:58:53.437Z",
        "isSelectedFile": false,
        "id": "6614902546f7f4e1164bf939"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6614902546f7f4e1164bf93b",
        "createdAt": "2024-04-09T12:58:53.437Z",
        "updatedAt": "2024-04-09T12:58:53.437Z",
        "isSelectedFile": false,
        "id": "6614902546f7f4e1164bf93b"
      }
    ],
    "createdAt": "2024-04-09T00:47:33.988Z",
    "updatedAt": "2024-04-09T12:58:53.437Z",
    "id": "jtoE5kFtT"
  },
  {
    "name": "interactive self portrait",
    "_id": "Lw8O4sJdm",
    "updatedAt": "2023-02-06T18:58:25.834Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63e0b45eff1d1d26a6930282",
          "63e0b45eff1d1d26a6930281",
          "63e0b45eff1d1d26a6930283"
        ],
        "fileType": "folder",
        "_id": "63e0b45eff1d1d26a6930284",
        "isSelectedFile": false,
        "createdAt": "2023-02-06T18:58:25.834Z",
        "updatedAt": "2023-02-06T18:58:25.834Z",
        "id": "63e0b45eff1d1d26a6930284"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "63e0b45eff1d1d26a6930281",
        "isSelectedFile": false,
        "createdAt": "2023-02-06T18:58:25.834Z",
        "updatedAt": "2023-02-06T18:58:25.834Z",
        "id": "63e0b45eff1d1d26a6930281"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63e0b45eff1d1d26a6930282",
        "isSelectedFile": true,
        "createdAt": "2023-02-06T18:58:25.834Z",
        "updatedAt": "2023-02-06T18:58:25.834Z",
        "id": "63e0b45eff1d1d26a6930282"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63e0b45eff1d1d26a6930283",
        "isSelectedFile": false,
        "createdAt": "2023-02-06T18:58:25.834Z",
        "updatedAt": "2023-02-06T18:58:25.834Z",
        "id": "63e0b45eff1d1d26a6930283"
      }
    ],
    "createdAt": "2023-02-06T18:58:25.834Z",
    "id": "Lw8O4sJdm"
  },
  {
    "name": "Jeweled echidna",
    "_id": "uo2kkyr_v",
    "updatedAt": "2022-11-17T20:10:41.819Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "637687fb76676055c7a56e0e",
          "637687fb76676055c7a56e0d",
          "637687fb76676055c7a56e0f"
        ],
        "fileType": "folder",
        "_id": "637687fb76676055c7a56e10",
        "isSelectedFile": false,
        "createdAt": "2022-11-17T20:10:41.819Z",
        "updatedAt": "2022-11-17T20:10:41.819Z",
        "id": "637687fb76676055c7a56e10"
      },
      {
        "name": "sketch.js",
        "content": "let myText\nlet textBox\nlet myButton\nlet mySlider\n\nlet sel\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  textBox = createInput('hello')\n  myText = createP('hello')//textBox.value()\n  textBox.changed(changeText)\n  \n  myButton = createButton('myButton')\n  myButton.mousePressed(changeText)\n  myButton.mousePressed(addOption)\n  \n  mySlider = createSlider(14, 60, 24)\n  mySlider.changed(changeTextSize)\n  \n  let bigText = select('#big_text')\n  bigText.style('font-size', '24px')\n  \n  let blueText = selectAll('.blue')\n  for(let i = 0; i < blueText.length; i++) {\n    blueText[i].style('color', 'blue')\n  }\n  \n  let paragraphs = selectAll('p')\n  for(let i = 0; i < paragraphs.length; i++) {\n    paragraphs[i].mouseOver(setUnderline)\n    paragraphs[i].mouseOut(removeUnderline)\n  }\n  \n  sel = createSelect()\n  sel.position(10, 10);\n  sel.option('pear');\n  sel.option('kiwi');\n  sel.option('grape');\n  sel.selected('kiwi');\n  sel.attribute('size', 3)\n  sel.changed(addOption);\n}\n\nfunction draw() {\n  background(220);\n  //text(myText, width/2, height/2)\n}\n\nfunction addOption() {\n  sel.option(textBox.value())\n}\n\nfunction changeText() {\n  myText.html(textBox.value())\n}\n\nfunction changeTextSize() {\n  myText.style('font-size', mySlider.value() + 'px')\n}\n\nfunction setUnderline() {\n  this.style('text-decoration', 'underline')\n}\n\nfunction removeUnderline() {\n  this.style('text-decoration', 'none')\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "637687fb76676055c7a56e0d",
        "isSelectedFile": true,
        "createdAt": "2022-11-17T20:10:41.819Z",
        "updatedAt": "2022-11-17T20:10:41.819Z",
        "id": "637687fb76676055c7a56e0d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n      <p id=\"big_text\">id is set uniquely</p>\n      <p class=\"paragraph\">hello I am a paragraph 1</p>\n      <p class=\"paragraph blue\">hello I am a paragraph 2</p>\n      <p class=\"paragraph\">hello I am a paragraph 3</p>\n      <p class=\"paragraph blue\">hello I am a paragraph 4</p>\n      <p class=\"paragraph\">hello I am a paragraph 5</p>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "637687fb76676055c7a56e0e",
        "isSelectedFile": false,
        "createdAt": "2022-11-17T20:10:41.819Z",
        "updatedAt": "2022-11-17T20:10:41.819Z",
        "id": "637687fb76676055c7a56e0e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "637687fb76676055c7a56e0f",
        "isSelectedFile": false,
        "createdAt": "2022-11-17T20:10:41.819Z",
        "updatedAt": "2022-11-17T20:10:41.819Z",
        "id": "637687fb76676055c7a56e0f"
      }
    ],
    "createdAt": "2022-11-17T19:49:18.869Z",
    "id": "uo2kkyr_v"
  },
  {
    "name": "Likeable lunaria",
    "_id": "b52_lWDUI",
    "updatedAt": "2024-02-27T01:34:28.935Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65dd3be509bba09e50615843",
          "65dd3be509bba09e50615842",
          "65dd3be509bba09e50615844"
        ],
        "fileType": "folder",
        "_id": "65dd3be509bba09e50615845",
        "createdAt": "2024-02-27T01:34:28.935Z",
        "updatedAt": "2024-02-27T01:34:28.935Z",
        "id": "65dd3be509bba09e50615845"
      },
      {
        "name": "sketch.js",
        "content": "const marginLeft = 130\nconst marginTop=100\nconst marginBottom = 80\nlet stepX = 5\nconst stepY = 8\nfunction setup() {\n\tcreateCanvas(650, 650);\n\tstroke(240)\n\tcurveTightness(0.4)\n}\nlet yoff=0\nfunction draw() {\n\tbackground(0);\n\tfill(0)\n\tfor(let i=marginTop; i<=height-marginBottom; i+=stepY) {\n\t\tlet a = yoff+i\n\t\tbeginShape()\n\t\tfor(let j=marginLeft; j<=width-marginLeft; j+=stepX) {\n\t\t\tconst mid = width/2\n\t\t\tlet start = mid-80\n\t\t\tlet end = mid+80\n\t\t\tlet lineOffset=15\n\t\t\tif (i%2===0) {\n\t\t\t\tstart-=lineOffset\n\t\t\t\tend-=lineOffset\n\t\t\t} \n\t\t\tif (i%5===0) {\n\t\t\t\tstart+=lineOffset\n\t\t\t\tend+=lineOffset\n\t\t\t}\n\t\t\tconst peak = stepY*13\n\n\t\t\tlet scaleVal;\n\t\t\tif (j>=start&&j<=mid) {\n\t\t\t\tscaleVal = map(j, start,mid, 6, peak)\n\t\t\t} else if (j>mid&&j<=end) {\n\t\t\t\tscaleVal = map(j, mid,end, peak, 6)\n\t\t\t} else {\n\t\t\t\tscaleVal = 5\n\t\t\t}\n\t\t\tlet offset = noise(a,j)*scaleVal\n\t\t\tcurveVertex(j, i-offset)\n\n\t\t\tif(j>=start&&j<=end) {\n\t\t\t\tstepX = 17\n\t\t\t} else {\n\t\t\t\tstepX = 5\n\t\t\t}\n\t\t\ta+=0.01\n\t\t}\n\t\tendShape()\n\t\tyoff+=0.0003\n\t}\n\t//yoff+=0.02\n}\n\nfunction keyTyped() {\n\tif (key === 's' || key === 'S') {\n    saveCanvas('myCanvas', 'png');\n  }\n  return false;\n}",
        "children": [],
        "fileType": "file",
        "_id": "65dd3be509bba09e50615842",
        "isSelectedFile": true,
        "createdAt": "2024-02-27T01:34:28.935Z",
        "updatedAt": "2024-02-27T01:34:28.935Z",
        "id": "65dd3be509bba09e50615842"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65dd3be509bba09e50615843",
        "createdAt": "2024-02-27T01:34:28.935Z",
        "updatedAt": "2024-02-27T01:34:28.935Z",
        "id": "65dd3be509bba09e50615843"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65dd3be509bba09e50615844",
        "createdAt": "2024-02-27T01:34:28.935Z",
        "updatedAt": "2024-02-27T01:34:28.935Z",
        "id": "65dd3be509bba09e50615844"
      }
    ],
    "createdAt": "2024-02-27T01:34:28.935Z",
    "id": "b52_lWDUI"
  },
  {
    "name": "Mousy purpose",
    "_id": "JJSDTI5Cvf",
    "updatedAt": "2023-04-02T15:56:40.566Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6419f779974d36bd8275d81e",
          "6419f779974d36bd8275d81d",
          "6419f779974d36bd8275d81f",
          "6429a58d025247001c1e3576"
        ],
        "fileType": "folder",
        "_id": "6419f779974d36bd8275d820",
        "createdAt": "2023-04-02T15:56:40.566Z",
        "updatedAt": "2023-04-02T15:56:40.566Z",
        "isSelectedFile": false,
        "id": "6419f779974d36bd8275d820"
      },
      {
        "name": "sketch.js",
        "content": "let flowfield;\nlet cols = 20;\nlet rows = 20;\n\nlet vehicle;\n\nlet debug = true;\nlet vehicles = []\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  vehicle = new Vehicle(350, 200);\n  for (let i=0; i < 50; i++) {\n    vehicles.push(new Vehicle(random(width), random(height)))\n  }\n\n  w = width / cols;\n  h = height / cols;\n\n  // flowfield = [];\n  // for (let i = 0; i < 10; i++) {\n  //   flowfield[i] = [];\n  // }\n\n  // Creating a 2D array\n  flowfield = new Array(cols);\n  for (let i = 0; i < flowfield.length; i++) {\n    flowfield[i] = new Array(rows);\n  }\n\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      // flowfield[i][j] = createVector(-1, 1);\n      // flowfield[i][j] = p5.Vector.random2D();\n\n      let x = i * w + w * 0.5;\n      let y = j * h + h * 0.5;\n\n      let centerX = width / 2;\n      let centerY = height / 2;\n\n      flowfield[i][j] = createVector(centerX - x, centerY - y);\n      flowfield[i][j].rotate(-PI / 2 + 0.1);\n    }\n  }\n}\n\nfunction draw() {\n  background(255);\n\n  // DEBUG view!\n  if (debug) {\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        flowfield[i][j].rotate(0.01);\n\n        let v = flowfield[i][j].copy();\n        v.setMag(w * 0.4);\n\n        let x = i * w + w * 0.5;\n        let y = j * h + h * 0.5;\n        //strokeWeight(1);\n        //stroke(0, 50);\n        //rectMode(CENTER);\n        //noFill();\n        //rect(x, y, w, h);\n        stroke(0, 100);\n        strokeWeight(4);\n        point(x, y);\n        strokeWeight(1);\n        line(x, y, x + v.x, y + v.y);\n      }\n    }\n  }\n\n  //vehicle.show();\n\n  noFill();\n  strokeWeight(2);\n  stroke(255, 0, 0);\n  // beginShape();\n  // for (let i = 0; i < 100; i++) {\n  //   //vehicles[i].follow(flowfield)\n  //   vehicles[i].update()\n  //   vertex(vehicles[i].position.x, vehicles[i].position.y)\n  //   vehicle.follow(flowfield);\n  //   // vehicle.update();\n  //   // vertex(vehicle.position.x, vehicle.position.y);\n  // }\n  // endShape();\n  for (let i=0; i<vehicles.length; i++) {\n    beginShape()\n    for (let j=0; j<100; j++) {\n      vehicles[i].follow(flowfield)\n      vehicles[i].update()\n      vertex(vehicles[i].position.x,vehicles[i].position.y)\n    }\n    endShape()\n  }\n\n  //vehicle.show();\n\n  noLoop();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6419f779974d36bd8275d81d",
        "isSelectedFile": false,
        "createdAt": "2023-04-02T15:56:40.566Z",
        "updatedAt": "2023-04-02T15:56:40.566Z",
        "id": "6419f779974d36bd8275d81d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"vehicle.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6419f779974d36bd8275d81e",
        "createdAt": "2023-04-02T15:56:40.566Z",
        "updatedAt": "2023-04-02T15:56:40.566Z",
        "isSelectedFile": true,
        "id": "6419f779974d36bd8275d81e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6419f779974d36bd8275d81f",
        "createdAt": "2023-04-02T15:56:40.566Z",
        "updatedAt": "2023-04-02T15:56:40.566Z",
        "isSelectedFile": false,
        "id": "6419f779974d36bd8275d81f"
      },
      {
        "name": "vehicle.js",
        "content": "// The Nature of Code\n// Daniel Shiffman\n// http://natureofcode.com\n\n// The \"Vehicle\" class\n\nclass Vehicle {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = createVector(0, 0);\n    this.acceleration = createVector(0, 0);\n    this.r = 6;\n    this.maxspeed = 2;\n    this.maxforce = 1;\n    \n    // this.history = [];\n  }\n\n  // Method to update location\n  update() {\n    // Update velocity\n    this.velocity.add(this.acceleration);\n    // Limit speed\n    this.velocity.limit(this.maxspeed);\n    this.position.add(this.velocity);\n    // Reset accelerationelertion to 0 each cycle\n    this.acceleration.mult(0);\n  }\n\n  applyForce(force) {\n    // We could add mass here if we want A = F / M\n    this.acceleration.add(force);\n  }\n  \n  follow(flowfield) {\n    let i = floor(this.position.x / w);\n    let j = floor(this.position.y / h);\n    i = constrain(i,0,cols-1);\n    j = constrain(j,0,rows-1);\n    let desired = flowfield[i][j].copy();\n    desired.setMag(this.maxspeed);\n    let steer = p5.Vector.sub(desired, this.velocity);\n    steer.limit(this.maxforce);\n    this.applyForce(steer);\n  }\n\n  show() {\n    fill(0);\n    circle(this.position.x, this.position.y, 4);\n    // Draw a triangle rotated in the direction of velocity\n    // let theta = this.velocity.heading() + PI / 2;\n    // fill(127);\n    // stroke(0);\n    // strokeWeight(2);\n    // push();\n    // translate(this.position.x, this.position.y);\n    // rotate(theta);\n    // beginShape();\n    // vertex(0, -this.r * 2);\n    // vertex(-this.r, this.r * 2);\n    // vertex(this.r, this.r * 2);\n    // endShape(CLOSE);\n    // pop();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6429a58d025247001c1e3576",
        "isSelectedFile": false,
        "updatedAt": "2023-04-02T15:56:40.566Z",
        "createdAt": "2023-04-02T15:56:40.566Z",
        "id": "6429a58d025247001c1e3576"
      }
    ],
    "createdAt": "2023-03-21T18:29:28.982Z",
    "id": "JJSDTI5Cvf"
  },
  {
    "name": "Nature of Code 2: Mutual Attraction array copy",
    "_id": "A3fCQc9XG",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "659928168e5667c261e2b079",
          "659928168e5667c261e2b07a",
          "659928168e5667c261e2b07b",
          "659928168e5667c261e2b07c"
        ],
        "fileType": "folder",
        "_id": "659928168e5667c261e2b078",
        "updatedAt": "2024-01-06T10:17:40.944Z",
        "createdAt": "2024-01-06T10:17:40.944Z",
        "isSelectedFile": false,
        "id": "659928168e5667c261e2b078"
      },
      {
        "name": "sketch.js",
        "content": "// Mutual Attract// The Nature of Code\n\nlet movers = [];\nlet sun;\n\nfunction setup() {\n  createCanvas(900, 900);\n  for (let i = 0; i < 40; i++) {\n    let pos = p5.Vector.random2D();\n    let vel = pos.copy();\n    vel.setMag(random(10, 15));\n    pos.setMag(random(100, 150));\n    vel.rotate(PI / 2);\n    let m = random(10,15);\n    movers[i] = new Mover(pos.x, pos.y, vel.x, vel.y, m);\n  }\n  sun = new Mover(0, 0, 0, 0, 500);\n  // movers[0] = new Mover(300, 200, 0, 5, 10);\n  // movers[1] = new Mover(100, 200, 0, -5, 10);\n  // movers[2] = new Mover(200, 300, -5, 0, 10);\n  // movers[3] = new Mover(200, 100, 5, 0, 10);\n  background(0);\n}\n\nfunction draw() {\n  background(0);\n  translate(width / 2, height / 2);\n\n  for (let mover of movers) {\n    sun.attract(mover);\n    for (let other of movers) {\n      if (mover !== other) {\n        mover.attract(other);\n        // stroke(255);\n        // line(mover.pos.x, mover.pos.y, other.pos.x, other.pos.y);\n      }\n    }\n  }\n\n  for (let mover of movers) {\n    mover.update();\n    mover.show();\n  }\n  //sun.show();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "659928168e5667c261e2b07b",
        "updatedAt": "2024-01-06T10:17:40.944Z",
        "createdAt": "2024-01-06T10:17:40.944Z",
        "isSelectedFile": false,
        "id": "659928168e5667c261e2b07b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"mover.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "659928168e5667c261e2b079",
        "updatedAt": "2024-01-06T10:17:40.944Z",
        "createdAt": "2024-01-06T10:17:40.944Z",
        "isSelectedFile": false,
        "id": "659928168e5667c261e2b079"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "659928168e5667c261e2b07c",
        "updatedAt": "2024-01-06T10:17:40.944Z",
        "createdAt": "2024-01-06T10:17:40.944Z",
        "isSelectedFile": false,
        "id": "659928168e5667c261e2b07c"
      },
      {
        "name": "mover.js",
        "content": "// Gravitational Attraction\n// The Nature of Code\n// The Coding Train / Daniel Shiffman\n// https://youtu.be/EpgB3cNhKPM\n// https://thecodingtrain.com/learning/nature-of-code/2.5-gravitational-attraction.html\n// https://editor.p5js.org/codingtrain/sketches/MkLraatd\n\nclass Mover {\n  constructor(x, y, vx, vy, m) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(vx, vy);\n    this.acc = createVector(0, 0);\n    this.mass = m;\n    this.r = sqrt(this.mass) * 2;\n  }\n\n  applyForce(force) {\n    let f = p5.Vector.div(force, this.mass);\n    this.acc.add(f);\n  }\n\n  attract(mover) {\n    let force = p5.Vector.sub(this.pos, mover.pos);\n    let distanceSq = constrain(force.magSq(), 100, 1000);\n    let G = 1;\n    let strength = (G * (this.mass * mover.mass)) / distanceSq;\n    force.setMag(strength);\n    mover.applyForce(force);\n  }\n\n  update() {\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    this.acc.set(0, 0);\n  }\n\n  show() {\n    stroke(255);\n    strokeWeight(2);\n    fill(255, 100);\n    ellipse(this.pos.x, this.pos.y, this.r * 4);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "659928168e5667c261e2b07a",
        "isSelectedFile": true,
        "updatedAt": "2024-01-06T10:17:40.944Z",
        "createdAt": "2024-01-06T10:17:40.944Z",
        "id": "659928168e5667c261e2b07a"
      }
    ],
    "createdAt": "2024-01-06T10:14:46.690Z",
    "updatedAt": "2024-01-06T10:17:40.944Z",
    "id": "A3fCQc9XG"
  },
  {
    "name": "Pixel positive + slit scan camera",
    "_id": "Qzm9RogB1",
    "updatedAt": "2022-09-26T06:18:16.425Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "633142da2852ba12b55bfeed",
          "633142da2852ba12b55bfeec",
          "633142da2852ba12b55bfeee"
        ],
        "fileType": "folder",
        "_id": "633142da2852ba12b55bfeef",
        "isSelectedFile": false,
        "createdAt": "2022-09-26T06:18:16.425Z",
        "updatedAt": "2022-09-26T06:18:16.425Z",
        "id": "633142da2852ba12b55bfeef"
      },
      {
        "name": "sketch.js",
        "content": "// move mouseX to adjust threshold\nlet cam;\nlet span = 20\nlet cacheGraphic\nlet slides = []\n\nfunction preload() {\n  cam = createCapture(VIDEO);\n}\nfunction setup() {\n  createCanvas(640, 480);\n  cam.hide();\n  cacheGraphic = createGraphics(width,height)\n  cacheGraphic.translate(width,0)\n  cacheGraphic.scale(-1,1)\n  pixelDensity(1); // sets the pixel scaling for high pixel density displays.\n  for (let i =0; i < width; i+=span) {\n\t\tlet start = i\n\t\tlet end = start+span\n\t\tlet x = start\n\t\tlet inc = 1\n\t\tslides.push({\n\t\t\tstart, end, x, inc\n\t\t})\n\t}\n}\n\nfunction draw() {\n  background(0); \n  cam.loadPixels();\n  if (cam.pixels[0]) {\n    for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let p = cam.get(x, y);\n      let gray = floor((p[0] + p[1] + p[2]) / 3);\n      let threshold = mouseX; \n      if (gray < threshold) {\n        gray = map(threshold, 0, threshold, threshold, 0); // invert the color\n      }\n      let index = (x + y * width) * 4;\n      if (frameCount > 5) {\n        cam.pixels[index + 0] = gray; // red\n        cam.pixels[index + 1] = gray; // green\n        cam.pixels[index + 2] = gray; // blue\n        cam.pixels[index + 3] = 255; // opacity\n      }\n    }\n  }\n  cam.updatePixels();\n  let w = cam.width\n  let h = cam.height\n  for(let i = 0; i < slides.length; i++) {\n\t\t\t\n\t\t\t\n\t\t\tcacheGraphic.copy(cam, slides[i].start, 0, 1, h, slides[i].x,0, 1, h)\n\t\t\t\n\t\t\tslides[i].x+=slides[i].inc\n\t\t\t\n\t\t\tif(slides[i].x<slides[i].start || slides[i].x>slides[i].end) slides[i].inc*=-1\n\t\t}\n  }\n  \n  image(cacheGraphic, 0, 0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "633142da2852ba12b55bfeec",
        "isSelectedFile": true,
        "createdAt": "2022-09-26T06:18:16.425Z",
        "updatedAt": "2022-09-26T06:18:16.425Z",
        "id": "633142da2852ba12b55bfeec"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "633142da2852ba12b55bfeed",
        "isSelectedFile": false,
        "createdAt": "2022-09-26T06:18:16.425Z",
        "updatedAt": "2022-09-26T06:18:16.425Z",
        "id": "633142da2852ba12b55bfeed"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "633142da2852ba12b55bfeee",
        "isSelectedFile": false,
        "createdAt": "2022-09-26T06:18:16.425Z",
        "updatedAt": "2022-09-26T06:18:16.425Z",
        "id": "633142da2852ba12b55bfeee"
      }
    ],
    "createdAt": "2022-09-26T06:14:20.059Z",
    "id": "Qzm9RogB1"
  },
  {
    "name": "pixitest at cck copy",
    "_id": "5n6iEM4kU",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64e3d3a12c29eb6040d844f9",
          "64e3d3a12c29eb6040d844fa",
          "64e3d3a12c29eb6040d844fb"
        ],
        "fileType": "folder",
        "_id": "64e3d3a12c29eb6040d844f8",
        "isSelectedFile": false,
        "createdAt": "2023-08-21T21:15:22.227Z",
        "updatedAt": "2023-08-21T21:15:22.227Z",
        "id": "64e3d3a12c29eb6040d844f8"
      },
      {
        "name": "sketch.js",
        "content": "// import * as PIXI from 'pixi.js';\n\n// The application will create a renderer using WebGL, if possible,\n// with a fallback to a canvas render. It will also setup the ticker\n// and the root stage PIXI.Container\nconst app = new PIXI.Application();\n\n// The application will create a canvas element for you that you\n// can then insert into the DOM\n// document.body.appendChild(app.view);\n\n\nvar colorSchemes = [\n  new ColorScheme(\"https://coolors.co/5386e4-7fc29b-b5ef8a-d7f171-817e9f\"),\n];\n\nfunction ColorScheme(colorString) {\n  this.colors = [];\n  {\n    let cc = colorString.split(\"/\");\n    let cs = cc[cc.length - 1].split(\"-\");\n    for (let i in cs) {\n      let r = parseInt(\"0x\" + cs[i].substring(0, 2));\n      let g = parseInt(\"0x\" + cs[i].substring(2, 4));\n      let b = parseInt(\"0x\" + cs[i].substring(4, 6));\n      this.colors.push(b + g * 256 + r * 256 * 256);\n    }\n  }\n  this.offset = 0;\n}\n\nColorScheme.prototype.get = function (i) {\n  i = Math.min(this.colors.length - 1, Math.max(0, i));\n  return this.colors[(i + this.offset) % this.colors.length];\n}\n\n\n\n// create an new instance of a pixi stage\nvar stage = app.stage;\n\n// stage.setInteractive(true);\n\n//stage.addChild(sprite);\n// create a renderer instance\n//var renderer = new PIXI.CanvasRenderer(800, 600);//PIXI.autoDetectRenderer(800, 600);\nvar renderer = PIXI.autoDetectRenderer(620, 380);\n\n// set the canvas width and height to fill the screen\n//renderer.view.style.width = window.innerWidth + \"px\";\n//renderer.view.style.height = window.innerHeight + \"px\";\nrenderer.view.style.display = \"block\";\n\n// add render view to DOM\ndocument.body.appendChild(renderer.view);\n\n// lets create moving shape\nvar thing = new PIXI.Graphics();\nstage.addChild(thing);\nthing.position.x = 620 / 2;\nthing.position.y = 380 / 2;\n\nvar count = 0;\n\nstage.click = stage.tap = function() {\n  // graphics.lineStyle(Math.random() * 30, colorSchemes[0].get(1), 1);\n  // graphics.moveTo(Math.random() * 620, Math.random() * 380);\n  // graphics.lineTo(Math.random() * 620, Math.random() * 380);\n}\n\nrequestAnimationFrame(animate);\n\nfunction animate() {\n\n  thing.clear();\n\n  count += 0.1;\n\n  thing.clear();\n  thing.lineStyle(30, colorSchemes[0].get(0), 1);\n  thing.beginFill(colorSchemes[0].get(1), 0.8);\n\n  thing.moveTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n  thing.lineTo(120 + Math.cos(count) * 20, -100 + Math.sin(count) * 20);\n  thing.lineTo(120 + Math.sin(count) * 20, 100 + Math.cos(count) * 20);\n  thing.lineTo(-120 + Math.cos(count) * 20, 100 + Math.sin(count) * 20);\n  thing.lineTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n\n  thing.rotation = count * 0.1;\n  renderer.render(stage);\n  requestAnimationFrame(animate);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3d3a12c29eb6040d844fa",
        "isSelectedFile": false,
        "createdAt": "2023-08-21T21:15:22.227Z",
        "updatedAt": "2023-08-21T21:15:22.227Z",
        "id": "64e3d3a12c29eb6040d844fa"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n<!-- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/5.1.3/pixi.min.js\"></script> -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/6.2.1/browser/pixi.js\n\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3d3a12c29eb6040d844f9",
        "isSelectedFile": true,
        "createdAt": "2023-08-21T21:15:22.227Z",
        "updatedAt": "2023-08-21T21:15:22.227Z",
        "id": "64e3d3a12c29eb6040d844f9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3d3a12c29eb6040d844fb",
        "isSelectedFile": false,
        "createdAt": "2023-08-21T21:15:22.227Z",
        "updatedAt": "2023-08-21T21:15:22.227Z",
        "id": "64e3d3a12c29eb6040d844fb"
      }
    ],
    "createdAt": "2023-08-21T21:14:09.980Z",
    "updatedAt": "2023-08-21T21:15:22.227Z",
    "id": "5n6iEM4kU"
  },
  {
    "name": "Placid fear",
    "_id": "fIeDwrxQf",
    "createdAt": "2019-10-10T15:35:25.493Z",
    "updatedAt": "2019-10-10T15:35:46.009Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5d9f4c528240240388f83787",
          "5d9f4c528240240388f83788",
          "5d9f4c528240240388f83789"
        ],
        "fileType": "folder",
        "_id": "5d9f4c528240240388f8378a",
        "createdAt": "2019-10-10T15:35:46.009Z",
        "updatedAt": "2019-10-10T15:35:46.009Z",
        "id": "5d9f4c528240240388f8378a"
      },
      {
        "name": "sketch.js",
        "content": "var x = 0;\n\nfunction setup() {\n\tcreateCanvas(1000,800);\n}\n\nfunction draw() {\n\tbackground(0);\n\tellipse(x, height/2, 20,20);\n\n\tx = x + 10;\n\tif (x > width) {\n\t\tx = 0;\n\t}\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "5d9f4c528240240388f83787",
        "createdAt": "2019-10-10T15:35:46.009Z",
        "updatedAt": "2019-10-10T15:35:46.009Z",
        "id": "5d9f4c528240240388f83787"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "5d9f4c528240240388f83788",
        "createdAt": "2019-10-10T15:35:46.009Z",
        "updatedAt": "2019-10-10T15:35:46.009Z",
        "id": "5d9f4c528240240388f83788"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "5d9f4c528240240388f83789",
        "createdAt": "2019-10-10T15:35:46.009Z",
        "updatedAt": "2019-10-10T15:35:46.009Z",
        "id": "5d9f4c528240240388f83789"
      }
    ],
    "id": "fIeDwrxQf"
  },
  {
    "name": "Quiet sapphire",
    "_id": "UU0KeVsDs",
    "updatedAt": "2022-11-01T15:47:45.515Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63613dac86a052434eb13795",
          "63613dac86a052434eb13794",
          "63613dac86a052434eb13796"
        ],
        "fileType": "folder",
        "_id": "63613dac86a052434eb13797",
        "createdAt": "2022-11-01T15:47:45.515Z",
        "updatedAt": "2022-11-01T15:47:45.515Z",
        "id": "63613dac86a052434eb13797"
      },
      {
        "name": "sketch.js",
        "content": "//Amy Liu \nlet bubbles = []; \n// bubbles[0]\n// bubbles[1]\n// bubbles[2]\n\nfunction setup() {\n  createCanvas(600, 400);\n  background (200);\n  \n  for (let i = 0; i < 3; i++) {\n    let x = random(width);\n    let y = random(height);\n    // let x =50;\n    // let y =50;\n    let r = random(10,40);\n    let b = random(100, 255)\n        \n  bubbles [i] = new Bubble(x, y, r, b);\n  }\n}\n\nfunction mousePressed() {\n  bubbles.push(new Bubble(mouseX,\n                          mouseY,\n                          random(10, 40),\n                          random(100, 255)))\n}\n\nfunction draw() {               \n background(255, 204, 0);\n  for (let i = 0; i <bubbles.length; i++) {\n    bubbles[i].move();\n    bubbles[i].show();\n  }\n//   bubbles[0].move()\n//   bubbles[0].show()\n  \n//   bubbles[1].move()\n//   bubbles[1].show()\n  \n}\n\nclass Bubble {\n  constructor(x, y, r, b) {\n  this.x= x;\n  this.y= y;\n  this.r= r;\n  this.b = b;\n  }\n\n  move() {\n    this.x = this.x + random (-5,5);\n    this.y = this.y + random(-5,5);}\n  \n  show(){\n    push()\n    fill(0, 0, this.b);\n    stroke(127, 63, 120);\n    translate(this.x, this.y);\n    noStroke();\n    for (let i = 0; i <10; i ++) {\n      ellipse(0, 30, this.r, 50);\n      rotate(PI/5);\n    } pop()\n  }\n}\n\n//\n",
        "children": [],
        "fileType": "file",
        "_id": "63613dac86a052434eb13794",
        "isSelectedFile": true,
        "createdAt": "2022-11-01T15:47:45.515Z",
        "updatedAt": "2022-11-01T15:47:45.515Z",
        "id": "63613dac86a052434eb13794"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63613dac86a052434eb13795",
        "createdAt": "2022-11-01T15:47:45.515Z",
        "updatedAt": "2022-11-01T15:47:45.515Z",
        "id": "63613dac86a052434eb13795"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63613dac86a052434eb13796",
        "createdAt": "2022-11-01T15:47:45.515Z",
        "updatedAt": "2022-11-01T15:47:45.515Z",
        "id": "63613dac86a052434eb13796"
      }
    ],
    "createdAt": "2022-11-01T15:39:33.089Z",
    "id": "UU0KeVsDs"
  },
  {
    "name": "real-time-social-hw1",
    "_id": "AVwWMsxTQI",
    "updatedAt": "2023-01-31T19:51:08.831Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d753a32017bdd85f0cc8e7",
          "63d753a32017bdd85f0cc8e6",
          "63d753a32017bdd85f0cc8e8"
        ],
        "fileType": "folder",
        "_id": "63d753a32017bdd85f0cc8e9",
        "createdAt": "2023-01-31T19:51:08.831Z",
        "updatedAt": "2023-01-31T19:51:08.831Z",
        "isSelectedFile": false,
        "id": "63d753a32017bdd85f0cc8e9"
      },
      {
        "name": "sketch.js",
        "content": "import * as THREE from 'three';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nlet scene = new THREE.Scene();\nlet renderer = new THREE.WebGLRenderer();\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\ncamera.position.z = 3\nscene.add(camera)\n\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\ndocument.body.appendChild(renderer.domElement);\n\n// Controls\nconst controls = new OrbitControls(camera, renderer.domElement)\ncontrols.enableDamping = true\n\nconst particleSphereGeometry = new THREE.SphereGeometry(2.5, 32, 32)\nconst particlesMaterial = new THREE.PointsMaterial({\n    size: 0.02,\n    sizeAttenuation: true\n})\n\nconst particlesGeometry = new THREE.BufferGeometry()\nconst count = 500\nconst positions = new Float32Array(count * 3)\n\nfor(let i = 0; i < count * 3; i++) // Multiply by 3 for same reason\n{\n    positions[i] = (Math.random() - 0.5) * 5 // Math.random() - 0.5 to have a random value between -0.5 and +0.5\n}\n\n\nparticlesGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3))\n\n//const geometry = new THREE.BoxGeometry(1, 1, 1)\n//const material = new THREE.MeshBasicMaterial({ color: 0xff0000 })\n\nconst particles = new THREE.Points(particlesGeometry, particlesMaterial)\nscene.add(particles)\n\nconst sphereParticles = new THREE.Points(particleSphereGeometry, particlesMaterial)\nscene.add(sphereParticles)\n\n//const mesh = new THREE.Mesh(geometry, material)\n//scene.add(mesh)\n\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n    // Update controls\n    //controls.update()\n\n    for(let i = 0; i < count; i++){\n        const i3 = i * 3\n        const x = particlesGeometry.attributes.position.array[i3]\n        //const offset = Math.random()\n        particlesGeometry.attributes.position.array[i3 + 1] +=  Math.sin(elapsedTime*5+x*30)*0.01\n        particlesGeometry.attributes.position.needsUpdate = true \n    }\n    \n    sphereParticles.rotateX(0.001);\n    sphereParticles.rotateY(0.001);\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n// function setup() {\n//   createCanvas(400, 400);\n// }\n\n// function draw() {\n//   background(220);\n// }",
        "children": [],
        "fileType": "file",
        "_id": "63d753a32017bdd85f0cc8e6",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T19:51:08.831Z",
        "updatedAt": "2023-01-31T19:51:08.831Z",
        "id": "63d753a32017bdd85f0cc8e6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n<!--     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.js\" integrity=\"sha512-/kGR9IsoP6MadXPkWOuyvp84Ic3swcWcpij/bzrXe2qXwRQD3JAwKMCFX90ZgxOJ33+Jd7hYheF01XSJEalLsg==\" crossorigin=\"anonymous\"></script> -->\n<!--     <script src=\"https://cdn.jsdelivr.net/npm/three-orbitcontrols@2.110.3/OrbitControls.min.js\"></script> -->\n    <script async src=\"https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js\"></script>\n\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"three\": \"https://unpkg.com/three@0.148.0/build/three.module.js\",\n      \"three/addons/\": \"https://unpkg.com/three@0.148.0/examples/jsm/\"\n    }\n  }\n</script>\n<!--     <script type=\"module\">\n      import * as THREE from 'three';\n    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n    </script> -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script type=\"module\" src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d753a32017bdd85f0cc8e7",
        "createdAt": "2023-01-31T19:51:08.831Z",
        "updatedAt": "2023-01-31T19:51:08.831Z",
        "isSelectedFile": false,
        "id": "63d753a32017bdd85f0cc8e7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d753a32017bdd85f0cc8e8",
        "createdAt": "2023-01-31T19:51:08.831Z",
        "updatedAt": "2023-01-31T19:51:08.831Z",
        "isSelectedFile": false,
        "id": "63d753a32017bdd85f0cc8e8"
      }
    ],
    "createdAt": "2023-01-30T13:38:08.756Z",
    "id": "AVwWMsxTQI"
  },
  {
    "name": "real-time-social-hw1 copy",
    "_id": "JwVzj_ylW",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63d96d1863ff6f5e900c7e20",
          "63d96d1863ff6f5e900c7e21",
          "63d96d1863ff6f5e900c7e22"
        ],
        "fileType": "folder",
        "_id": "63d96d1863ff6f5e900c7e1f",
        "createdAt": "2023-01-31T19:50:29.936Z",
        "updatedAt": "2023-01-31T19:50:29.936Z",
        "isSelectedFile": false,
        "id": "63d96d1863ff6f5e900c7e1f"
      },
      {
        "name": "sketch.js",
        "content": "import * as THREE from 'three';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nlet scene = new THREE.Scene();\nlet renderer = new THREE.WebGLRenderer();\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\ncamera.position.z = 3\nscene.add(camera)\n\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\ndocument.body.appendChild(renderer.domElement);\n\n// Controls\nconst controls = new OrbitControls(camera, renderer.domElement)\ncontrols.enableDamping = true\n\nconst particleSphereGeometry = new THREE.SphereGeometry(2.5, 32, 32)\nconst particlesMaterial = new THREE.PointsMaterial({\n    size: 0.02,\n    sizeAttenuation: true\n})\n\nconst particlesGeometry = new THREE.BufferGeometry()\nconst count = 500\nconst positions = new Float32Array(count * 3)\n\nfor(let i = 0; i < count * 3; i++) // Multiply by 3 for same reason\n{\n    positions[i] = (Math.random() - 0.5) * 5 // Math.random() - 0.5 to have a random value between -0.5 and +0.5\n}\n\n\nparticlesGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3))\n\n//const geometry = new THREE.BoxGeometry(1, 1, 1)\n//const material = new THREE.MeshBasicMaterial({ color: 0xff0000 })\n\nconst particles = new THREE.Points(particlesGeometry, particlesMaterial)\nscene.add(particles)\n\nconst sphereParticles = new THREE.Points(particleSphereGeometry, particlesMaterial)\nscene.add(sphereParticles)\n\n//const mesh = new THREE.Mesh(geometry, material)\n//scene.add(mesh)\n\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n    // Update controls\n    //controls.update()\n\n    for(let i = 0; i < count; i++){\n        const i3 = i * 3\n        const x = particlesGeometry.attributes.position.array[i3]\n        //const offset = Math.random()\n        particlesGeometry.attributes.position.array[i3 + 1] +=  Math.sin(elapsedTime*5+x*30)*0.01\n        particlesGeometry.attributes.position.needsUpdate = true \n    }\n    \n    sphereParticles.rotateX(0.001);\n    sphereParticles.rotateY(0.001);\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n// function setup() {\n//   createCanvas(400, 400);\n// }\n\n// function draw() {\n//   background(220);\n// }",
        "children": [],
        "fileType": "file",
        "_id": "63d96d1863ff6f5e900c7e21",
        "isSelectedFile": true,
        "createdAt": "2023-01-31T19:50:29.936Z",
        "updatedAt": "2023-01-31T19:50:29.936Z",
        "id": "63d96d1863ff6f5e900c7e21"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n<!--     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.js\" integrity=\"sha512-/kGR9IsoP6MadXPkWOuyvp84Ic3swcWcpij/bzrXe2qXwRQD3JAwKMCFX90ZgxOJ33+Jd7hYheF01XSJEalLsg==\" crossorigin=\"anonymous\"></script> -->\n<!--     <script src=\"https://cdn.jsdelivr.net/npm/three-orbitcontrols@2.110.3/OrbitControls.min.js\"></script> -->\n    <script async src=\"https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js\"></script>\n\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"three\": \"https://unpkg.com/three@0.148.0/build/three.module.js\",\n      \"three/addons/\": \"https://unpkg.com/three@0.148.0/examples/jsm/\"\n    }\n  }\n</script>\n<!--     <script type=\"module\">\n      import * as THREE from 'three';\n    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n    </script> -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script type=\"module\" src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63d96d1863ff6f5e900c7e20",
        "createdAt": "2023-01-31T19:50:29.936Z",
        "updatedAt": "2023-01-31T19:50:29.936Z",
        "isSelectedFile": false,
        "id": "63d96d1863ff6f5e900c7e20"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63d96d1863ff6f5e900c7e22",
        "createdAt": "2023-01-31T19:50:29.936Z",
        "updatedAt": "2023-01-31T19:50:29.936Z",
        "isSelectedFile": false,
        "id": "63d96d1863ff6f5e900c7e22"
      }
    ],
    "createdAt": "2023-01-31T19:33:45.445Z",
    "updatedAt": "2023-01-31T19:50:29.936Z",
    "id": "JwVzj_ylW"
  },
  {
    "name": "SerialIn and Fractal Tree",
    "_id": "oqD8CN9gu",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63615d3c4e1374a0bfc0c057",
          "63615d3c4e1374a0bfc0c058",
          "63615d3c4e1374a0bfc0c059",
          "63615d3c4e1374a0bfc0c05a"
        ],
        "fileType": "folder",
        "_id": "63615d3c4e1374a0bfc0c056",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T18:17:46.595Z",
        "updatedAt": "2022-11-01T18:17:46.595Z",
        "id": "63615d3c4e1374a0bfc0c056"
      },
      {
        "name": "sketch.js",
        "content": "// Fractal Tree\n// The Coding Train / Daniel Shiffman\n// https://thecodingtrain.com/challenges/14-fractal-trees-recursive\n// https://youtu.be/0jjeOYMjmDU\n\n// https://editor.p5js.org/codingtrain/sketches/xTjmYXU3q\n\nlet angle = 0;\n\n/*\n\t\tSerial input in ASCII example\n    Reads a serial input line, terminated by a newline, using serial.readLine()\n    \n    To be used with the Arduino AnalogReadSerial example \n    (Arduino File Menu -> Examples -> Basics -> AnalogReadSerial)\n    created 9 Oct 2017\n    by Tom Igoe\n*/\nvar serial; // variable to hold an instance of the serialport library\nvar portName = 'COM4'; // fill in your serial port name here\nvar circleSize = 10; // size of the circle\nvar xPos = 0;\nvar yPos = 0;\n\nfunction setup() {\n  createCanvas(800, 600);\n  serial = new p5.SerialPort(); // make a new instance of the serialport library\n  serial.on('list', printList); // set a callback function for the serialport list event\n  serial.on('connected', serverConnected); // callback for connecting to the server\n  serial.on('open', portOpen); // callback for the port opening\n  serial.on('data', serialEvent); // callback for when new data arrives\n  serial.on('error', serialError); // callback for errors\n  serial.on('close', portClose); // callback for the port closing\n\n  //serial.list(); // list the serial ports\n  serial.open(portName); // open a serial port\n}\n\n// get the list of ports:\nfunction printList(portList) {\n  // portList is an array of serial port names\n  for (var i = 0; i < portList.length; i++) {\n    // Display the list the console:\n    console.log(i + \" \" + portList[i]);\n  }\n}\n\nfunction draw() {\n  background(\"#2277A3\");\t\t\t// set the background color\n  fill(\"#55CAFE\");\t\t\t\t\t\t// set the circle fill color\n  noStroke();\t\t\t\t\t\t\t\t\t// don't use a stroke around the circle\n  // draw the circle:\n  //ellipse(width/2, height/2, circleSize, circleSize);\n  \n  //angle = 1.1//slider.value();\n  stroke(255);\n  strokeWeight(2);\n  translate(width * 0.5, height);\n  branch(100);\n}\n\nfunction branch(len) {\n  line(0, 0, 0, -len);\n  translate(0, -len);\n  if (len > 4) {\n    push();\n    rotate(angle);\n    branch(len * 0.67);\n    pop();\n    push();\n    rotate(-angle);\n    branch(len * 0.67);\n    pop();\n  }\n}\n\nfunction serverConnected() {\n  console.log('connected to server.');\n}\n\nfunction portOpen() {\n  console.log('the serial port opened.')\n}\n\nfunction serialEvent() {\n  var data = serial.readLine();\n  //circleSize = int(data);\n  console.log('data',data)\n  if (data.length > 0) {\n   // console.log(data);\n    var sensors = split(data, \",\");\n    //console.log(sensors);\n    xPos = int(sensors[0]);\n    yPos = int(sensors[1]);\n    \n    circleSize = int(data);\n    //let mapData = map(int(data), 0, 1023, 0, 255, true)\n    angle = map(int(data), 0, 255, TWO_PI, PI / 4, true)\n  }\n}\n\nfunction serialError(err) {\n  console.log('Something went wrong with the serial port. ' + err);\n}\n\nfunction portClose() {\n  console.log('The serial port closed.');\n}",
        "children": [],
        "fileType": "file",
        "_id": "63615d3c4e1374a0bfc0c059",
        "isSelectedFile": true,
        "createdAt": "2022-11-01T18:17:46.595Z",
        "updatedAt": "2022-11-01T18:17:46.595Z",
        "id": "63615d3c4e1374a0bfc0c059"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.sound.min.js\"></script>\n    <script src=\"p5.serialport.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63615d3c4e1374a0bfc0c057",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T18:17:46.595Z",
        "updatedAt": "2022-11-01T18:17:46.595Z",
        "id": "63615d3c4e1374a0bfc0c057"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63615d3c4e1374a0bfc0c05a",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T18:17:46.595Z",
        "updatedAt": "2022-11-01T18:17:46.595Z",
        "id": "63615d3c4e1374a0bfc0c05a"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "63615d3c4e1374a0bfc0c058",
        "isSelectedFile": false,
        "updatedAt": "2022-11-01T18:17:46.595Z",
        "createdAt": "2022-11-01T18:17:46.595Z",
        "id": "63615d3c4e1374a0bfc0c058"
      }
    ],
    "createdAt": "2022-11-01T17:54:03.788Z",
    "updatedAt": "2022-11-01T18:17:46.595Z",
    "id": "oqD8CN9gu"
  },
  {
    "name": "SerialIn copy",
    "_id": "zSEqD-xrR",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "636155bd4e1374a0bfc0c052",
          "636155bd4e1374a0bfc0c053",
          "636155bd4e1374a0bfc0c054",
          "636155bd4e1374a0bfc0c055"
        ],
        "fileType": "folder",
        "_id": "636155bd4e1374a0bfc0c051",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:52:45.080Z",
        "updatedAt": "2022-11-01T17:52:45.080Z",
        "id": "636155bd4e1374a0bfc0c051"
      },
      {
        "name": "sketch.js",
        "content": "/*\n\t\tSerial input in ASCII example\n    Reads a serial input line, terminated by a newline, using serial.readLine()\n    \n    To be used with the Arduino AnalogReadSerial example \n    (Arduino File Menu -> Examples -> Basics -> AnalogReadSerial)\n    created 9 Oct 2017\n    by Tom Igoe\n*/\nvar serial; // variable to hold an instance of the serialport library\nvar portName = 'COM4'; // fill in your serial port name here\nvar circleSize = 10; // size of the circle\nvar xPos = 0;\nvar yPos = 0;\n\nfunction setup() {\n  createCanvas(800, 600);\n  serial = new p5.SerialPort(); // make a new instance of the serialport library\n  serial.on('list', printList); // set a callback function for the serialport list event\n  serial.on('connected', serverConnected); // callback for connecting to the server\n  serial.on('open', portOpen); // callback for the port opening\n  serial.on('data', serialEvent); // callback for when new data arrives\n  serial.on('error', serialError); // callback for errors\n  serial.on('close', portClose); // callback for the port closing\n\n  //serial.list(); // list the serial ports\n  serial.open(portName); // open a serial port\n}\n\n// get the list of ports:\nfunction printList(portList) {\n  // portList is an array of serial port names\n  for (var i = 0; i < portList.length; i++) {\n    // Display the list the console:\n    console.log(i + \" \" + portList[i]);\n  }\n}\n\nfunction draw() {\n  background(\"#2277A3\");\t\t\t// set the background color\n  fill(\"#55CAFE\");\t\t\t\t\t\t// set the circle fill color\n  noStroke();\t\t\t\t\t\t\t\t\t// don't use a stroke around the circle\n  // draw the circle:\n  ellipse(width/2, height/2, circleSize, circleSize);\n}\n\nfunction serverConnected() {\n  console.log('connected to server.');\n}\n\nfunction portOpen() {\n  console.log('the serial port opened.')\n}\n\nfunction serialEvent() {\n  var data = serial.readLine();\n  //circleSize = int(data);\n  //console.log('data',data)\n  if (data.length > 0) {\n   // console.log(data);\n    var sensors = split(data, \",\");\n    //console.log(sensors);\n    xPos = int(sensors[0]);\n    yPos = int(sensors[1]);\n    \n    circleSize = int(data);\n  }\n}\n\nfunction serialError(err) {\n  console.log('Something went wrong with the serial port. ' + err);\n}\n\nfunction portClose() {\n  console.log('The serial port closed.');\n}",
        "children": [],
        "fileType": "file",
        "_id": "636155bd4e1374a0bfc0c054",
        "isSelectedFile": true,
        "createdAt": "2022-11-01T17:52:45.080Z",
        "updatedAt": "2022-11-01T17:52:45.080Z",
        "id": "636155bd4e1374a0bfc0c054"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.sound.min.js\"></script>\n    <script src=\"p5.serialport.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "636155bd4e1374a0bfc0c052",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:52:45.080Z",
        "updatedAt": "2022-11-01T17:52:45.080Z",
        "id": "636155bd4e1374a0bfc0c052"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "636155bd4e1374a0bfc0c055",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:52:45.080Z",
        "updatedAt": "2022-11-01T17:52:45.080Z",
        "id": "636155bd4e1374a0bfc0c055"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "636155bd4e1374a0bfc0c053",
        "isSelectedFile": false,
        "updatedAt": "2022-11-01T17:52:45.080Z",
        "createdAt": "2022-11-01T17:52:45.080Z",
        "id": "636155bd4e1374a0bfc0c053"
      }
    ],
    "createdAt": "2022-11-01T17:22:04.897Z",
    "updatedAt": "2022-11-01T17:52:45.080Z",
    "id": "zSEqD-xrR"
  },
  {
    "name": "SerialList copy",
    "_id": "ePf2REC_a",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6361541dee1888161a80f3e4",
          "6361541dee1888161a80f3e5",
          "6361541dee1888161a80f3e6",
          "6361541dee1888161a80f3e7"
        ],
        "fileType": "folder",
        "_id": "6361541dee1888161a80f3e3",
        "updatedAt": "2022-11-01T17:15:14.707Z",
        "createdAt": "2022-11-01T17:15:14.707Z",
        "isSelectedFile": false,
        "id": "6361541dee1888161a80f3e3"
      },
      {
        "name": "sketch.js",
        "content": "var serial; // variable to hold an instance of the serialport library\n \nfunction setup() {\n serial = new p5.SerialPort(); // make a new instance of the serialport library\n serial.on('list', printList); // set a callback function for the serialport list event\n \n serial.list(); // list the serial ports\n}\n \n// get the list of ports:\nfunction printList(portList) {\n // portList is an array of serial port names\n for (var i = 0; i < portList.length; i++) {\n // Display the list the console:\n console.log(i + \" \" + portList[i]);\n }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6361541dee1888161a80f3e6",
        "updatedAt": "2022-11-01T17:15:14.707Z",
        "createdAt": "2022-11-01T17:15:14.707Z",
        "isSelectedFile": true,
        "id": "6361541dee1888161a80f3e6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.11/addons/p5.sound.min.js\"></script>\n    <script src=\"p5.serialport.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6361541dee1888161a80f3e4",
        "updatedAt": "2022-11-01T17:15:14.707Z",
        "createdAt": "2022-11-01T17:15:14.707Z",
        "isSelectedFile": false,
        "id": "6361541dee1888161a80f3e4"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6361541dee1888161a80f3e7",
        "updatedAt": "2022-11-01T17:15:14.707Z",
        "createdAt": "2022-11-01T17:15:14.707Z",
        "isSelectedFile": false,
        "id": "6361541dee1888161a80f3e7"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "6361541dee1888161a80f3e5",
        "createdAt": "2022-11-01T17:15:14.707Z",
        "updatedAt": "2022-11-01T17:15:14.707Z",
        "isSelectedFile": false,
        "id": "6361541dee1888161a80f3e5"
      }
    ],
    "createdAt": "2022-11-01T17:15:08.638Z",
    "updatedAt": "2022-11-01T17:15:14.707Z",
    "id": "ePf2REC_a"
  },
  {
    "name": "Show pixelated image on canvas copy copy",
    "_id": "7iWOia6As",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64e5aafe80cb5f21ecd44d63",
          "64e5aafe80cb5f21ecd44d64",
          "64e5aafe80cb5f21ecd44d65",
          "64e5aafe80cb5f21ecd44d66"
        ],
        "fileType": "folder",
        "_id": "64e5aafe80cb5f21ecd44d62",
        "isSelectedFile": false,
        "createdAt": "2021-08-06T20:17:25.060Z",
        "updatedAt": "2021-08-06T20:17:25.060Z",
        "id": "64e5aafe80cb5f21ecd44d62"
      },
      {
        "name": "sketch.js",
        "content": "const scaleFactor = 100;\nlet catImg;\n\nfunction preload() {\n  catImg = loadImage('cat.png');\n}\n\nfunction setup() {\n  createCanvas(catImg.width * scaleFactor, catImg.height * scaleFactor);\n  // this isn't critical, there's just no point in doing high DPI\n  // rendering for pixel aligned squares.\n  pixelDensity(1);\n  background(255);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  for (let x = 0; x < catImg.width; x++) {\n    for (let y = 0; y < catImg.height; y++) {\n      const c = catImg.get(x, y);\n      fill(c);\n      square(x * scaleFactor, y * scaleFactor, scaleFactor);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "64e5aafe80cb5f21ecd44d65",
        "isSelectedFile": true,
        "createdAt": "2021-08-06T20:17:25.060Z",
        "updatedAt": "2021-08-06T20:17:25.060Z",
        "id": "64e5aafe80cb5f21ecd44d65"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    \n    <canvas id=\"game\" class=\"Retro\" width=\"128\" height=\"128\"></canvas>\n    <script>\n      // get canvas context\n      var ctx = document.getElementById('game').getContext('2d');\n      \n      // load image\n      var img = new Image();\n      img.onload = function () {\n          // draw the image into the canvas\n          ctx.drawImage(img, 0, 0);\n      }\n      img.src = 'cat.png';\n      </script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64e5aafe80cb5f21ecd44d64",
        "isSelectedFile": false,
        "createdAt": "2021-08-06T20:17:25.060Z",
        "updatedAt": "2021-08-06T20:17:25.060Z",
        "id": "64e5aafe80cb5f21ecd44d64"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n/* canvas {\n  display: block;\n  image-rendering: pixelated;\n} */\n\ncanvas.Retro {\n  width: 384px !important;\n  height: 384px !important;\n  display: block;\n  image-rendering: -moz-crisp-edges;\n  image-rendering: -webkit-crisp-edges;\n  image-rendering: crisp-edges;\n}\n\n/*\ncanvas.p5Canvas {\n  width: 384px !important;\n  height: 384px !important;\n  display: block;\n  image-rendering: -moz-crisp-edges;\n  image-rendering: -webkit-crisp-edges;\n  image-rendering: crisp-edges;\n} */\n",
        "children": [],
        "fileType": "file",
        "_id": "64e5aafe80cb5f21ecd44d66",
        "isSelectedFile": false,
        "createdAt": "2021-08-06T20:17:25.060Z",
        "updatedAt": "2021-08-06T20:17:25.060Z",
        "id": "64e5aafe80cb5f21ecd44d66"
      },
      {
        "name": "cat.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e5aafe80cb5f21ecd44d63",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/8d7bfd19-a114-46a4-bc8f-9f546bd27898.png",
        "isSelectedFile": false,
        "updatedAt": "2021-08-06T20:17:25.060Z",
        "createdAt": "2021-08-06T20:17:25.060Z",
        "id": "64e5aafe80cb5f21ecd44d63"
      }
    ],
    "createdAt": "2023-08-23T06:45:20.387Z",
    "updatedAt": "2023-08-23T06:45:20.387Z",
    "id": "7iWOia6As"
  },
  {
    "name": "Silly meeting",
    "_id": "ov79biW7O",
    "createdAt": "2019-10-26T05:06:49.920Z",
    "updatedAt": "2019-10-26T05:52:44.532Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "5db3d3c717bb7b54f4e81afd",
          "5db3d3c717bb7b54f4e81afe",
          "5db3d3c717bb7b54f4e81aff"
        ],
        "fileType": "folder",
        "updatedAt": "2019-10-26T05:52:44.532Z",
        "createdAt": "2019-10-26T05:52:44.532Z",
        "_id": "5db3d3c717bb7b54f4e81b00",
        "id": "5db3d3c717bb7b54f4e81b00"
      },
      {
        "name": "sketch.js",
        "content": "//p5 code\nvar linex = 0;\nvar liney = 0;\nvar spacing = 50;\n\nvar crossx = 0;\nvar crossy = 0;\n\nvar trix = 0;\nvar triy = 0;\nvar randomNum;\n\nvar keyispressed = false;\nvar a = 0;\n\n\n\nfunction setup() {\n\tcanvas = createCanvas(windowWidth,windowHeight);\n\tbackground(0);\n\trandomNum = random(1);\n\tcanvas.position(0,0);\n\tcanvas.style('z-index', '-1');\n}\n\nfunction draw() {\n\tangleMode(DEGREES);\n\t//background(0);\n\tif (randomNum < 0.5) {\n\t\tdrawLines();\n\t} else{\n\t\tdrawCross();\n\t}\n\t//drawTriangle();\n  \n}\n\nfunction keyPressed() {\n  keyispressed = true;\n}\n\n// if(keyispressed) {\n//   a++;\n\n// }\na++;\nconsole.log(a)\n//print(a);\n// function windowResized() {\n// \tconsole.log('resized');\n// \tresizeCanvas(windowWidth,windowHeight);\n// \t//clear();\n// \tbackground(0);\n// \tdrawLines();\n// }\n\nfunction drawLines() {\n\tstroke(255);\n\tif (random(1) < 0.5){\n      if(keyispressed) {\n\t\trotate(a);\n      }\n\t\tline(linex, liney, linex + spacing, liney + spacing);\n\t} else {\n      if(keyispressed) {\n        rotate(a);\n      }\n\t\tline(linex, liney + spacing, linex + spacing, liney);\n\t}\n\tlinex = linex + spacing;\n\tif (linex > width) {\n\t\tlinex = 0;\n\t\tliney = liney + spacing;\n\t}\n}\n\nfunction drawCross() {\n\tstroke(255);\n\tif (random(1) < 0.5) {\n      if(keyispressed) {\n        rotate(a);\n      }\n\t\tline(crossx, crossy, crossx + spacing, crossy); //horizontal\n\t} else {\n      if(keyispressed) {\n        rotate(a);\n      }\n\t\tline(crossx + spacing, crossy, crossx + spacing, crossy + spacing); //vertical\n\t}\n\tcrossx = crossx + spacing;\n\tif (crossx > width) {\n\t\tcrossx = 0;\n\t\tcrossy = crossy + spacing;\n\t}\n}\n\nfunction drawSquare() {\n\tstroke(255);\n\tif (random(1) < 0.5) {\n\t\trect(linex, liney, spacing, spacing);\n\t} else {\n\n\t}\n}\n\nfunction drawTriangle() {\n\tstroke(255);\n\t//noStroke();\n\t//fill(255);\n\tnoFill();\n\tif (random(1) < 0.5) {\n\t\ttriangle(trix, triy, trix + spacing, triy, trix + spacing, triy + spacing);\n\t} else {\n\t\ttriangle(trix, triy, trix + spacing, triy, trix, triy + spacing);\n\t}\n\ttrix = trix + spacing;\n\tif (trix > width) {\n\t\ttrix = 0;\n\t\ttriy = triy + spacing;\n\t} \n}",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-10-26T05:52:44.532Z",
        "createdAt": "2019-10-26T05:52:44.532Z",
        "_id": "5db3d3c717bb7b54f4e81afd",
        "isSelectedFile": true,
        "id": "5db3d3c717bb7b54f4e81afd"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-10-26T05:52:44.532Z",
        "createdAt": "2019-10-26T05:52:44.532Z",
        "_id": "5db3d3c717bb7b54f4e81afe",
        "id": "5db3d3c717bb7b54f4e81afe"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "updatedAt": "2019-10-26T05:52:44.532Z",
        "createdAt": "2019-10-26T05:52:44.532Z",
        "_id": "5db3d3c717bb7b54f4e81aff",
        "id": "5db3d3c717bb7b54f4e81aff"
      }
    ],
    "id": "ov79biW7O"
  },
  {
    "name": "Soft Body Character enhanced and Grid",
    "_id": "jmDc-7qVb",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64ef6125d2a27ff1c2108e59",
          "64ef6125d2a27ff1c2108e5a",
          "64f0db4c1ccd29001cb0b212",
          "64f0db3ca23255001a46e5f2",
          "64ef6125d2a27ff1c2108e5b",
          "64ef6125d2a27ff1c2108e5c",
          "64ef6125d2a27ff1c2108e5d"
        ],
        "fileType": "folder",
        "_id": "64ef6125d2a27ff1c2108e58",
        "isSelectedFile": false,
        "createdAt": "2023-09-07T16:37:01.245Z",
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e58"
      },
      {
        "name": "sketch.js",
        "content": "// Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\n\nlet particles = [];\nlet eyes = [];\nlet springs = [];\n\nlet showSprings = false;\n\nlet homieGraphic\nlet quadrantDiagramGraphic\nlet pixelShader\n\nfunction keyPressed() {\n  if (key == ' ') {\n    showSprings = !showSprings;\n  }\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  homieGraphic = createGraphics(width, height)\n  quadrantDiagramGraphic = createGraphics(width, height)\n  pixelShader = loadShader('shader.vert', 'shader.frag');\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width/2, -height/2, width, height);\n  physics.setWorldBounds(bounds);\n\n  particles.push(new Particle(-120, -80));\n  particles.push(new Particle(-70, -80));\n  particles.push(new Particle(-20, -80));\n  particles.push(new Particle(30, -80));\n  particles.push(new Particle(80, -80));\n  particles.push(new Particle(30, 20));\n  particles.push(new Particle(80, 120));\n  particles.push(new Particle(30, 120));\n  particles.push(new Particle(-20, 120));\n  particles.push(new Particle(-70, 120));\n  particles.push(new Particle(-120, 120));\n  particles.push(new Particle(-70, 20));\n\n  eyes.push(new Particle(-45, -30));\n  eyes.push(new Particle(-5, -30));\n  eyes.push(new Particle(-70, -130));\n  eyes.push(new Particle(30, -130));\n\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n\n  for (let particle of particles) {\n    springs.push(new Spring(particle, eyes[0], 0.01));\n    springs.push(new Spring(particle, eyes[1], 0.01));\n  }\n\n  springs.push(new Spring(eyes[2], particles[1], 0.01));\n  springs.push(new Spring(eyes[3], particles[3], 0.01));\n\n  springs.push(new Spring(eyes[2], particles[3], 0.01));\n  springs.push(new Spring(eyes[3], particles[1], 0.01));\n\n  springs.push(new Spring(eyes[2], particles[0], 0.01));\n  springs.push(new Spring(eyes[3], particles[4], 0.01));\n\n  springs.push(new Spring(eyes[3], particles[2], 0.01));\n  springs.push(new Spring(eyes[2], particles[2], 0.01));\n\n  springs.push(new Spring(eyes[2], eyes[3], 0.01));\n\n  springs.push(new Spring(eyes[0], eyes[3], 0.01));\n  springs.push(new Spring(eyes[0], eyes[2], 0.01));\n  springs.push(new Spring(eyes[1], eyes[2], 0.01));\n  springs.push(new Spring(eyes[1], eyes[3], 0.01));\n}\n\nfunction draw() {\n  background(255);\n  drawGrid(quadrantDiagramGraphic)\n  \n  push()\n  translate(width/2, height/2)\n  physics.update();\n\n  stroke(112, 50, 126);\n  if (showSprings) stroke(112, 50, 126, 100);\n  //push()\n  //translate(width/2, height/2)\n  \n \n  \n  strokeWeight(4);\n  line(particles[1].x, particles[1].y, eyes[2].x, eyes[2].y);\n  line(particles[3].x, particles[3].y, eyes[3].x, eyes[3].y);\n  strokeWeight(16);\n  point(eyes[2].x, eyes[2].y);\n  point(eyes[3].x, eyes[3].y);\n\n  fill(45, 197, 244);\n  if (showSprings) fill(45, 197, 244, 100);\n  strokeWeight(2);\n  beginShape();\n  for (let particle of particles) {\n    vertex(particle.x, particle.y);\n  }\n  endShape(CLOSE);\n\n  //   fill(127, 127);\n  //   stroke(0);\n  //   strokeWeight(2);\n  //   beginShape();\n  //   for (let particle of particles) {\n  //     vertex(particle.x, particle.y);\n  //   }\n  //   endShape(CLOSE);\n\n  // for (let particle of particles) {\n  //   particle.show();\n  // }\n\n  eyes[0].show();\n  eyes[1].show();\n  \n  // for (let eye of eyes) {\n  //   eye.show();\n  // }\n\n  if (showSprings) {\n    for (let spring of springs) {\n      spring.show();\n    }\n  }\n\n  if (mouseIsPressed) {\n    particles[0].lock();\n    particles[0].x = mouseX-width/2;\n    particles[0].y = mouseY-height/2;\n    particles[0].unlock();\n  }\n  pop()\n}\n\nfunction drawGrid(graphic) {\n  graphic.clear()\n  \n  graphic.push()\n    graphic.strokeWeight(1)\n    graphic.translate(width/2, height/2)\n    graphic.line(-width/2, 0, width/2, 0) // X軸\n    graphic.line(0, -height/2, 0, height/2) // Y軸\n\n    for (let x=-width/2; x<width/2; x+=50) {\n      graphic.line(x, 0, x, 5 )\n      graphic.textSize(8)\n      graphic.text(x, x, 10)\n    }\n  \n    for (let y=-height/2; y<height/2; y+=50) {\n      graphic.line(0, y, 5, y)\n      graphic.textSize(8)\n      graphic.text(y, 0, y)\n    }\n  \n  graphic.pop()\n  \n  image(graphic, 0, 0)\n}\n\nfunction keyTyped() {\n\tif (key === 's' || key === 'S') {\n    saveCanvas('myCanvas', 'jpg');\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef6125d2a27ff1c2108e5b",
        "isSelectedFile": true,
        "createdAt": "2023-09-07T16:37:01.245Z",
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e5b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef6125d2a27ff1c2108e59",
        "isSelectedFile": false,
        "createdAt": "2023-09-07T16:37:01.245Z",
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e59"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef6125d2a27ff1c2108e5d",
        "isSelectedFile": false,
        "createdAt": "2023-09-07T16:37:01.245Z",
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e5d"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y) {\n    super(x, y);\n    this.r = 2;\n    physics.addParticle(this);\n  }\n\n  show() {\n    fill(252, 238, 33);\n    strokeWeight(1);\n    circle(this.x, this.y, this.r * 12);\n\n    strokeWeight(this.r * 4);\n    point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef6125d2a27ff1c2108e5a",
        "isSelectedFile": false,
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "createdAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e5a"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show() {\n    strokeWeight(1);\n    stroke(0, 127);\n    line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef6125d2a27ff1c2108e5c",
        "isSelectedFile": false,
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "createdAt": "2023-09-07T16:37:01.245Z",
        "id": "64ef6125d2a27ff1c2108e5c"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64f0db3ca23255001a46e5f2",
        "isSelectedFile": false,
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "createdAt": "2023-09-07T16:37:01.245Z",
        "id": "64f0db3ca23255001a46e5f2"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "64f0db4c1ccd29001cb0b212",
        "isSelectedFile": false,
        "updatedAt": "2023-09-07T16:37:01.245Z",
        "createdAt": "2023-09-07T16:37:01.245Z",
        "id": "64f0db4c1ccd29001cb0b212"
      }
    ],
    "createdAt": "2023-08-30T15:32:54.964Z",
    "updatedAt": "2023-09-07T16:37:01.245Z",
    "id": "jmDc-7qVb"
  },
  {
    "name": "Soft Body Character enhanced copy",
    "_id": "eBgpI-7vg",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64e76f1fafcc79001b400bf5",
          "64e3cc3c1bc9a77a30e7ae20",
          "64e3cc3c1bc9a77a30e7ae21",
          "64e3d134760cc6001a8a03c5",
          "64e3cc3c1bc9a77a30e7ae22",
          "64e778d2d01b36001ad66040",
          "64e3cc3c1bc9a77a30e7ae23",
          "64e3cc3c1bc9a77a30e7ae24"
        ],
        "fileType": "folder",
        "_id": "64e3cc3c1bc9a77a30e7ae1f",
        "isSelectedFile": false,
        "createdAt": "2023-08-29T18:08:46.816Z",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae1f"
      },
      {
        "name": "sketch.js",
        "content": "// Coding Train / Daniel Shiffman\n\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\n\nconst { Gravysicsavior } = toxi.physics2d.behaviors;\n\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\n\nlet particles = [];\nlet eyes = [];\nlet springs = [];\n\nlet showSprings = false;\n\nlet g;\n\nlet face;\nlet feet;\nlet arms;\nlet wings;\n\nfunction keyPressed() {\n  if (key == \" \") {\n    showSprings = !showSprings;\n  }\n}\n\nlet img;\nlet frame;\nlet framePoints = [];\n\nfunction preload() {\n  img = loadImage(\"/assets/face/face_03.png\");\n  feet = loadImage(\"/assets/feet/feet_03.png\");\n  arms = {\n    l: loadImage(\"/assets/arm/arm_l_04.png\"),\n    r: loadImage(\"/assets/arm/arm_r_04.png\"),\n  };\n  wings = {\n    l: loadImage(\"/assets/wing/wing_l_03.png\"),\n    r: loadImage(\"/assets/wing/wing_r_03.png\"),\n  };\n}\n\nfunction setup() {\n  createCanvas(640, 360);\n  imageMode(CENTER);\n  g = createGraphics(640, 360);\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width / 2, -height / 2, width, height);\n  physics.setWorldBounds(bounds);\n\n  particles.push(new Particle(200, 100));\n  particles.push(new Particle(250, 100));\n  particles.push(new Particle(300, 100));\n  particles.push(new Particle(350, 100));\n  particles.push(new Particle(400, 100));\n  particles.push(new Particle(350, 200));\n  particles.push(new Particle(400, 300));\n  particles.push(new Particle(350, 300));\n  particles.push(new Particle(300, 300));\n  particles.push(new Particle(250, 300));\n  particles.push(new Particle(200, 300));\n  particles.push(new Particle(250, 200));\n\n  eyes.push(new Particle(275, 150));\n  eyes.push(new Particle((325 + 275) / 2, 150));\n  eyes.push(new Particle(250, 50));\n  eyes.push(new Particle(350, 50));\n\n  frame = Snap.select(\"#frame_03\");\n  framePoints = extractSilhouettePoints(frame);\n\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n  for (let i = 0; i < framePoints.length; i++) {\n    for (let j = i + 1; j < framePoints.length; j++) {\n      if (i !== j) {\n        let a = framePoints[i];\n        let b = framePoints[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n\n  for (let particle of particles) {\n    springs.push(new Spring(particle, eyes[0], 0.01));\n    springs.push(new Spring(particle, eyes[1], 0.01));\n  }\n\n  springs.push(new Spring(eyes[2], particles[1], 0.01));\n  springs.push(new Spring(eyes[3], particles[3], 0.01));\n\n  springs.push(new Spring(eyes[2], particles[3], 0.01));\n  springs.push(new Spring(eyes[3], particles[1], 0.01));\n\n  springs.push(new Spring(eyes[2], particles[0], 0.01));\n  springs.push(new Spring(eyes[3], particles[4], 0.01));\n\n  springs.push(new Spring(eyes[3], particles[2], 0.01));\n  springs.push(new Spring(eyes[2], particles[2], 0.01));\n\n  springs.push(new Spring(eyes[2], eyes[3], 0.01));\n\n  springs.push(new Spring(eyes[0], eyes[3], 0.01));\n  springs.push(new Spring(eyes[0], eyes[2], 0.01));\n  springs.push(new Spring(eyes[1], eyes[2], 0.01));\n  springs.push(new Spring(eyes[1], eyes[3], 0.01));\n}\n\n\nfunction extractSilhouettePoints(svg) {\n  console.log(\"extract sil\", svg);\n  const points = [];\n  // Get all path elements from the SVG\n  const pathElements = svg.selectAll(\"path\");\n  console.log(\"extract fun\", pathElements);\n  //Loop through each path element and extract points\n  for (const path of pathElements.items) {\n    const pathData = path.node.getAttribute(\"d\");\n    const pathPoints = getPathSilhouettePoints(pathData);\n    points.push(...pathPoints);\n  }\n\n  return points;\n}\nfunction getPathSilhouettePoints(pathData) {\n  const path = new Path2D(pathData);\n  const pathLength = Snap.path.getTotalLength(pathData);\n  const points = [];\n\n  for (let t = 0; t <= 1; t += 0.08) {\n    const { x, y } = Snap.path.getPointAtLength(pathData, pathLength * t);\n    //path.getPointAtLength(pathLength * t);\n    points.push(new Particle(x, y));\n  }\n\n  return points;\n}\n\nfunction draw() {\n  background(255);\n\n  physics.update();\n\n  stroke(112, 50, 126);\n  if (showSprings) stroke(112, 50, 126, 100);\n\n  // strokeWeight(4);\n  // line(particles[1].x, particles[1].y, eyes[2].x, eyes[2].y);\n  // line(particles[3].x, particles[3].y, eyes[3].x, eyes[3].y);\n  //strokeWeight(16);\n  // point(eyes[2].x, eyes[2].y);\n  // point(eyes[3].x, eyes[3].y);\n  // push()\n  // strokeWeight(1)\n  // rect(eyes[2].x, eyes[2].y, 10, 10);\n  // rect(eyes[3].x, eyes[3].y, 10, 10);\n  // pop()\n\n  // push()\n  // particles[0].lock()\n  // particles[0].x = mouseX\n  // particles[0].y = mouseY\n  // particles[0].unlock()\n  // pop()\n\n  // fill(45, 197, 244);\n  // if (showSprings) fill(45, 197, 244, 100);\n  // strokeWeight(2);\n  // beginShape();\n  // for (let particle of particles) {\n  //   curveVertex(particle.x, particle.y);\n  // }\n  // curveVertex(particles[0].x, particles[0].y)\n  // curveVertex(particles[1].x, particles[1].y)\n  // curveVertex(particles[2].x, particles[2].y)\n  // endShape();\n  // let face1 = new Vec2D(eyes[1].x, eyes[1].y);\n  // let face2 = new Vec2D(particles[4].x, particles[4].y)\n  // let vectorBetween = face2.sub(face1)\n\n  // push()\n  // imageMode(CENTER)\n  // //angleMode(DEGREES)\n  // translate(eyes[1].x, eyes[1].y)\n  // //rotate( degrees(particles[0].heading()))\n  // rotate(0.6)\n  // rotate(vectorBetween.heading())\n  // //console.log(degrees(angle))\n  // image(img, 0, 0, 100,100);\n  // pop()\n\n  //   fill(127, 127);\n  //   stroke(0);\n  //   strokeWeight(2);\n  //   beginShape();\n  //   for (let particle of particles) {\n  //     vertex(particle.x, particle.y);\n  //   }\n  //   endShape(CLOSE);\n\n  // for (let particle of particles) {\n  //   particle.show();\n  // }\n\n  // eyes[0].show();\n  // eyes[1].show();\n\n  push();\n  translate(width / 2, height / 2);\n  // wings\n  push();\n  let wingW = 80;\n  let wingH = 80;\n  translate(framePoints[5].x, framePoints[5].y);\n  //translate(-wingW/2,0)\n  rotate(framePoints[0].sub(framePoints[4]).heading());\n  image(wings.l, -wingW / 3, 0, wingW, wingH);\n  pop();\n  push();\n  translate(framePoints[12].x, framePoints[12].y);\n  rotate(-PI / 2);\n  rotate(framePoints[12].sub(framePoints[9]).heading());\n  //translate(wingW/2,0)\n  image(wings.r, wingW / 3, 0, wingW, wingH);\n  pop();\n  fill(\"pink\");\n  if (showSprings) fill(45, 197, 244, 100);\n  strokeWeight(1);\n  beginShape();\n  for (let fp of framePoints) {\n    curveVertex(fp.x, fp.y);\n  }\n  curveVertex(framePoints[0].x, framePoints[0].y);\n  curveVertex(framePoints[1].x, framePoints[1].y);\n  curveVertex(framePoints[2].x, framePoints[2].y);\n  endShape();\n  // face\n  push();\n  translate(framePoints[10].x, framePoints[10].y);\n  rotate(framePoints[10].sub(framePoints[7]).heading());\n  image(img, 0, 0, 50, 50);\n  pop();\n\n  // arms\n  push();\n  translate(framePoints[5].x, framePoints[5].y);\n  rotate(framePoints[0].sub(framePoints[4]).heading());\n  image(arms.l, 0, 0, 60, 60);\n  pop();\n  push();\n  translate(framePoints[12].x, framePoints[12].y);\n  rotate(-PI / 2);\n  rotate(framePoints[12].sub(framePoints[9]).heading());\n  image(arms.r, 0, 0, 60, 60);\n  pop();\n  // feet\n  push();\n  let feetW = 90;\n  let feetH = 70;\n  translate(framePoints[2].x, framePoints[2].y);\n  rotate(-PI / 2);\n  rotate(framePoints[2].sub(framePoints[9]).heading());\n  image(feet, 0, feetH / 4, feetW, feetH);\n  pop();\n  for (let i = 0; i < framePoints.length; i++) {\n    const point = framePoints[i];\n    text(i, point.x, point.y);\n    //circle(point.x, point.y,5)\n  }\n  pop();\n\n  // for(let i=0; i<particles.length; i++) {\n  //   noStroke()\n  //   fill('red')\n  //   text(i, particles[i].x, particles[i].y)\n  // }\n  // for(let i=0; i<eyes.length; i++) {\n  //   noStroke()\n  //   fill('green')\n  //   text(i, eyes[i].x, eyes[i].y)\n  // }\n\n  if (showSprings) {\n    for (let spring of springs) {\n      spring.show();\n    }\n  }\n\n  if (mouseIsPressed) {\n    particles[4].lock();\n    particles[4].x = mouseX;\n    particles[4].y = mouseY;\n    particles[4].unlock();\n  }\n  if (mouseIsPressed) {\n    push();\n    // translate(width/2, height/2)\n    framePoints[0].lock();\n    framePoints[0].x = mouseX - width / 2;\n    framePoints[0].y = mouseY - height / 2;\n    framePoints[0].unlock();\n    pop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3cc3c1bc9a77a30e7ae22",
        "isSelectedFile": true,
        "createdAt": "2023-08-29T18:08:46.816Z",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae22"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/6.2.1/browser/pixi.js\n\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n<!--     <script src=\"snap.svg-min.js\"></script> -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.5.1/snap.svg-min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <svg id=\"frame_02\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M27.9012 41.1479C27.7729 40.9458 27.56 40.8377 27.3675 40.6356C27.5127 40.6704 27.6141 40.6635 27.7323 40.667C27.9316 40.8726 28.1377 41.0817 28.3404 41.2943C28.4383 41.3988 28.543 41.486 28.6849 41.479C28.8031 41.6986 28.9011 41.9112 28.9788 42.1238C29.043 42.1656 29.097 42.2004 29.1612 42.197C29.2085 42.2632 29.1713 42.3364 29.195 42.3887C29.2558 42.4305 29.32 42.4026 29.3842 42.4305C29.4044 42.5002 29.472 42.549 29.5193 42.6082C29.5531 42.6919 29.5125 42.779 29.5531 42.8557C29.5936 42.9289 29.6713 42.894 29.7321 42.9254C29.8132 43.1554 29.9382 43.3645 30.0395 43.5945C30.2185 43.6886 30.4043 43.7862 30.6104 43.8908C30.6239 43.6329 30.6847 43.3924 30.7151 43.1484C30.7455 42.9079 30.7658 42.6675 30.8266 42.4305C30.857 42.312 30.857 42.183 30.8739 42.0576C30.9144 41.7648 30.9684 41.4755 31.0022 41.1863C31.0191 41.0329 31.063 40.883 31.0596 40.7227C31.0596 40.6007 31.1171 40.4962 31.1677 40.3881C31.3873 39.9525 31.6001 39.5134 31.8231 39.0812C31.9379 38.8616 32.0021 38.6316 32.019 38.3946C32.0899 38.2831 32.198 38.2273 32.2926 38.1646C32.4244 38.074 32.5189 37.9555 32.5966 37.8265C32.7453 37.5721 32.8804 37.3107 33.0256 37.0458C33.127 36.9587 33.2655 36.9308 33.3905 36.8751C33.6573 36.7566 33.8837 36.5753 34.1167 36.3976C34.4647 36.1327 34.8059 35.8678 35.1538 35.5995C35.5051 35.3276 35.853 35.0523 36.2077 34.7909C36.3293 34.7003 36.4746 34.6376 36.6131 34.5818C36.8158 34.5016 37.0016 34.3901 37.1975 34.296C37.3157 34.2402 37.4373 34.1949 37.5522 34.1357C37.6366 34.0904 37.7143 34.0834 37.792 34.1392C38.1771 33.9754 38.5521 33.815 38.9439 33.6478C39.1838 33.7314 39.4236 33.7035 39.6567 33.5641C39.8931 33.4247 40.16 33.3585 40.4201 33.2749C40.8356 33.1389 41.2578 33.0309 41.67 32.8915C42.0686 32.7556 42.4773 32.6475 42.8827 32.5325C42.9908 32.5011 43.1124 32.4942 43.2205 32.4907C43.3927 32.4802 43.5616 32.4314 43.7339 32.4279C43.8825 32.4279 44.0278 32.3826 44.1764 32.3548C44.3116 32.3269 44.45 32.3199 44.5818 32.3094C44.8622 32.285 45.1358 32.2293 45.4128 32.1979C45.6729 32.17 45.9364 32.1352 46.1965 32.0864C46.3552 32.0585 46.5208 32.0376 46.6863 32.0237C46.8619 32.0097 47.041 31.9784 47.2437 31.947C47.3822 31.9714 47.5511 32.0062 47.72 32.0237C47.8787 32.0376 48.0307 32.0725 48.1827 32.1038C48.2165 32.1108 48.2604 32.1282 48.2875 32.1143C48.4699 32.0271 48.6726 32.1073 48.8617 32.0376C48.9529 32.0027 49.0678 32.0097 49.1624 32.0341C49.3921 32.0864 49.6285 32.0969 49.8616 32.1422C49.9596 32.1631 50.0609 32.1282 50.1521 32.1073C50.2467 32.0864 50.3514 32.0899 50.446 32.0446C50.4832 32.0271 50.5338 32.0237 50.5744 32.0341C50.902 32.1143 51.2365 32.1352 51.5675 32.1979C51.7972 32.2432 52.0337 32.2607 52.2667 32.3025C52.5201 32.3478 52.7768 32.3687 53.0268 32.4245C53.2633 32.4733 53.5065 32.4976 53.7497 32.522C53.8578 32.5325 53.9625 32.5604 54.0672 32.5778C54.3476 32.6231 54.6314 32.6719 54.9151 32.7033C55.2799 32.7451 55.6076 32.8741 55.915 33.0797C56.1008 33.2051 56.3068 33.2958 56.5028 33.4108C56.7764 33.5711 57.0635 33.7175 57.3405 33.8708C57.3844 33.8952 57.425 33.9266 57.4655 33.9545C57.8067 34.0102 58.1411 34.0799 58.5127 34.1113C59.0498 34.4319 59.6409 34.7142 60.2287 35.0244C60.2794 35.1011 60.33 35.1952 60.428 35.2649C60.6037 35.2963 60.7928 35.3241 60.982 35.3625C61.036 35.3729 61.0901 35.4043 61.1408 35.4287C61.2759 35.4949 61.4076 35.5646 61.5529 35.6204C61.5191 35.5367 61.4583 35.481 61.3941 35.4287C61.1205 35.2022 60.8435 34.9756 60.5699 34.7491C60.2253 34.4668 59.8841 34.188 59.543 33.9057C59.4585 33.836 59.3808 33.7593 59.293 33.6966C59.2153 33.6408 59.1511 33.5606 59.1444 33.4596C59.1275 33.24 58.9957 33.0797 58.8775 32.9124C58.7322 32.7102 58.5937 32.5011 58.4417 32.306C58.3066 32.1317 58.2661 31.9191 58.1918 31.7204C58.0026 31.229 57.8371 30.7237 57.6547 30.2253C57.6074 30.0929 57.5432 29.9674 57.4689 29.8454C57.273 29.5143 57.1176 29.1658 56.9858 28.8033C56.8169 28.3259 56.6413 27.8484 56.4656 27.3744C56.4149 27.2385 56.3913 27.106 56.3947 26.9631C56.398 26.7087 56.3947 26.4543 56.3947 26.1999C56.3947 26.1162 56.3947 26.0361 56.3575 25.9838C56.5636 24.5584 56.7663 23.1538 56.9723 21.7284C57.0264 21.6587 57.0838 21.5646 57.148 21.4774C57.2223 21.3799 57.2763 21.2648 57.2628 21.1254C57.2527 21.0069 57.2966 20.8919 57.3135 20.7769C57.3574 20.4876 57.3844 20.1914 57.4385 19.9021C57.506 19.5571 57.5398 19.2051 57.5972 18.8566C57.6411 18.5952 57.6648 18.3303 57.7053 18.0689C57.7391 17.8319 57.756 17.588 57.8202 17.351C57.8472 17.2464 57.8506 17.1314 57.8607 17.0234C57.8776 16.762 57.9891 16.5389 58.0769 16.3054C58.2357 15.8767 58.4046 15.455 58.5836 15.0333C58.6647 14.8416 58.739 14.6499 58.8167 14.4617C58.8775 14.3153 58.9045 14.1655 58.9147 14.0121C58.9248 13.8379 58.9755 13.681 59.0667 13.5382C59.4788 12.8899 59.8909 12.2382 60.2996 11.5899C60.3942 11.5098 60.5124 11.4888 60.6172 11.4435C60.982 11.2763 61.2894 11.0183 61.6069 10.7779C61.9718 10.4991 62.3332 10.2202 62.6946 9.94142C63.0696 9.65563 63.4446 9.36985 63.8195 9.08057C63.9479 8.98299 64.083 8.89934 64.2316 8.83661C64.4174 8.75993 64.5897 8.65538 64.789 8.61007C64.9444 8.57522 65.0998 8.58219 65.2552 8.54734C65.4477 8.50203 65.6504 8.47415 65.8463 8.4637C66.2314 8.44976 66.5625 8.25807 66.9205 8.16396C67.0793 8.12214 67.2313 8.05941 67.3901 8.0141C67.4509 7.99668 67.5218 7.99668 67.5826 8.00714C67.7313 8.02456 67.8799 8.05592 68.0251 8.07683C68.167 8.09775 68.3089 8.11168 68.4508 8.13957C68.7953 8.20578 69.1432 8.2267 69.4844 8.31035C69.6027 8.33823 69.7243 8.34171 69.8459 8.35914C70.1229 8.39747 70.3931 8.46369 70.6701 8.48809C70.9133 8.51248 71.1498 8.56477 71.393 8.59614C71.6261 8.62402 71.8592 8.64841 72.0889 8.71463C72.2003 8.746 72.3152 8.74252 72.43 8.75994C72.6631 8.79131 72.8962 8.84009 73.1293 8.86101C73.2408 8.87146 73.3421 8.90632 73.4333 8.96208C73.8725 9.2409 74.3082 9.52668 74.7474 9.80898C75.1696 10.0773 75.5919 10.3422 76.0141 10.6106C76.3452 10.8197 76.6627 11.0532 77.0072 11.2344C77.2842 11.3808 77.4362 11.6283 77.5984 11.8652C77.747 12.0813 77.9193 12.2556 78.1456 12.3811C78.3213 12.7226 78.4463 13.0886 78.6017 13.4371C78.7266 13.7194 78.828 14.0121 78.98 14.284C79.0239 14.3641 79.0813 14.4338 79.1354 14.4966C79.3043 14.6952 79.3651 14.9357 79.4293 15.1797C79.507 15.462 79.6015 15.7408 79.6927 16.0231C79.7096 16.0719 79.7299 16.1172 79.7299 16.173C79.7198 16.5982 79.7738 17.0199 79.784 17.4451C79.7907 17.7099 79.7907 17.9818 79.8245 18.2432C79.8617 18.5115 79.9326 18.7764 80.0035 19.0378C80.0542 19.226 80.1116 19.4037 80.0373 19.5989C80.017 19.6512 80.0373 19.7174 80.0373 19.7906C80.2366 19.9509 80.24 20.2123 80.294 20.4423C80.4258 21.0069 80.544 21.575 80.6859 22.1361C80.6994 22.1954 80.723 22.2442 80.7501 22.2965C80.8886 22.5648 81.0203 22.8401 81.1385 23.0388C81.2297 23.5407 81.2129 23.9798 81.2129 24.419C81.2129 24.5479 81.2804 24.6594 81.3108 24.7814C81.3345 24.872 81.3446 24.9487 81.3243 25.0393C81.2906 25.1892 81.2804 25.346 81.2568 25.4959C81.223 25.698 81.2264 25.9071 81.1453 26.1267C81.1385 26.1302 81.1183 26.1546 81.0946 26.1685C80.9494 26.2591 80.8919 26.3811 80.9055 26.5589C80.9122 26.6564 80.8649 26.7575 80.8615 26.8656C80.8615 26.9387 80.8075 26.998 80.7602 27.0573C80.6589 27.1827 80.5744 27.3186 80.5305 27.479C80.4731 27.6846 80.4055 27.8867 80.3413 28.0889C80.2501 28.3781 80.142 28.6604 80.0035 28.9288C79.811 29.3052 79.6319 29.6851 79.4529 30.0685C79.3685 30.2427 79.2705 30.4065 79.1286 30.5355C79.1117 30.5494 79.0982 30.5668 79.0813 30.5843C78.8787 30.762 78.7706 30.9851 78.7739 31.2465C78.7064 31.351 78.6219 31.4033 78.5408 31.4556C78.3078 32.1247 78.0781 32.7834 77.8416 33.463C77.7234 33.5502 77.5511 33.5606 77.4025 33.6373C77.3687 33.6896 77.3991 33.7523 77.3822 33.7976C76.639 34.5644 75.906 35.3207 75.173 36.0769C75.1527 36.1362 75.173 36.192 75.1561 36.2408C75.0514 36.408 74.8994 36.4743 74.7102 36.4464C74.2947 36.8751 73.8826 37.2933 73.4738 37.722C73.2475 37.9624 73.0077 38.1925 72.7915 38.4434C72.6902 38.5584 72.528 38.6211 72.3929 38.7048C72.0686 38.9069 71.7409 39.1091 71.3998 39.3217C71.0653 39.2624 70.8052 39.5064 70.4945 39.6353C70.3695 39.5761 70.2141 39.597 70.0688 39.5517C69.9337 39.5099 69.7817 39.5482 69.6702 39.6075C69.4743 39.705 69.2851 39.6667 69.1061 39.6249C68.9676 39.5935 68.8223 39.5866 68.6838 39.5587C68.4035 39.5064 68.1197 39.482 67.8393 39.4193C67.738 39.3949 67.6265 39.4297 67.5218 39.3774C67.5759 39.468 67.6637 39.5168 67.7346 39.5796C67.9474 39.7678 68.1535 39.963 68.3866 40.1233C68.4406 40.1616 68.4947 40.1965 68.5555 40.2209C68.8291 40.3359 69.0487 40.5206 69.2513 40.7401C69.525 41.0399 69.8189 41.3187 70.0925 41.6184C70.3526 41.9007 70.6465 42.1377 70.964 42.3433C71.1025 42.4305 71.1937 42.5594 71.2883 42.6919C71.3964 42.8487 71.5045 43.0055 71.6261 43.1519C71.768 43.3227 71.947 43.4516 72.1159 43.5876C72.3659 43.7897 72.6057 44.0023 72.7949 44.2707C72.9097 44.4345 72.9604 44.6122 72.9807 44.8039C72.9908 44.9015 73.0144 44.9921 73.0381 45.0932C73.0989 45.1176 73.1631 45.1489 73.234 45.1803C73.332 45.4138 73.4299 45.6473 73.5482 45.9261C73.6731 45.6717 73.788 45.4591 73.8792 45.2395C73.9265 45.1245 73.9738 45.006 74.0278 44.8945C74.1292 44.6889 74.2238 44.4833 74.3082 44.2672C74.3589 44.1417 74.4197 44.0267 74.5481 43.964C74.592 43.943 74.6224 43.8943 74.6561 43.8594C74.7507 43.5701 74.8453 43.2843 74.9433 42.9986C74.9872 42.8696 75.0716 42.7546 75.1628 42.6744C75.4601 42.4131 75.6223 42.068 75.781 41.709C75.8689 41.6463 75.9567 41.5836 76.0479 41.5243C76.2979 41.3675 76.4296 41.1026 76.5782 40.8656C76.7032 40.6704 76.8451 40.5275 77.0512 40.4334C77.2336 40.3498 77.4058 40.2383 77.5815 40.1372C77.6761 40.0815 77.7774 40.0675 77.872 40.1058C77.9666 40.1442 78.0578 40.1268 78.1355 40.1337C78.4496 40.0117 78.7503 39.8932 79.0543 39.7747C79.3752 39.6493 79.6995 39.5308 80.017 39.3983C80.115 39.3565 80.213 39.3739 80.3109 39.3461C80.5102 39.2903 80.7163 39.2729 80.9223 39.2345C81.1183 39.1997 81.3142 39.1614 81.5101 39.123C81.6587 39.0951 81.804 39.0707 81.9729 39.0394C82.1114 38.886 82.2803 38.8442 82.5032 38.9069C82.7363 38.9732 82.9829 38.9732 83.2228 39.0115C83.4829 39.0498 83.743 39.1021 84.0031 39.1439C84.0875 39.1579 84.1416 39.2206 84.2058 39.2659C84.4794 39.4576 84.7463 39.6597 85.0131 39.8549C85.1178 39.9316 85.2293 40.0013 85.3273 40.0884C85.4624 40.2034 85.6245 40.2592 85.7867 40.315C86.0434 40.4021 86.3001 40.4962 86.5602 40.5798C86.6481 40.6077 86.7122 40.646 86.7629 40.7262C86.8474 40.8482 86.9622 40.9144 87.1176 40.9005C87.2325 40.89 87.3372 40.9667 87.4419 40.9493C87.5331 41.0155 87.5905 41.0922 87.6344 41.1828C87.9317 41.357 88.229 41.5348 88.5262 41.7125C88.5701 41.7369 88.6039 41.7787 88.6343 41.8206C88.7323 41.9565 88.8302 42.0959 88.9316 42.2423C89.0768 42.2353 89.1782 42.3224 89.2762 42.427C89.4653 42.6326 89.6646 42.8313 89.8605 43.0299C89.918 43.0822 90.0159 43.016 90.0632 43.124C90.0733 43.1554 90.0159 43.2007 90.0497 43.253C90.1004 43.3053 90.1747 43.26 90.2321 43.2913C90.5057 43.6468 90.8638 43.9221 91.1205 44.2985C91.1881 44.3299 91.259 44.2985 91.3198 44.3229C91.33 44.3334 91.3469 44.3369 91.3536 44.3508C91.5867 44.6784 91.8198 45.006 92.0529 45.3371C92.2082 45.5567 92.3805 45.7693 92.519 46.0028C92.6508 46.2293 92.7656 46.4733 92.8534 46.7242C92.9075 46.8776 92.9109 47.0553 92.9447 47.2226C92.9649 47.3272 92.9987 47.4248 93.0494 47.5119C93.2318 47.8395 93.4176 48.1636 93.6101 48.4982C93.6101 48.5923 93.6203 48.6934 93.5797 48.7979C93.5527 48.8676 93.5628 48.9548 93.5899 49.0384C93.6608 49.2545 93.7182 49.4776 93.7892 49.6936C93.8365 49.84 93.85 49.9829 93.7993 50.1293C93.7453 50.2896 93.8162 50.436 93.8365 50.5893C93.8669 50.8368 93.9006 51.0877 93.9682 51.3247C94.0425 51.5966 93.9682 51.851 93.931 52.1124C93.9108 52.2588 93.8973 52.4051 93.8736 52.5515C93.8365 52.792 93.7993 53.0324 93.7588 53.2694C93.7419 53.381 93.7284 53.489 93.7757 53.5971C93.8061 53.6702 93.8128 53.7574 93.8466 53.8271C93.8837 53.9072 93.8871 53.9944 93.8669 54.0676C93.8027 54.2941 93.8094 54.5346 93.752 54.7646C93.725 54.8692 93.7182 54.9842 93.7047 55.0922C93.6743 55.385 93.6203 55.6742 93.5763 55.9635C93.5595 56.0785 93.5527 56.197 93.5324 56.3155C93.5122 56.4271 93.4818 56.5281 93.4379 56.6327C93.3061 56.9603 93.1744 57.2879 93.046 57.6155C93.0021 57.7235 92.9379 57.8246 92.9075 57.9431C92.8906 58.0128 92.8197 58.0581 92.7623 58.1034C92.5967 58.2324 92.4346 58.3683 92.2623 58.4868C92.1981 58.5321 92.1643 58.5879 92.1306 58.6541C92.0529 58.8144 91.9752 58.9712 91.8941 59.135C91.8198 59.1385 91.7489 59.142 91.6847 59.1455C91.6712 59.1664 91.6576 59.1804 91.661 59.1908C91.6847 59.4034 91.5968 59.5602 91.4448 59.6962C91.232 59.8878 91.0327 60.09 90.8233 60.2886C90.6881 60.4176 90.5834 60.5675 90.5125 60.7382C90.428 60.9404 90.3064 61.1112 90.1477 61.2575C90.0125 61.383 89.8909 61.5224 89.7626 61.6514C89.6714 61.742 89.6004 61.8396 89.6106 61.979C89.4552 62.0975 89.3066 62.216 89.1545 62.3345C89.114 62.3902 89.1478 62.4634 89.114 62.5505C88.8775 62.7248 88.6546 62.9653 88.3067 62.9583C88.2155 62.9583 88.131 63.0245 88.0364 63.0001C87.9621 63.0733 87.8675 63.1012 87.8067 63.1814C87.7628 63.2267 87.8 63.2999 87.7594 63.3556C87.7493 63.3661 87.7358 63.387 87.7155 63.394C87.55 63.4567 87.3878 63.5508 87.2021 63.5403C87.1446 63.5403 87.0906 63.5403 87.0332 63.5159C86.9521 63.4811 86.8676 63.4915 86.7798 63.5159C86.4792 63.6031 86.1751 63.6832 85.8711 63.7634C85.7394 63.7983 85.6076 63.8296 85.4793 63.8749C85.3982 63.9028 85.3138 63.9167 85.2462 63.8854C85.0672 63.8052 84.9219 63.861 84.7935 63.983C84.5064 64.0109 84.2362 63.9168 83.9524 63.8958C83.8713 63.9551 83.7869 64.0108 83.7058 64.0666C81.9526 63.7983 80.2028 63.5264 78.4429 63.2546C78.3686 63.1953 78.2875 63.1221 78.1963 63.0664C78.0916 63.0001 77.9869 62.9479 77.8517 62.9513C77.7268 62.9513 77.595 62.9235 77.4734 62.8886C77.4092 62.8712 77.345 62.8747 77.2707 62.8572C77.1559 62.6481 76.9532 62.5261 76.764 62.3972C76.5242 62.2334 76.2776 62.0835 76.0344 61.9267C76.0107 61.9128 75.9837 61.9058 75.9533 61.8918C75.7743 62.2578 75.5952 62.6237 75.4196 62.9897C75.3993 63.035 75.3655 63.0803 75.3723 63.136C75.3926 63.2789 75.3182 63.4114 75.325 63.5543C75.325 63.6031 75.2946 63.6519 75.2743 63.6972C74.9534 64.3629 74.6291 65.0285 74.3048 65.6942C74.2508 65.8057 74.163 65.8963 74.1393 66.0288C74.1292 66.0845 74.1089 66.1403 74.1089 66.203C74.1089 66.3424 74.0616 66.4575 73.9873 66.5725C73.5347 67.3009 73.0888 68.0328 72.6395 68.7681C72.5415 68.9319 72.4469 69.0992 72.3557 69.2665C72.2341 69.4931 72.0483 69.6534 71.8457 69.7963C71.5551 69.9984 71.2714 70.2145 70.9978 70.4445C70.8255 70.5909 70.6194 70.6606 70.4168 70.7129C70.2242 70.7652 70.035 70.8314 69.8425 70.8872C69.3121 71.0405 68.7919 71.2182 68.265 71.382C67.9238 71.4866 67.5792 71.5842 67.2381 71.6887C67.0354 71.7515 66.853 71.8595 66.6739 71.9641C66.5929 72.0094 66.5118 72.0617 66.4307 72.107C65.9308 72.3719 65.4274 72.6297 64.9343 72.9051C64.7012 73.034 64.4613 73.1281 64.2046 73.1456C64.0019 73.163 63.833 73.2501 63.654 73.3198C63.2453 73.4767 62.8399 73.6474 62.4345 73.8112C62.3332 73.853 62.2217 73.8531 62.1204 73.867C61.8299 73.9018 61.5461 73.9925 61.2556 74.0134C61.2218 74.0134 61.1881 74.0343 61.1543 74.0517C60.9313 74.1563 60.7084 74.2608 60.4787 74.3724C60.026 74.341 59.5666 74.4142 59.1038 74.4281C58.7897 74.4386 58.4688 74.4281 58.1546 74.4699C57.8742 74.5083 57.5905 74.4699 57.3135 74.5118C57.0095 74.5571 56.7088 74.5292 56.4082 74.5536C56.1244 74.578 55.8407 74.6233 55.5535 74.6442C55.4015 74.6581 55.2529 74.7348 55.1043 74.7836C54.9354 74.8394 54.7631 74.8951 54.5908 74.9544C54.4624 74.8777 54.3138 74.9126 54.1753 74.8638C54.0909 74.8359 53.9929 74.8533 53.9017 74.8219C53.8375 74.7975 53.7564 74.808 53.6855 74.8219C53.4963 74.8638 53.3038 74.8777 53.1146 74.9126C52.9457 74.9439 52.7734 74.9439 52.6045 74.9788C52.4323 75.0136 52.2499 75.0032 52.0674 74.9648C51.7432 74.8951 51.4155 74.8707 51.0878 74.9648C50.9527 75.0032 50.8176 75.0066 50.6858 74.9648C50.5676 74.9265 50.446 74.93 50.3244 74.9126C50.0846 74.8742 49.8447 74.8359 49.6015 74.8045C49.3684 74.7732 49.1353 74.7487 48.9056 74.6895C48.784 74.6581 48.6523 74.6546 48.5239 74.6372C48.1692 74.5884 47.8145 74.5501 47.4903 74.3758C47.3754 74.3166 47.2538 74.2713 47.1356 74.2155C47.095 74.1946 47.0545 74.1807 47.0106 74.1841C46.8721 74.2016 46.7437 74.1319 46.6052 74.1319C46.4904 74.1319 46.3823 74.0622 46.3012 73.982C46.1391 73.8322 45.9397 73.738 45.7776 73.5917C45.71 73.5324 45.6121 73.508 45.5276 73.4697C45.1459 73.3024 44.7608 73.1351 44.3791 72.9643C44.1089 72.8458 43.842 72.7204 43.5718 72.5984C43.3995 72.5217 43.2272 72.4555 43.0583 72.3753C42.9367 72.3161 42.8083 72.2638 42.7442 72.1209C42.7003 72.0268 42.6023 71.9815 42.5077 71.9327C42.0618 71.7062 41.6159 71.4727 41.17 71.2461C41.0248 71.1729 40.8896 71.0928 40.8153 70.9325C40.8018 70.9046 40.7815 70.8837 40.7714 70.8697C40.6768 70.8593 40.5991 70.8523 40.5214 70.8384C40.3762 70.8174 40.2546 70.7443 40.133 70.6606C39.6195 70.3121 39.1094 69.9461 38.5825 69.6185C38.248 69.4094 37.9778 69.1411 37.7413 68.8309C37.6535 68.7159 37.5454 68.6322 37.3866 68.6462C37.265 68.4823 37.1468 68.3255 37.0286 68.1652C36.8732 67.9526 36.7246 67.7365 36.5658 67.5239C36.5253 67.4682 36.4847 67.4159 36.4644 67.3532C36.4036 67.144 36.282 66.9663 36.201 66.7676C36.1773 66.7084 36.1334 66.6735 36.0929 66.6282C35.9848 66.5167 35.8834 66.3982 35.7686 66.2936C35.5287 66.081 35.37 65.8092 35.2281 65.5199C35.1673 65.3945 35.1166 65.262 35.0254 65.1505C34.9477 65.0529 34.9612 64.924 34.9443 64.809C34.9207 64.687 34.8903 64.565 34.8802 64.4291C34.7788 64.3245 34.6505 64.2409 34.5221 64.1433C34.4883 64.0387 34.441 63.9307 34.414 63.8157C34.3127 63.3696 34.0863 62.9862 33.8533 62.6028C33.7215 62.3902 33.61 62.1637 33.4648 61.9615C33.4276 61.9093 33.3972 61.8465 33.4107 61.7733C33.4344 61.62 33.3567 61.5015 33.2824 61.383C33.0561 61.0205 32.8297 60.6616 32.6068 60.3026C32.5291 60.4699 32.5291 60.6581 32.5122 60.8358C32.4885 61.0484 32.4041 61.2331 32.3332 61.4248C32.2116 61.742 32.0595 62.0452 31.9514 62.3658C31.867 62.6133 31.7184 62.8084 31.5731 63.0071C31.3096 63.3661 31.0225 63.7111 30.7725 64.0805C30.6205 64.3036 30.428 64.4744 30.2151 64.6242C30.1307 64.6835 30.0598 64.7532 29.9719 64.809C29.8132 64.91 29.7524 65.0982 29.6578 65.2551C29.5463 65.4433 29.4348 65.635 29.3335 65.8301C29.293 65.9068 29.2186 65.9416 29.1578 65.9904C28.9923 66.1298 28.8133 66.2553 28.6309 66.3912H28.4045C28.2728 66.5516 28.1478 66.7014 28.0228 66.8548C27.9519 66.9384 27.8742 67.0186 27.8201 67.1127C27.6681 67.3601 27.4215 67.4891 27.2087 67.6599C26.9317 67.8829 26.6277 68.0711 26.3777 68.329C26.2696 68.4405 26.1953 68.5765 26.0805 68.681C25.996 68.7577 25.9082 68.803 25.7933 68.8169C25.5873 68.8413 25.3846 68.8832 25.1819 68.9285C24.8407 69.0086 24.4996 69.0051 24.1584 68.9354C24.0064 68.9041 23.8476 68.8832 23.6956 68.8588C23.4119 68.81 23.1315 68.8588 22.8477 68.9006C22.6991 68.925 22.5471 68.9319 22.3985 68.9389C22.1687 68.9459 21.939 68.9773 21.7127 69.0051C21.5067 69.0295 21.2972 69.0051 21.0945 69.0783C21.0675 69.0888 21.0371 69.0853 21.0067 69.0818C20.7736 69.0539 20.5439 69.1097 20.321 69.1411C20.0339 69.1794 19.7704 69.0992 19.5001 69.0609C19.3684 69.0435 19.2299 69.0295 19.0981 69.0051C18.8178 68.9529 18.5374 68.8971 18.2536 68.8692C18.0104 68.8448 17.774 68.7786 17.5307 68.7647C17.4125 68.7577 17.2875 68.7368 17.1693 68.7159C16.9058 68.6706 16.9058 68.6636 16.7065 68.81C16.4802 68.8378 16.2572 68.7612 16.0309 68.7437C15.8282 68.7298 15.6256 68.6148 15.4195 68.7193C15.3891 68.7333 15.3486 68.7194 15.3114 68.7228C15.1898 68.7298 15.0682 68.7159 14.9466 68.7577C14.8621 68.7856 14.7608 68.7716 14.6662 68.7542C14.5142 68.7228 14.3588 68.695 14.1798 68.6601C13.923 68.3987 13.5785 68.3255 13.2069 68.3151C13.0515 68.1861 12.8522 68.1234 12.6799 68.0153C12.5786 67.8864 12.5853 67.7086 12.4908 67.5657C12.4468 67.5588 12.3996 67.5518 12.3523 67.5413C12.278 67.4647 12.2036 67.395 12.1496 67.3009C12.0415 67.1127 11.8793 66.9768 11.6902 66.8792C11.5111 66.7851 11.3456 66.6631 11.1666 66.569C11.0349 66.4993 10.9774 66.4261 11.0315 66.2936C11.0011 66.203 10.9267 66.1926 10.8761 66.1577C10.6802 66.0218 10.5484 65.8301 10.4133 65.6384C10.1566 65.2725 9.88296 64.9205 9.63974 64.5476V64.2931C9.56542 64.0771 9.44381 63.8819 9.35936 63.6693C9.30193 63.5229 9.18032 63.4044 9.08236 63.2755C8.97426 63.1291 8.85604 62.9862 8.75132 62.8363C8.69052 62.7492 8.63647 62.6551 8.61958 62.5401C8.60606 62.446 8.56215 62.3589 8.52837 62.2682C8.45406 62.2438 8.3696 62.2578 8.30204 62.1707C8.1703 61.6653 8.03181 61.1425 7.89669 60.6163C7.75819 60.0935 7.53524 59.6055 7.34607 59.1281C7.29878 58.9573 7.37985 58.8179 7.38323 58.6576C7.27175 58.5007 7.15691 58.3404 7.03192 58.1696C7.0049 58.1034 7.09272 58.0442 7.08259 57.964C7.00827 57.8107 6.93733 57.6573 6.85964 57.5075C6.77181 57.3437 6.71776 57.1659 6.69074 56.9847C6.64345 56.6954 6.55562 56.4131 6.49819 56.1238C6.40361 55.6568 6.27186 55.1968 6.20092 54.7228C6.15363 54.4091 6.08945 54.1024 6.03541 53.7922C6.02527 53.7399 6.01852 53.6807 6.03541 53.6354C6.09959 53.496 6.04892 53.3392 6.1131 53.1998C6.15026 53.1126 6.09283 53.022 6.06581 52.9418C6.00162 52.7641 5.98136 52.6003 6.01852 52.4051C6.06243 52.1681 6.08945 51.9242 6.11986 51.6837C6.15701 51.4083 6.20431 51.133 6.24822 50.8542C6.27525 50.6799 6.37321 50.5405 6.4509 50.3907C6.54211 50.2095 6.57589 50.0178 6.59954 49.8191C6.64683 49.4462 6.68736 49.0768 6.87315 48.7352C7.01841 48.4634 7.1265 48.1706 7.24811 47.8848C7.28864 47.7872 7.34607 47.7036 7.42376 47.6339C7.56901 47.5084 7.65009 47.3237 7.8021 47.2017C7.82575 47.0623 7.84939 46.9264 7.87979 46.7591C8.22773 46.2851 8.59255 45.7867 8.95399 45.2918C9.17356 44.9886 9.39651 44.6889 9.59919 44.3787C9.67689 44.2567 9.81877 44.2323 9.86944 44.1208C9.96065 44.0999 10.0316 44.0964 10.1059 44.1347C10.1937 44.0128 10.2816 43.8873 10.3761 43.7583C10.4403 43.72 10.5079 43.7688 10.5754 43.7862C10.8626 43.5667 11.1531 43.3506 11.4402 43.1275C11.5922 43.009 11.6902 42.8382 11.8084 42.6919C11.957 42.5106 12.0955 42.3189 12.2577 42.1517C12.4705 41.9286 12.7205 41.7509 12.9502 41.5487C13.1326 41.3919 13.3218 41.242 13.5042 41.0922C13.7778 40.8656 14.0548 40.6391 14.3284 40.4125C14.4973 40.2731 14.673 40.1442 14.825 39.9873C14.9364 39.8758 15.0108 39.726 15.102 39.59C15.4803 39.4367 15.862 39.2868 16.2403 39.13C16.5444 39.0045 16.8585 38.9104 17.1828 38.8477C17.4835 38.7919 17.7807 38.7152 18.0814 38.6525C18.2536 38.6177 18.4225 38.541 18.605 38.6211C18.659 38.6455 18.7333 38.6246 18.8043 38.6246C18.9123 38.5026 19.061 38.4329 19.186 38.3354C19.2434 38.2901 19.311 38.2726 19.3853 38.2622C19.5981 38.2343 19.8041 38.182 20.017 38.1506C20.3041 38.1053 20.5878 38.0217 20.8784 38.1228C20.956 38.1506 21.0506 38.1262 21.1486 38.1262C21.1925 38.0914 21.2398 38.0461 21.2905 38.0077C21.4053 38.0077 21.5235 37.9938 21.635 38.0112C21.7972 38.0391 21.9593 38.0635 22.1215 38.0914C22.3545 38.1332 22.5876 38.1506 22.8173 38.2064C22.9423 38.2378 23.0707 38.2447 23.199 38.2622C23.3781 38.2831 23.5503 38.3214 23.726 38.3528C23.8003 38.3667 23.8645 38.3946 23.9253 38.4295C24.378 38.663 24.8272 38.893 25.2799 39.1265C25.4488 39.2136 25.5974 39.3321 25.7393 39.4541C26.1345 39.7887 26.5196 40.1302 26.925 40.4544C27.0331 40.5415 27.131 40.6391 27.2391 40.7262C27.4384 40.897 27.6749 41.005 27.9012 41.134V41.1479Z\" fill=\"#27C7FE\"/>\n</svg>\n    <svg id=\"frame_03\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M79.3192 66.6081C79.3217 66.7942 79.1655 66.9135 79.1325 67.0899C79.0126 67.741 78.8176 68.3784 78.8151 69.0488C78.8143 69.3873 78.7019 69.7007 78.5243 69.9964C78.2648 70.4275 78.102 70.9038 77.8921 71.3607C77.9128 71.4283 78.0243 71.4332 78.0062 71.5347C77.9458 71.8707 77.9103 72.2237 77.674 72.4888C77.4533 72.7353 77.3029 73.015 77.2013 73.3123C77.1236 73.5403 76.9997 73.7466 76.9286 73.9755C76.8625 74.1866 76.7162 74.3429 76.5427 74.4791C76.3684 74.6153 76.2535 74.7885 76.1832 75.0004C76.0312 75.4541 75.7445 75.8224 75.3495 76.0995C75.1239 76.2575 74.9917 76.4323 74.9024 76.7079C74.7396 77.2115 74.4083 77.6483 74.0769 78.0673C72.8738 79.5878 71.8094 81.114 70.3716 82.4597C69.4213 83.3485 67.905 84.0157 67.1621 85.056C66.8448 85.5 66.3655 85.7828 65.9424 86.1164C65.3846 86.5564 64.8186 86.9891 64.1897 87.3348C64.1063 87.3807 64.0319 87.4298 63.9327 87.4492C63.5824 87.5193 63.2593 87.6514 62.98 87.8787C62.0611 88.6248 60.9893 89.1301 59.9465 89.6772C58.5343 90.3654 57.0849 90.7981 55.6462 91.4725C53.2044 92.6175 51.4517 92.9777 48.9 92.6055C48.2728 92.5136 47.677 92.7078 47.0795 92.8464C46.7672 92.9181 46.473 92.9455 46.1532 92.8698C45.4665 92.7062 44.7616 93.0583 44.1179 92.9914C43.2874 92.9052 42.8875 92.3267 42.1719 91.9528C41.591 91.6498 40.9001 91.6522 40.2498 91.5475C38.4657 91.2582 35.8024 89.8472 34.7546 88.3589C34.6662 88.2332 34.5191 88.1913 34.3687 88.1784C34.1878 88.1631 34.077 88.0882 34.0308 87.9012C34.0043 87.7957 33.9399 87.6812 33.792 87.6611C33.6507 87.6418 33.5548 87.558 33.4879 87.4347C33.4639 87.3904 33.4052 87.3267 33.3697 87.3307C32.859 87.3863 32.6078 86.9705 32.2921 86.7248C31.3063 85.9544 30.3717 85.1228 29.3991 84.3356C27.4919 82.7925 25.8235 80.4089 24.3791 78.4509C23.8808 77.7756 23.2016 77.0262 22.8933 76.2486C22.8256 76.077 22.933 75.6958 22.8049 75.3888C22.6545 75.0262 22.3339 74.6854 22.0868 74.3816C22.0868 74.3816 22.086 74.38 22.0852 74.3792C21.9579 74.2228 21.8596 74.0472 21.7108 73.9038C21.5489 73.7482 21.5274 73.5081 21.5175 73.3147C21.4977 72.8909 21.2828 72.5532 21.1002 72.2003C20.9779 71.9634 20.8432 71.7466 20.8192 71.4654C20.7911 71.1399 20.5664 70.8885 20.3383 70.6459C20.3276 70.3212 20.3796 69.9771 20.1127 69.7104C20.1904 69.3679 19.8004 69.1729 19.826 68.8296C19.8351 68.6999 19.6409 68.5686 19.5979 68.4211C19.5004 68.094 19.4153 67.7596 19.3698 67.4219C19.2913 66.8442 19.2533 66.2624 19.188 65.683C19.1467 65.3156 19.0707 64.9522 19.0376 64.5839C18.9773 63.9143 18.9963 63.2398 19.0467 62.5734C19.0806 62.1214 19.0963 61.671 19.098 61.2197C19.098 61.1029 19.1492 61.0118 19.1988 60.9224C19.3665 60.6258 19.3789 60.3865 19.3665 60.0457C19.307 58.4526 19.1161 56.7556 19.2161 55.1497C19.2517 54.5719 19.3946 54.0062 19.5541 53.4486C20.2697 50.9418 21.4233 48.7984 22.6587 46.547C22.8471 46.2037 23.0925 45.8895 23.3197 45.5663C23.5602 45.2255 23.7841 44.8709 24.0568 44.5559C24.3791 44.1828 24.7551 43.8564 25.0402 43.4487C25.4451 42.8701 25.9054 42.3303 26.3268 41.7622C26.5978 41.3971 26.9862 41.1127 27.3308 40.8017C28.0307 40.1699 28.2927 39.2787 29.0091 38.7356C29.4388 38.4101 29.9478 38.1989 30.4048 37.9097C30.7857 37.6679 31.1278 37.3722 31.4683 37.0773C32.6119 36.0878 33.8382 35.2336 34.9877 34.2924C35.4934 33.8783 36.1156 33.7018 36.7172 33.4963C37.8989 33.0942 39.083 32.7026 40.1862 32.1144C40.5936 31.8968 41.0299 31.6889 41.4885 31.6865C41.7752 31.6849 41.9298 31.5938 42.0835 31.3948C42.4768 31.3722 42.8734 31.4069 43.2651 31.3182C43.4164 31.2844 43.5948 31.2715 43.7477 31.4327C43.8601 31.2933 43.9543 31.178 44.0427 31.0685C44.7682 31.0862 45.4144 30.8348 46.0945 30.6809C46.0672 30.5455 45.9226 30.5262 45.8243 30.4979C45.421 30.3835 45.1095 30.137 44.8418 29.8445C44.3171 29.2723 43.8089 28.6849 43.2998 28.0991C43.0164 27.7727 42.8834 27.3578 42.6379 27.008C42.5264 26.8485 42.5115 26.6253 42.2958 26.531C42.2562 26.5141 42.2314 26.4464 42.2165 26.3973C42.0512 25.8501 41.6744 25.3884 41.5496 24.8235C41.4711 24.4682 41.2918 24.1531 41.0852 23.855C41.0282 23.772 40.9778 23.693 40.9935 23.5987C41.0621 23.1781 40.8481 22.8155 40.7324 22.4368C40.6886 22.2933 40.6465 22.1564 40.6531 22.0121C40.6803 21.4271 40.6308 20.8389 40.7349 20.2555C40.7588 20.1201 40.8167 20.0041 40.8563 19.88C40.9068 19.7204 40.9547 19.5762 40.8283 19.4038C41.0026 19.2233 41.0836 19.0121 40.8968 18.776C41.2125 18.3143 41.0282 17.8196 41.0894 17.2893C41.3753 17.0234 41.386 16.9815 41.4125 15.8292C41.6017 15.7446 41.6785 15.54 41.7504 15.3707C41.9339 14.9364 42.3074 14.6197 42.4776 14.1878C43.1238 12.5505 44.8839 11.2523 46.1102 10.0428C46.3986 9.75918 46.687 9.47474 47.0018 9.2193C47.4638 8.84541 48.1157 8.62462 48.6206 8.31197C49.3106 7.8849 50.0378 7.50457 50.8319 7.28217C51.8062 7.009 52.8259 6.99691 53.8316 7.03801C54.2555 7.05574 54.662 7.02915 55.0793 7.02995C55.3074 7.02995 56.48 6.94454 56.6147 7.06219C56.7494 7.17983 56.8601 7.27653 56.9873 7.38773H58.0459C58.1657 7.38773 58.5723 7.68506 58.7855 7.71568C59.0582 7.75356 59.3498 7.70118 59.6267 7.72777C60.4786 7.80835 61.2876 8.15001 62.0677 8.47071C62.2825 8.55935 62.4999 8.6488 62.6833 8.78901C62.8692 8.93083 63.013 9.11777 63.1692 9.29021C63.7072 9.88328 64.8062 10.1508 65.1714 10.8236C65.2623 10.9912 65.3747 11.1427 65.5111 11.2596C66.0573 11.731 66.2548 12.3651 66.4688 13.0106C66.596 13.3949 66.6101 13.7712 66.5969 14.1572C66.5812 14.6294 66.682 15.0758 66.8514 15.5126C66.8753 15.5746 66.9216 15.6399 66.9166 15.7011C66.8613 16.3296 67.186 16.9219 67.0968 17.5536C67.0704 17.7398 67.0952 17.9275 67.2042 18.0927C67.2431 18.1515 67.2645 18.2128 67.2604 18.2813C67.2282 18.8131 67.2588 19.3433 67.2001 19.8792C67.1232 20.581 67.1852 21.2982 67.191 22.0089C67.191 22.0435 67.2257 22.0782 67.2513 22.1281C67.2133 22.253 67.0985 22.3457 67.0737 22.5036C66.9943 23.0105 66.8307 23.5053 66.5911 23.9565C66.4341 24.2514 66.4341 24.5343 66.4366 24.8364C66.4366 24.9033 66.4366 24.9702 66.4366 25.0596C66.2366 25.2611 66.1225 25.4972 66.0812 25.8098C66.0523 26.0298 65.9292 26.3215 65.6433 26.4182C65.559 26.6172 65.6623 26.8284 65.5474 27.0161C65.4152 27.2313 65.2665 27.4126 65.0648 27.5842C64.6525 27.9347 64.1575 28.228 63.9509 28.7679C63.7105 28.8888 63.7055 29.2659 63.3667 29.2828C63.346 29.2836 63.3312 29.3255 63.3072 29.336C63.0626 29.4432 63.0857 29.755 62.8701 29.8815C62.6759 29.9959 62.442 30.0403 62.3222 30.2739C62.2346 30.4456 62.0999 30.5866 61.8661 30.6269C61.7338 30.6502 61.6016 30.7719 61.5058 30.8799C61.1571 31.2739 60.6885 31.4907 60.2167 31.672C59.8316 31.8203 59.454 32.008 59.0284 32.0612C59.116 32.253 59.2862 32.1941 59.4217 32.1933C59.6696 32.1933 59.901 32.2006 60.1175 32.3569C60.4233 32.5777 60.7943 32.506 61.1719 32.5189C61.3182 32.9282 61.8784 32.6083 62.0412 32.9854C62.2057 32.9951 62.3429 33.0032 62.4792 33.0104C62.8585 33.3964 63.3601 33.539 63.8633 33.6228C64.4922 33.7276 65.0632 33.9314 65.5788 34.2924C65.6119 34.3158 65.6424 34.3464 65.6796 34.3601C66.8522 34.8082 67.9207 35.4576 69.0428 36.0031C69.1536 36.0571 69.2585 36.116 69.3345 36.2102C70.6162 37.7864 72.1243 39.0893 73.2985 40.7823C74.4446 42.4334 75.4296 44.1844 76.4014 45.9362C77.0625 47.1288 77.2707 48.4664 77.7938 49.7081C78.6672 51.783 79.3423 53.9853 79.458 56.2294C79.4919 56.887 79.7051 57.5082 79.7654 58.152C79.8324 58.8636 80.0778 59.5606 79.9753 60.2866C79.8844 60.9304 79.8051 61.5775 79.8266 62.2262C79.8415 62.6959 79.7266 63.1512 79.7299 63.617C79.7307 63.8071 79.582 63.9473 79.558 64.1399C79.4911 64.6846 79.4399 65.2294 79.3878 65.7749C79.3614 66.0513 79.3159 66.3268 79.3192 66.6057V66.6081Z\" fill=\"#05C7FD\"/>\n</svg>\n    <svg id=\"frame_04\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M91 70.11C90.9593 69.9989 90.8727 70.0447 90.8609 69.9697C90.7783 69.7254 90.9502 69.4241 90.7245 69.1909C90.6957 69.2506 90.6733 69.2978 90.6471 69.3505C90.5723 69.1423 90.4963 68.9437 90.5212 68.7688C90.2247 68.4203 89.9492 68.1204 89.8823 67.6651C89.8574 67.4971 89.7616 67.3096 89.6436 67.1944C89.3983 66.9556 89.2763 66.6405 89.1083 66.3531C88.9798 66.1337 88.6938 65.8102 88.4734 65.6825C88.3632 65.6186 88.2491 65.5464 88.1691 65.4479C87.9972 65.2368 87.7795 65.1105 87.5434 65.0119C87.4922 64.9911 87.4463 64.9675 87.4148 64.9286C87.0934 64.5427 86.6526 64.3136 86.2997 63.9748C86.1462 63.8277 86.0124 63.6569 85.8117 63.6027C85.6766 63.5666 85.5245 63.5958 85.3762 63.5958C85.2883 63.5125 85.2004 63.4306 85.1348 63.3681C84.2953 63.2182 83.5331 62.8503 82.6712 62.7309C82.4915 62.5712 82.237 62.506 81.9602 62.5032C81.7936 62.5018 81.6283 62.5198 81.4578 62.4726C81.1181 62.3796 80.9187 62.1283 80.7376 61.8437C80.1289 61.8021 79.5176 61.8965 78.9063 61.7673C78.581 61.6979 78.2373 61.7201 77.9041 61.6965C77.3872 61.6604 76.873 61.5827 76.3509 61.5785C75.9206 61.5744 75.5822 61.7382 75.2568 61.9936C75.2004 61.9409 75.1414 61.8867 75.0942 61.8409C74.3333 61.8021 73.5974 61.9867 72.851 61.9284C72.6293 61.9117 72.4036 61.9242 72.1806 61.927C72.1032 61.927 72.0206 61.9187 71.9484 61.9437C71.5562 62.0783 71.1364 62.1214 70.7901 62.3366C70.7297 62.3116 70.7428 62.2963 70.756 62.263C70.9239 61.8243 71.2597 61.4786 71.3424 60.9899C71.3975 60.665 71.585 60.3734 71.6008 60.0319C71.6047 59.9528 71.6651 59.9153 71.6965 59.857C71.7464 59.764 71.8238 59.6654 71.8238 59.5696C71.8238 59.3919 71.9169 59.2655 71.9786 59.1198C71.9038 59.0614 71.9104 58.9781 71.9196 58.8907C71.9983 58.831 72.1426 58.806 72.1413 58.6908C72.1386 58.495 72.2646 58.3659 72.3249 58.2062C72.439 57.9036 72.5728 57.6217 72.5532 57.2746C72.5414 57.0692 72.6109 56.8512 72.6752 56.6499C72.7998 56.2584 72.8824 55.8655 72.8641 55.4476C72.847 55.0727 72.8601 54.6965 72.8614 54.3202C72.8614 54.2369 72.8352 54.137 72.868 54.0731C72.9979 53.8232 72.9415 53.5552 72.9283 53.3026C72.9139 53.0374 73.074 52.8014 73.0057 52.5362C72.9349 52.464 72.8037 52.464 72.7867 52.3293C72.868 52.1225 72.9716 51.9017 72.9953 51.7018C73.0202 51.488 73.0569 51.2409 73.0097 51.0243C72.9467 50.9896 72.9021 50.9646 72.8628 50.9424C72.8575 50.7813 72.8562 50.6425 72.9297 50.4953C73.049 50.2593 73.0726 49.9733 73.0031 49.7359C72.9428 49.5276 72.9454 49.3333 72.9388 49.132C72.931 48.8682 72.931 48.603 72.9388 48.3392C72.9454 48.1365 72.931 47.9407 73.0018 47.7325C73.0648 47.5492 73.0517 47.309 72.9992 47.1161C72.9021 46.7593 72.8457 46.4038 72.8588 46.0345C72.868 45.7666 72.7867 45.5306 72.6214 45.3168C72.6214 45.0738 72.6122 44.8225 72.624 44.5726C72.6397 44.2186 72.5715 43.8604 72.6948 43.5091C72.7368 43.3897 72.7329 43.2134 72.6778 43.1037C72.502 42.7497 72.5991 42.3235 72.3892 41.9847C72.3774 41.9653 72.3866 41.9306 72.3866 41.9028C72.3971 41.4807 72.2278 41.1156 72.0704 40.7449C71.9983 40.5741 71.9038 40.4131 71.8854 40.2271C71.7766 40.2215 71.7359 40.1479 71.6847 40.0785C71.6336 39.3121 71.7057 38.5416 71.6126 37.7697C71.5588 37.3268 71.547 36.8714 71.4932 36.416C71.4539 36.3508 71.3738 36.4049 71.3004 36.3563C71.2282 36.0356 71.097 35.7121 71.122 35.3512C71.1364 35.1443 71.0695 34.9277 70.9541 34.7861C70.8137 34.614 70.7573 34.439 70.7245 34.228C70.7048 34.0975 70.6563 33.9475 70.5343 33.8878C70.3113 33.7768 70.184 33.5657 70.02 33.4075C70.0082 33.2853 70.0397 33.1673 69.944 33.0812C69.7275 32.8868 69.658 32.58 69.4481 32.3718C69.3287 32.2538 69.1975 32.0899 69.2185 31.8733C69.2198 31.8525 69.1962 31.8275 69.1831 31.8067C69.1018 31.7595 68.9981 31.8289 68.9312 31.7567C68.8866 31.6915 68.9391 31.6068 68.8538 31.5415C68.6033 31.6401 68.6295 31.275 68.434 31.2319C68.2333 31.1875 68.0641 31.0681 67.908 30.9362C67.9067 30.8612 67.992 30.8224 67.9447 30.7238C67.7217 30.578 67.7335 30.1907 67.4462 30.1101C67.3793 29.9852 67.4633 29.8561 67.3649 29.77C67.298 29.6464 67.1314 29.7367 67.0645 29.6131C66.9884 29.5451 67.0527 29.4271 66.9674 29.3535C66.7129 29.1313 66.6867 28.8217 66.7051 28.5121C66.545 28.2969 66.448 28.0568 66.242 27.886C66.0518 27.7291 65.914 27.5056 65.7383 27.3279C65.3342 26.9239 64.9289 26.524 64.433 26.2339C64.1851 26.0881 63.9804 25.8604 63.7141 25.7299C63.6249 25.6868 63.5646 25.5924 63.5252 25.48C63.4872 25.3717 63.3953 25.2856 63.3284 25.1926C63.2563 25.1773 63.154 25.2273 63.1566 25.0871C63.1579 24.9913 63.3193 25.0413 63.2852 24.8969C63.0608 24.7608 62.9939 24.4665 62.8063 24.2638C62.6345 24.0764 62.5374 23.814 62.3944 23.5946C62.2501 23.3725 62.237 23.092 62.0822 22.8657C62.0127 22.8602 61.9366 22.8532 61.8618 22.8463C61.7844 22.6436 61.6309 22.527 61.4486 22.4423C61.3725 22.1979 61.2453 21.9966 61.0301 21.8411C60.8058 21.9383 60.7022 21.6218 60.4975 21.6634C60.4424 21.5523 60.5041 21.4454 60.4214 21.3385C60.344 21.2816 60.2562 21.1636 60.1604 21.1164C59.8403 20.9609 59.5648 20.7249 59.3195 20.4861C58.7266 19.9113 58.0733 19.4101 57.5092 18.7978C57.3898 18.6687 57.2586 18.5091 57.0894 18.4369C56.6998 18.2689 56.3928 17.9371 55.9534 17.8524C55.7264 17.8079 55.5205 17.7219 55.3093 17.8371C55.245 17.7843 55.266 17.6733 55.1427 17.6983C55.1046 17.8524 54.9735 17.9315 54.8173 17.9926C54.6953 17.8468 54.45 17.8954 54.3372 17.7205C54.2323 17.5594 54.0814 17.4678 53.9738 17.372C53.6629 17.2332 53.4399 17.49 53.1618 17.5095C53.154 17.2915 53.0031 17.1596 52.8929 17.0291C52.7604 16.8708 52.5413 16.9083 52.3642 16.9444C52.3406 17.0055 52.3262 17.0416 52.3131 17.0735C52.0953 16.9888 51.934 16.7098 51.6585 16.9041C51.6441 16.8014 51.5929 16.7417 51.4893 16.6723H51.219C51.1167 16.6042 51.0826 16.5168 50.9973 16.5071C50.7874 16.5126 50.5684 16.5515 50.3952 16.3974C50.1696 16.1975 49.9111 16.1697 49.6343 16.1725C49.3917 16.1752 49.1424 16.228 48.9168 16.0933C48.8512 16.1614 48.7803 16.1877 48.6846 16.1711C48.5914 16.1003 48.497 16.0267 48.3658 15.9823C48.2556 15.9448 48.1113 15.9795 48.0392 15.8948C47.8909 15.7226 47.6705 15.7865 47.5118 15.6741C47.2888 15.7768 47.1642 15.5366 46.9779 15.4936C46.7615 15.445 46.5332 15.4714 46.3338 15.4061C45.8327 15.2423 45.308 15.2367 44.8029 15.0993C44.593 15.0424 44.3569 15.0729 44.1352 15.0937C43.9096 15.1145 43.7128 14.9896 43.4872 15.0007C43.087 15.0201 42.6882 15.0174 42.2868 15.0771C41.9051 15.1326 41.5089 15.0646 41.1298 15.1756C40.7192 15.295 40.2601 15.2867 39.9728 15.681C39.7524 15.6088 39.5399 15.6921 39.347 15.5908C39.33 15.581 39.2919 15.5935 39.2749 15.6088C39.1608 15.7129 39.023 15.656 38.8971 15.6699C38.6164 15.7018 38.3264 15.6032 38.0497 15.7476C37.9906 15.7782 37.8935 15.7782 37.828 15.7129C37.7611 15.6463 37.6784 15.6727 37.6036 15.6727C37.2481 15.6699 36.8939 15.6657 36.5384 15.6727C36.1829 15.681 35.8235 15.6185 35.4575 15.7518C35.4903 15.6838 35.5073 15.6477 35.531 15.5963H35.022C34.8895 15.756 34.7124 15.8351 34.5143 15.6629C34.4041 15.7462 34.286 15.7976 34.2047 15.8046C34.189 15.842 34.1745 15.8754 34.1614 15.9087C34.1011 15.8865 34.1444 15.7754 34.0355 15.7782V16.1391C33.8256 16.1364 33.7718 15.899 33.5908 15.8656C33.5317 15.924 33.6104 16.0392 33.478 16.0919C33.2681 16.0475 33.0464 16.1044 32.8732 16.253C32.6633 16.253 32.4731 16.2225 32.2973 16.2613C32.1228 16.3002 31.9339 16.2252 31.7713 16.3432C31.6112 16.4585 31.4197 16.4099 31.2334 16.4404C31.1967 16.5029 31.1639 16.5584 31.0813 16.5959C30.8241 16.7125 30.5198 16.7403 30.3243 16.9763C30.142 17.1943 29.9032 17.3387 29.6999 17.5289C29.5858 17.6358 29.4559 17.758 29.2709 17.7885C29.1266 17.8121 28.9666 17.901 28.8643 18.0134C28.7449 18.1439 28.5704 18.1495 28.4629 18.2703C28.3579 18.3883 28.2713 18.5243 28.1729 18.659C28.0575 18.659 27.9657 18.7132 27.8712 18.7951C27.7873 18.8673 27.6626 18.8992 27.5525 18.9186C27.4396 18.9395 27.3203 18.9228 27.2219 18.9228C27.1851 18.9894 27.1655 19.0228 27.1366 19.0755C27.0343 19.0825 26.9188 19.0908 26.8126 19.0991C26.6316 19.3004 26.4492 19.4726 26.1908 19.6073C26.0714 19.5059 25.9035 19.5003 25.7487 19.5059C25.5926 19.5934 25.4457 19.6739 25.2909 19.76C25.2161 19.7711 25.1715 19.642 25.0889 19.6794C24.917 19.7586 24.7215 19.7142 24.5628 19.7766C24.408 19.8377 24.2257 19.8072 24.0958 19.9294C23.9423 20.0737 23.756 20.1598 23.5816 20.2681C23.2077 20.5014 22.8509 20.7735 22.4692 20.9776C22.1032 21.1733 21.7332 21.3566 21.3948 21.6009C20.9632 21.9133 20.5434 22.2312 20.2364 22.7061C20.0357 23.017 19.7983 23.3322 19.448 23.4724C19.448 23.7279 19.2644 23.8056 19.1712 23.9167C19.0204 23.9514 19.086 23.7598 18.939 23.7931C18.9207 23.9084 18.7987 23.9875 18.7147 24.0444C18.5691 24.143 18.5993 24.2721 18.5599 24.3915C18.5481 24.4276 18.5101 24.454 18.4852 24.4873C18.4051 24.5928 18.3632 24.7247 18.2582 24.815C18.1572 24.9024 18.0759 25.0149 17.9801 25.1093C17.8843 25.2037 17.8187 25.3217 17.7361 25.4244C17.6718 25.5036 17.6312 25.5966 17.5472 25.673C17.3216 25.8771 17.1484 26.1436 16.9411 26.3713C16.6237 26.7212 16.2918 27.0585 15.9717 27.407C15.8379 27.5514 15.67 27.6666 15.6333 27.8971C15.6214 27.9735 15.5113 28.0873 15.4444 28.0887C15.3066 28.0901 15.2791 28.1942 15.2108 28.2678C15.0206 28.4705 14.7884 28.6302 14.6835 28.9148C14.6533 28.9967 14.5759 29.0758 14.4841 29.1036C14.2427 29.1744 14.269 29.4548 14.1286 29.6062C14.0617 29.6784 14.0289 29.7936 14.0027 29.8963C13.983 29.9727 13.9777 30.0629 14.0473 30.1296C14.0682 30.149 14.0591 30.1698 14.0263 30.1865C13.9659 30.1962 13.9318 30.1476 13.8702 30.106C13.8505 30.2087 13.7455 30.1712 13.6904 30.2337C13.3205 30.6502 12.9716 31.0903 12.6935 31.579C12.6069 31.7317 12.536 31.8942 12.4062 31.9997C12.2566 32.1205 12.216 32.3107 12.1097 32.4578C11.9352 32.6994 11.6702 32.9049 11.6978 33.2409C11.4512 33.3436 11.438 33.6393 11.2675 33.731C11.2006 33.9059 11.2793 34.0267 11.3213 34.1516C11.2282 34.2391 11.1022 34.1544 11.0156 34.2447C10.9605 34.5293 10.7152 34.6959 10.6024 34.961C10.4817 35.2457 10.3086 35.5108 10.1236 35.7566C9.92027 36.0259 9.9019 36.4188 9.59494 36.6146C9.58182 36.6229 9.59494 36.6715 9.58445 36.6951C9.44146 36.9658 9.39817 37.256 9.42834 37.56C9.34045 37.6197 9.25387 37.6739 9.2237 37.7822C9.14499 37.7891 9.06759 37.7947 8.96395 37.803C8.58615 38.3417 8.31591 38.947 8.10208 39.6398C7.93155 39.712 7.90531 39.9619 7.82529 40.1438C7.69542 40.4423 7.48553 40.7019 7.44356 41.0545C7.42388 41.2281 7.32811 41.4349 7.15495 41.5279C7.13134 41.782 7.06182 42.0278 7.13265 42.2777C7.15364 42.3526 7.0828 42.3971 7.03951 42.4443C6.93063 42.5053 6.80207 42.4262 6.68926 42.5095C6.63023 42.6636 6.56726 42.8247 6.50691 42.9816C6.56594 43.069 6.60792 43.1523 6.5725 43.2551C6.37048 43.3633 6.30883 43.5785 6.27603 43.7826C6.21831 44.1408 6.16584 44.4907 6.00711 44.8239C5.93102 44.9836 5.8615 45.1724 5.87724 45.3654C5.90085 45.643 5.81558 45.8985 5.7513 46.1595C5.70932 46.3289 5.70539 46.5107 5.55847 46.6121V47.2438C5.52305 47.3229 5.42335 47.291 5.40236 47.3868C5.42335 47.8658 5.37088 48.3489 5.25281 48.8265C5.22658 48.9306 5.20952 49.075 5.25806 49.1528C5.35251 49.3055 5.30529 49.4735 5.33677 49.6095C5.39974 49.6526 5.46008 49.6484 5.48631 49.722C5.45483 49.8664 5.53091 50.0316 5.42072 50.1899C5.22395 50.4717 5.22396 50.8257 5.18198 51.152C5.13475 51.5158 5.13999 51.8864 5.10195 52.2557C5.03767 52.868 5.12032 53.4914 5.02324 54.1092C4.97602 54.4063 5.01537 54.7187 5.01537 55.0338C5.15967 55.199 5.33545 55.349 5.39711 55.585C5.34726 55.6933 5.29742 55.803 5.24757 55.9113C5.24757 56.6068 5.24494 57.3024 5.24757 57.998C5.25019 58.4034 5.37743 58.7629 5.64505 59.0726C5.5952 59.3322 5.6844 59.5488 5.86674 59.7084V60.0305C5.82083 60.1263 5.73163 60.1582 5.72113 60.2485C5.82739 60.5664 5.98743 60.876 5.80771 61.2217C5.79722 61.2412 5.80246 61.2828 5.81558 61.2995C5.95201 61.4744 5.83001 61.6785 5.89167 61.8895C5.90741 61.9076 5.9507 61.9437 5.97563 61.9909C6.08451 62.2033 6.32063 62.3879 6.11992 62.6781C6.09894 62.7086 6.13435 62.7808 6.14354 62.835C6.18683 63.0863 6.28784 63.3223 6.33769 63.5653C6.37573 63.7555 6.43345 63.9248 6.52003 64.1164C6.45968 64.4038 6.54495 64.6857 6.65908 64.9647C6.76665 65.2299 6.8165 65.5214 6.98442 65.7755V66.3184C7.2271 66.4336 7.11691 66.9112 7.51308 66.8695C7.51701 67.193 7.71248 67.4735 7.9919 67.8053C8.05093 67.9649 7.97091 68.083 7.91188 68.2121C8.08504 68.3592 8.02075 68.6439 8.21752 68.7646C8.40905 68.8826 8.46284 69.1076 8.54024 69.2839C8.636 69.4991 8.80916 69.6143 8.9351 69.8073C8.93903 70.0516 9.08596 70.2641 9.24862 70.4112C9.35094 70.5042 9.42309 70.5987 9.48212 70.7111C9.74711 71.2234 9.77859 71.2623 10.2915 71.6524C10.3532 71.6996 10.4279 71.7663 10.4437 71.8371C10.4686 71.9578 10.5959 71.9926 10.6169 72.1439C10.5604 72.3508 10.6077 72.6062 10.7454 72.7686C10.9094 72.9616 10.9461 73.2032 11.0707 73.4059C11.1901 73.6003 11.3318 73.7891 11.3987 74.0168C11.4577 74.2195 11.6584 74.3417 11.7057 74.5249C11.8054 74.9206 12.0428 75.1885 12.3235 75.4454C12.5085 75.4607 12.7118 75.4065 12.885 75.5703C13.0188 75.8508 13.0044 76.2187 13.2825 76.4464C13.5291 76.6477 13.7587 76.8726 14.004 77.0948C14.0105 77.1447 14.0184 77.21 14.0263 77.2752C14.2598 77.4113 14.4579 77.571 14.7071 77.6626C14.9734 77.7612 15.2463 77.8917 15.4378 78.143C15.4837 78.2027 15.5637 78.2735 15.6267 78.2721C15.7999 78.2665 15.8864 78.3873 15.9783 78.497C16.1134 78.658 16.3325 78.6927 16.4505 78.8857C16.5646 79.0704 16.7824 79.1356 16.9359 79.2856C17.1589 79.5035 17.4869 79.5507 17.7282 79.7521C17.8187 79.827 17.9407 79.7521 18.0313 79.7909C18.1533 79.8451 18.2412 79.8701 18.3868 79.8243C18.4996 79.7895 18.6465 79.9659 18.7803 80.0395C19.0558 80.1922 19.3942 80.1963 19.6382 80.4324C19.654 80.4476 19.6855 80.4504 19.7104 80.4504C20.0948 80.4532 20.4844 80.4796 20.8044 80.1825C21.0419 80.4837 21.3882 80.499 21.6807 80.5976C21.9051 80.6725 22.1359 80.7392 22.355 80.8183C22.3786 80.9669 22.4849 81.0321 22.5623 81.1126C22.6397 81.1501 22.6751 81.0557 22.6725 81.0557C22.9099 81.1529 23.0857 81.2237 23.2576 81.2945C23.3992 81.1515 23.5855 81.1682 23.7114 81.2195C24.0853 81.3695 24.4631 81.2293 24.8252 81.2987C24.896 81.2348 24.9564 81.1821 25.0141 81.1293C25.2253 81.096 25.3906 81.1612 25.4942 81.3653C25.6713 81.3917 25.8615 81.3278 26.0137 81.4722C26.1121 81.375 26.1987 81.289 26.28 81.2084H26.8126C26.8939 81.2876 26.9792 81.3723 27.008 81.4014C27.6207 81.6 28.1782 81.5139 28.7213 81.5472C28.7685 81.4361 28.7869 81.3403 28.8735 81.3237C29.0506 81.6749 29.368 81.8512 29.6868 81.8582C30.1289 81.8693 30.5578 82.0067 30.9658 81.9568C31.1141 82.0012 31.1049 82.1484 31.1901 82.2039H31.379C31.4551 82.1692 31.425 82.0651 31.5076 82.0442C31.93 82.0192 32.3485 82.0595 32.7591 82.1997C32.8666 82.2358 33.0188 82.2511 33.1067 82.1956C33.2838 82.0845 33.4622 82.1317 33.6406 82.1234C33.8899 82.1136 34.1391 82.1206 34.4015 82.1206C34.4723 82.2553 34.5943 82.2872 34.715 82.3247C34.7242 82.3025 34.7426 82.2858 34.7714 82.2858C35.5257 82.2858 36.2813 82.2594 37.0343 82.2094C38.3422 82.122 39.6448 81.9582 40.9383 81.736C42.1504 81.5292 43.3546 81.2709 44.5537 80.9877C44.5602 80.9821 44.5694 80.978 44.5799 80.9752C44.6415 80.9641 44.7032 80.9502 44.7636 80.9377C44.795 80.9308 44.8265 80.9238 44.8567 80.9155C44.8633 80.9141 44.8685 80.9155 44.8737 80.9155C45.5598 80.7767 46.238 80.599 46.9097 80.3935C48.27 79.9756 49.5989 79.4563 50.9409 78.9815C51.2754 78.8635 51.6099 78.7483 51.9458 78.6372C52.2291 78.5442 52.5164 78.4845 52.8076 78.4331C53.2917 78.3484 53.8059 78.2776 54.2454 78.0361C54.3372 77.9305 54.4277 77.8375 54.5353 77.8084C54.837 77.7265 54.9603 77.4488 55.1938 77.3044C55.3486 77.2086 55.4562 77.0462 55.4549 76.8726C55.59 76.7338 55.7146 76.7227 55.8602 76.7907C56.1121 76.4617 56.3246 76.1021 56.6814 75.8619H57.0724C58.4275 75.0442 59.7642 74.2375 61.097 73.4337C61.2085 73.4878 61.2715 73.5753 61.3437 73.685C61.0918 74.0001 61.3345 74.3653 61.2702 74.7221C61.2033 75.0969 61.2545 75.4968 61.2545 75.8841C61.3056 75.9507 61.3542 76.0132 61.4001 76.0729C61.2663 76.2326 61.3082 76.4436 61.3043 76.6074C61.3004 76.7546 61.2702 76.9531 61.3804 77.1003C61.2361 77.3127 61.4525 77.446 61.4814 77.6195C61.3686 77.7778 61.4224 77.9639 61.4066 78.1374C61.3896 78.3346 61.526 78.4914 61.5037 78.6636C61.61 78.7358 61.7149 78.6664 61.8094 78.7636C61.6782 78.9177 61.7385 79.1162 61.7202 79.3036C61.77 79.398 61.8435 79.4883 61.8658 79.5896C61.9484 79.9631 62.2029 80.2019 62.4574 80.4254C62.7421 80.6739 62.931 80.9696 63.0188 81.3584C63.1015 81.3681 63.1894 81.3792 63.2655 81.3875C63.6603 81.7971 64.0499 82.1872 64.4527 82.5357C64.6245 82.5649 64.7846 82.5093 64.9394 82.5774C64.9525 82.6398 64.9643 82.7051 64.9761 82.7634C65.2804 82.9189 65.5756 83.0744 65.876 83.2202C66.0911 83.3243 66.2997 83.4354 66.5306 83.5062C66.7129 83.5617 66.8966 83.4798 67.1039 83.5881C67.1616 83.6117 67.1485 83.7408 67.2337 83.7991C67.5276 83.7686 67.8201 83.8033 68.1022 83.913C68.1782 83.9879 68.253 84.0629 68.3225 84.1309C68.4367 84.1073 68.5114 83.9879 68.6282 84.056C68.6846 84.0879 68.6531 84.1962 68.8014 84.2087C69.1726 84.0976 69.5071 84.3642 69.8456 84.5419C70.0227 84.5419 70.1827 84.5266 70.3375 84.546C70.5133 84.5669 70.7101 84.5752 70.853 84.6654C71.2203 84.8973 71.6087 84.9681 72.0245 84.9612C72.38 84.9556 72.7342 84.9528 73.0897 84.9625C73.3363 84.9695 73.5803 84.9598 73.8138 84.8737C74.0132 84.8001 74.2166 84.7848 74.4238 84.7973C74.7846 84.8195 75.1414 84.7834 75.5074 84.8584C77.8582 85.3402 80.634 84.503 82.851 83.6908C83.6394 83.402 84.4133 83.0688 85.186 82.7356C85.9075 82.4246 86.6356 82.1136 87.3098 81.6985C88.1074 81.2071 88.2622 80.7711 88.7738 80.0825C88.6518 79.7895 88.8302 79.6118 89.0008 79.4355C89.1044 79.3286 89.1438 79.1842 89.212 79.0579C89.3747 79.0079 89.5819 78.8802 89.6344 78.7427C89.7446 78.4567 89.9584 78.2318 90.0463 77.9305V77.5002C90.2037 77.396 90.1959 77.1808 90.2942 77.0253C90.2431 76.8435 90.3493 76.6338 90.1932 76.4589C90.3454 76.2562 90.2431 76.0105 90.2798 75.8425C90.2956 75.6675 90.4425 75.6342 90.4372 75.5009C90.4202 75.4704 90.4005 75.4357 90.3795 75.3954C90.4202 75.3718 90.4608 75.3482 90.5133 75.3177V74.5041C90.7468 74.3625 90.7744 74.1473 90.7442 73.9015C90.7035 73.8529 90.6615 73.8002 90.6183 73.7474C90.7009 73.6003 90.6366 73.4267 90.6799 73.2809C90.8281 72.7742 90.8504 72.2494 90.9278 71.7315C91.0131 71.1637 90.9436 70.6084 90.9895 70.1016L91 70.11Z\" fill=\"#05C7FD\"/>\n</svg>\n    <svg id=\"frame_05\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M92.9974 53.0865C92.9937 51.3789 92.9839 49.6713 92.974 47.9624C92.974 47.8781 92.9851 47.795 92.9556 47.7095C92.8893 47.5169 92.8561 47.3156 92.8696 47.113C92.9015 46.6285 92.7148 46.168 92.7295 45.686C92.6251 45.5954 92.7418 45.4859 92.7062 45.389C92.5895 45.0707 92.6251 44.7347 92.5968 44.4037C92.5698 44.3496 92.5158 44.3194 92.4863 44.2577C92.3032 43.8827 92.3155 43.5128 92.2405 43.1189C92.1607 42.7011 91.9788 42.2985 91.8683 41.8769C91.6508 41.0426 91.5648 40.1793 91.3215 39.3513C90.9333 38.0326 90.4443 36.7478 89.9479 35.468C89.5965 34.5632 89.2304 33.6647 88.8925 32.7549C88.7869 32.4718 88.6394 32.2038 88.5743 31.9017C88.5485 31.7797 88.4797 31.6551 88.363 31.5632C88.234 31.4613 88.1504 31.3103 88.0853 31.1543C87.9391 30.8044 87.7855 30.4596 87.573 30.145C87.3789 29.8569 87.2241 29.5297 86.9869 29.2856C86.6171 28.9055 86.3186 28.45 85.8726 28.1493C85.8504 28.1342 85.8418 28.0977 85.8259 28.0725C85.6133 27.7441 85.3307 27.4773 85.0654 27.1979C84.8921 27.0142 84.7582 26.799 84.5714 26.6291C84.5788 26.4341 84.4191 26.3435 84.3208 26.2164C84.0898 25.9182 83.8404 25.635 83.6193 25.3292C83.2163 24.7718 82.7457 24.2949 82.1879 23.8947C81.8267 23.6355 81.4753 23.3548 81.1178 23.0881C80.8389 22.8804 80.5981 22.6036 80.2553 22.4891C80.227 22.4803 80.1816 22.4627 80.1791 22.4438C80.1459 22.2462 79.9592 22.221 79.8375 22.1732C79.6901 22.1153 79.555 22.0373 79.4382 21.9455C77.8693 20.7097 76.2364 19.5785 74.3898 18.7832C72.9978 18.1842 71.5935 17.896 70.1412 17.5424C70.0638 17.5235 70.0024 17.4291 69.925 17.4115C69.6203 17.3385 69.3512 17.1787 69.0649 17.0655C68.9642 17.0252 68.8684 16.9988 68.7639 17C68.2602 17.0089 67.7565 17.0089 67.2539 17.0328C67.0389 17.0428 66.8276 17.1045 66.6126 17.1372C66.4959 17.1561 66.4123 17.224 66.3337 17.3033C66.1924 17.2102 66.0708 17.297 65.9541 17.3574C65.8717 17.4002 65.7993 17.4417 65.7022 17.4619C65.0682 17.5953 64.5239 17.823 63.9489 18.1062C63.1172 18.5151 62.2141 18.4736 61.3909 18.982C59.3772 20.224 57.3193 21.3792 55.4296 22.8075C54.9996 23.1334 54.5291 23.4152 54.1445 23.789C53.7624 24.1615 53.2267 24.3251 52.906 24.7932C52.7426 24.8196 52.6001 24.9266 52.4711 25.0499C52.1381 25.3708 51.8457 25.7319 51.6 26.1258C51.2953 26.614 50.9562 27.0771 50.6601 27.5717C50.3493 28.0926 49.9794 28.5759 49.6563 29.0918C49.5445 29.2705 49.4327 29.4555 49.3049 29.6266C49.1661 29.8116 49.0346 30.0029 48.9155 30.2017C48.8036 30.3867 48.7226 30.5918 48.6071 30.7742C48.4916 30.958 48.4547 31.1694 48.338 31.3594C47.9596 31.9747 47.7593 32.6731 47.5468 33.364C47.4816 33.5754 47.4816 33.8208 47.3784 33.9957C47.2482 34.2172 47.2187 34.4651 47.1253 34.6916C46.989 35.0263 46.9521 35.4025 46.8071 35.7436C46.7813 35.8052 46.7912 35.8707 46.8206 35.9046C46.64 36.189 46.5602 36.4973 46.5196 36.8396C46.398 36.8912 46.4066 37.1441 46.1781 37.1039C46.1523 36.8182 46.1682 36.5565 46.108 36.2922C45.9938 35.7939 45.9397 35.283 45.8427 34.7809C45.7689 34.3984 45.7223 34.0083 45.5453 33.6509C45.2505 33.0506 45.0944 32.3724 44.5845 31.9017C44.6116 31.7029 44.5587 31.533 44.4605 31.3757C44.345 31.1895 44.2528 30.9894 44.1324 30.8044C44.0181 30.6308 43.9199 30.4496 43.8879 30.2281C43.8572 30.0142 43.7945 29.8028 43.5881 29.6656C43.3387 29.4995 43.2724 29.1912 43.1544 28.9395C43.0107 28.6312 42.8325 28.3418 42.6839 28.036C42.5463 27.7516 42.2993 27.5226 42.1076 27.2646C41.8435 26.9098 41.4601 26.6531 41.2832 26.2252C41.2537 26.1547 41.1739 26.1082 41.1272 26.0855C40.9859 26.0163 40.9011 25.8993 40.7918 25.7986C40.4736 25.5042 40.2119 25.1707 39.9833 24.7995C39.8826 24.6359 39.8064 24.4157 39.5865 24.3464C39.5607 24.3376 39.5275 24.3037 39.5238 24.2772C39.4956 24.057 39.2928 23.9589 39.1995 23.7814C39.1233 23.6367 38.9857 23.5373 38.837 23.4505C38.5508 23.2831 38.294 23.0742 37.9819 22.9434C37.7313 22.8377 37.515 22.6451 37.2914 22.4803C37.171 22.3922 37.0543 22.2928 37.0101 22.1317C36.9843 22.0386 36.9241 21.9643 36.8602 21.8914C36.6882 21.6938 36.4609 21.5667 36.2594 21.4107C36.1402 21.3188 36.053 21.2169 35.9694 21.0873C35.693 21.0042 35.4251 20.8847 35.1487 20.789C34.8403 20.6821 34.5209 20.5852 34.2248 20.4379C34.097 20.375 33.9667 20.3549 33.8304 20.3511C33.6596 20.3448 33.4827 20.3763 33.3193 20.3524C33.0465 20.3133 32.7639 20.2618 32.5096 20.1649C32.2233 20.0566 31.9444 20.0403 31.6532 20.0441C31.4751 20.0466 31.2969 20.0441 31.1065 20.0441C30.9333 19.8767 30.7047 19.8868 30.4922 19.9207C30.346 19.9446 30.2035 19.9535 30.0573 19.9547C28.8507 19.9623 27.6442 19.9673 26.4377 19.9723C26.3443 19.9723 26.2596 19.9975 26.1699 20.0227C25.9979 20.0705 25.8566 20.2165 25.6858 20.2165C25.4278 20.2165 25.2017 20.3335 24.9548 20.3712C24.7459 20.404 24.5297 20.4694 24.3982 20.6657C24.3613 20.7211 24.3245 20.7664 24.236 20.8154C23.9325 20.8154 23.5971 20.8192 23.2617 20.8154C22.8084 20.8079 22.3832 20.9023 21.9766 21.1149C21.1546 21.5453 20.3032 21.9165 19.4775 22.3419C19.0328 22.5709 18.5647 22.7659 18.1052 22.9736C17.7661 23.1271 17.4552 23.3083 17.1935 23.6053C16.6836 24.1854 16.1259 24.7227 15.5902 25.2802C15.4304 25.4463 15.2781 25.6187 15.1393 25.8062C14.7768 26.2957 14.4955 26.8406 14.036 27.2659C13.6244 27.6459 13.2386 28.065 12.8921 28.518C12.6451 28.8401 12.3269 29.1019 12.2188 29.5247C12.1979 29.6077 12.1156 29.6958 12.0407 29.7726C11.9055 29.9097 11.7777 30.062 11.6856 30.2319C11.5406 30.5012 11.3661 30.7491 11.1954 30.9995C11.0283 31.2449 10.8858 31.5079 10.7322 31.7621C10.6081 31.9684 10.5196 32.1975 10.4201 32.4177C10.3304 32.6165 10.2702 32.8329 10.1535 33.0129C9.94217 33.3401 9.82054 33.6849 9.78245 34.0775C9.75788 34.3342 9.70873 34.5922 9.61536 34.8401C9.40895 35.3925 9.21974 35.9512 9.02316 36.5061C8.80815 37.1127 8.59805 37.7205 8.38427 38.3258C8.23561 38.7486 8.08326 39.1714 7.91371 39.5879C7.71958 40.0648 7.7159 40.5631 7.62129 41.0577C7.5144 41.6152 7.3768 42.1525 7.30922 42.7213C7.12001 44.3119 7.12124 45.9012 7.02418 47.4943C7.01189 47.7132 6.96766 47.941 7.06595 48.1549C6.9394 48.5199 7.03892 48.8961 7.01189 49.2661C7.00698 49.3403 7.00084 49.4196 7.01927 49.4913C7.12984 49.9179 7.24533 50.3433 7.36328 50.7673C7.44806 51.0731 7.55249 51.3726 7.51563 51.7023C7.50089 51.8382 7.46894 52.0005 7.54266 52.1138C7.7073 52.3642 7.69501 52.636 7.69624 52.9116C7.70238 53.6956 7.70607 54.4795 7.71221 55.2648C7.71467 55.597 7.75153 55.9279 7.78961 56.2538C7.83876 56.6716 7.88545 57.0932 7.97391 57.5047C8.04394 57.8331 7.9862 58.1804 8.15697 58.495C8.35724 58.8637 8.40884 59.2979 8.60665 59.6716C8.66071 59.7723 8.71846 59.8818 8.74917 59.9862C8.92855 60.6116 9.18656 61.2081 9.40035 61.8197C9.4458 61.9493 9.50232 62.0764 9.52689 62.211C9.61781 62.6892 9.68416 63.1724 9.78982 63.6468C9.82422 63.8029 9.79719 63.974 9.866 64.1086C9.97903 64.3251 10.0601 64.5541 10.1584 64.7768C10.1977 64.8649 10.2702 64.8939 10.3341 64.9442C10.3415 65.0298 10.3243 65.1279 10.3624 65.1946C10.5245 65.4891 10.6155 65.8137 10.7531 66.117C10.812 66.2479 10.8907 66.3536 10.9988 66.4417C11.1438 66.56 11.2728 66.6984 11.3367 66.8783C11.4485 67.1891 11.634 67.4446 11.8625 67.6736C12.1623 67.9756 12.4707 68.2688 12.7459 68.596C13.0211 68.9244 13.327 69.2252 13.6293 69.5473C13.9217 69.6971 14.1588 69.9374 14.4107 70.1463C14.6773 70.3665 14.9832 70.5427 15.2769 70.7214C15.5607 70.8938 15.8445 71.0662 16.1222 71.2487C16.5583 71.5368 16.9982 71.82 17.4835 72.0075C17.4921 71.9899 17.5019 71.971 17.5105 71.9534C17.728 72.0024 17.9319 72.0528 18.1334 72.122C18.5217 72.2529 18.9296 72.3258 19.3166 72.458C19.765 72.6115 20.2418 72.6643 20.6767 72.8518C20.9224 72.9575 21.1964 72.9802 21.4421 73.106C21.8439 73.106 22.2456 73.101 22.6474 73.0872C23 73.0758 23.3539 73.057 23.7065 73.0318C24.0652 73.0054 24.4228 72.9777 24.7766 72.9085C25.3467 72.799 25.9156 72.6341 26.4955 72.5989C26.5016 72.5926 26.5078 72.5863 26.5151 72.58C26.7203 72.6279 26.9157 72.4555 27.1479 72.4542C27.5128 72.4542 27.8703 72.3372 28.2377 72.3724C28.3126 72.3799 28.379 72.346 28.449 72.3246C28.7574 72.2352 29.0645 72.1333 29.3778 72.0729C29.9958 71.9559 30.5991 71.7784 31.2097 71.6287C31.4689 71.5645 31.722 71.4739 31.9837 71.4261C32.1164 71.4022 32.2491 71.3808 32.3806 71.3506C32.6521 71.2877 32.9224 71.2147 33.1927 71.1455C33.463 71.0763 33.7517 71.0675 34.0036 70.9592C34.3575 70.807 34.7248 70.8032 35.0897 70.773C35.4116 70.7466 35.7298 70.7076 36.0468 70.6535C36.4953 70.5767 36.9425 70.4874 37.4008 70.51C37.4536 70.5125 37.5052 70.5087 37.558 70.505C37.5998 70.5025 37.6489 70.51 37.6809 70.4886C37.977 70.2961 38.3222 70.1992 38.611 69.9903C38.6441 69.9664 38.6884 69.945 38.7068 69.9098C38.9267 69.492 39.3862 69.2579 39.53 68.7822C39.5386 68.7546 39.5668 68.7294 39.5926 68.7118C39.7106 68.6325 39.7868 68.5092 39.8261 68.3846C39.9231 68.0763 40.1541 67.88 40.347 67.6497C40.5473 67.4106 40.7574 67.1816 40.9245 66.9136C41.0031 66.7877 41.0817 66.6392 41.2378 66.6103C41.2808 66.487 41.3189 66.3787 41.3557 66.273C41.4135 66.263 41.4663 66.2642 41.4982 66.2101C41.6543 65.9371 41.6297 65.5797 41.8779 65.3494C41.884 65.3431 41.8828 65.3293 41.884 65.3179C41.9418 65.0512 42.0499 64.8121 42.2084 64.5893C42.3042 64.4547 42.4037 64.3037 42.4394 64.1451C42.5327 63.7211 42.749 63.3511 42.905 62.956C43.061 62.5608 43.3399 62.2311 43.6029 61.9014C43.8879 61.5453 44.2037 61.2156 44.3523 60.7639C44.3831 60.672 44.4457 60.5726 44.5637 60.5474C44.5059 60.4845 44.5256 60.4304 44.5575 60.3687C44.6103 60.2656 44.689 60.1573 44.6877 60.0516C44.6853 59.9333 44.7222 59.8591 44.7897 59.7786C44.8487 59.7068 44.8782 59.6036 44.9273 59.537C45.0355 59.3885 44.9998 59.2123 45.0649 59.0676C45.2111 58.7404 45.3094 58.3969 45.3942 58.0546C45.6264 57.1246 46.0294 56.2627 46.3427 55.3629C46.4508 55.3881 46.4914 55.5001 46.5872 55.5064C46.5946 55.5668 46.5454 55.6083 46.5737 55.6649C46.6339 55.787 46.6818 55.9166 46.7457 56.0374C46.9189 56.3671 47.0344 56.7069 47.0615 57.0882C47.0799 57.3449 47.1069 57.6129 47.2089 57.8558C47.306 58.0886 47.3723 58.3302 47.4374 58.573C47.4829 58.7454 47.5443 58.9141 47.6119 59.0789C47.7114 59.3205 47.9043 59.4967 48.0517 59.7043C48.2692 60.0114 48.5899 60.2278 48.7705 60.5676C48.8344 60.6884 48.8872 60.8205 48.9707 60.9249C49.3823 61.4459 49.7325 62.0109 50.1048 62.5608C50.1551 62.6351 50.2067 62.7131 50.2768 62.7798C50.6589 63.146 51.0422 63.5109 51.3973 63.9048C51.7057 64.2458 52.0546 64.5252 52.4281 64.7806C52.6099 64.9039 52.8004 65.0172 52.9662 65.1594C53.1223 65.2928 53.3152 65.3595 53.4737 65.4866C53.7231 65.6854 54.0044 65.8364 54.2526 66.0415C54.4136 66.1749 54.6298 66.2579 54.7944 66.3813C55.2834 66.7449 55.738 67.1564 56.2024 67.5528C56.2749 67.6145 56.3474 67.6585 56.4396 67.6925C56.7381 67.8032 57.0293 67.9366 57.3193 68.0688C57.4028 68.1065 57.4986 68.1556 57.5478 68.2286C57.6621 68.4022 57.8353 68.5004 57.979 68.6476C58.2383 68.6124 58.4508 68.7495 58.6744 68.8276C58.6818 68.8464 58.6855 68.8653 58.6892 68.8842C59.032 69.1019 59.3797 69.3095 59.7335 69.5058C60.0407 69.6757 60.3527 69.8355 60.6685 69.989C60.9818 70.1413 61.3 70.2797 61.601 70.4534C62.0802 70.729 62.5397 71.041 63.057 71.2285C63.0606 71.2071 63.0631 71.1858 63.068 71.1644C63.2326 71.1493 63.3678 71.1568 63.4956 71.2625C63.5632 71.3179 63.6676 71.3342 63.7585 71.3531C64.0792 71.4211 64.4011 71.4878 64.723 71.5431C65.2193 71.63 65.7182 71.7118 66.2207 71.7948C66.2207 71.7633 66.2403 71.7331 66.2796 71.7331C66.6691 71.7382 67.0094 71.9471 67.3572 72.0993C67.6791 72.2415 68.0145 72.3523 68.3388 72.4869C68.6521 72.6165 68.9445 72.7675 69.2247 72.9613C69.4888 73.145 69.7481 73.3363 70.0356 73.4785C70.1879 73.554 70.3403 73.6056 70.5049 73.6434C70.586 73.6622 70.6671 73.6824 70.7457 73.7075C70.7531 73.695 70.7629 73.6836 70.7752 73.6723C70.8981 73.7025 71.0221 73.7478 71.1475 73.7969C71.4079 73.8988 71.6709 74.0007 71.9559 73.9995C72.5923 73.9944 73.2275 74.0234 73.864 73.9303C74.1723 73.885 74.477 73.8434 74.7805 73.7692C74.998 73.7151 75.2167 73.6383 75.4378 73.6182C75.7106 73.5943 75.9711 73.5125 76.2266 73.4445C76.5645 73.3552 76.911 73.3137 77.2464 73.2193C77.4761 73.1551 77.7219 73.1337 77.9381 73.057C78.3595 72.9072 78.7871 72.7549 79.1618 72.4831C79.4862 72.2478 79.8412 72.0565 80.1705 71.8288C80.6841 71.4727 81.221 71.1543 81.737 70.8007C82.1928 70.4886 82.6622 70.1904 83.1364 69.9035C83.5124 69.6757 83.8785 69.4328 84.2532 69.2038C84.4707 69.0704 84.6574 68.8678 84.8589 68.6967C85.0776 68.5117 85.2668 68.2814 85.504 68.1292C85.7743 67.9555 85.9881 67.729 86.2092 67.505C86.7744 66.9324 87.2425 66.268 87.8175 65.7043C87.9588 65.5658 88.1025 65.4098 88.1836 65.2311C88.4293 64.69 88.7869 64.2232 89.0928 63.7223C89.4663 63.1107 89.8865 62.5331 90.2796 61.9354C90.6175 61.4207 91.0475 60.9665 91.2048 60.3436C91.2073 60.3348 91.2183 60.3272 91.2232 60.3184C91.4296 59.9359 91.6791 59.5785 91.8351 59.1683C91.9285 58.9241 92.0575 58.6876 92.1029 58.4346C92.1422 58.2157 92.1656 57.9866 92.2639 57.7991C92.3757 57.5865 92.3609 57.3499 92.4605 57.1335C92.5477 56.9447 92.5244 56.7031 92.6165 56.4967C92.6362 56.4539 92.5895 56.3797 92.5735 56.3218C92.5919 56.2513 92.6718 56.2488 92.6939 56.157C92.7897 55.7656 92.8684 55.3742 92.8671 54.9678C92.8671 54.8067 92.8536 54.6406 92.8893 54.4871C92.9986 54.024 93.0011 53.5546 92.9998 53.0865H92.9974Z\" fill=\"#04C7FD\"/>\n</svg>\n  <svg id=\"frame_06\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M92.998 47.1494C93.0042 46.8561 93.0022 46.5669 92.895 46.2861C92.8732 46.2287 92.8545 46.1671 92.8305 46.1086C92.7276 45.8602 92.6485 45.6107 92.6662 45.3319C92.74 44.193 92.4561 43.0937 92.0109 42.0477C91.6656 41.2355 91.4013 40.3617 91.1351 39.5193C91.0695 39.3126 90.9832 39.1101 90.9426 38.8992C90.9031 38.6925 90.6961 38.5328 90.7783 38.2947C90.7814 38.2843 90.7596 38.2645 90.7492 38.2499C90.6514 38.1225 90.6202 37.9774 90.6348 37.8187C90.64 37.7561 90.6348 37.6955 90.5578 37.6611C90.5245 37.6465 90.5058 37.589 90.4922 37.5462C90.3966 37.255 90.3113 36.9616 90.2072 36.6735C90.175 36.5837 90.2333 36.4908 90.1688 36.4094C90.0055 36.2017 90.0023 35.925 89.8713 35.7026C89.8442 35.6578 89.8224 35.6035 89.8193 35.5523C89.8005 35.2297 89.6684 34.9364 89.5592 34.6431C89.3273 34.0156 89.0589 33.4018 88.803 32.7838C88.7344 32.6168 88.6751 32.4403 88.5784 32.2911C88.2445 31.7795 87.8981 31.2784 87.5871 30.7523C87.4477 30.5164 87.2802 30.294 87.041 30.1312C86.7674 29.9432 86.5188 29.7188 86.2526 29.5184C86.1392 29.4328 86.0528 29.32 85.9291 29.2449C85.3331 28.8816 84.8369 28.4149 84.2003 28.1164C83.5939 27.8324 82.9376 27.6393 82.4071 27.2123C82.171 27.0223 81.965 26.7895 81.6977 26.6475C81.3784 26.4774 80.9997 26.4502 80.6794 26.2822C80.4963 26.1861 80.3403 26.0473 80.1676 25.9335C79.6174 25.5681 78.7624 25.7675 78.391 25.2236C78.3484 25.162 78.2912 25.1234 78.2444 25.1223C78.0311 25.1182 77.8429 25.0159 77.6338 24.9908C77.3925 24.9626 77.1626 24.8561 76.9119 24.8791C76.8953 24.8802 76.8693 24.8739 76.863 24.8624C76.7985 24.7444 76.6872 24.7893 76.5957 24.7883C75.8353 24.782 75.075 24.782 74.3157 24.7768C74.2085 24.7768 74.0816 24.8113 74.0005 24.7309C73.9454 24.6766 73.8944 24.662 73.8341 24.6672C73.7384 24.6745 73.6583 24.6317 73.574 24.6025C73.3286 24.5169 73.0883 24.4365 72.8178 24.4417C72.1865 24.4553 71.554 24.4417 70.9216 24.4407C69.9792 24.4375 69.1097 24.7434 68.3545 25.3092C66.3127 26.8396 65.3152 29.0089 63.7019 30.8943C63.5677 31.0509 63.4293 31.2179 63.3815 31.4256C63.3565 31.5363 63.3149 31.6282 63.2536 31.719C63.214 31.7774 63.1776 31.8422 63.1589 31.91C63.0819 32.1898 62.9332 32.4372 62.8198 32.7003C62.7189 32.9352 62.6014 33.1628 62.5098 33.4018C62.4755 33.4905 62.435 33.5668 62.3923 33.6482C62.3049 33.81 62.1874 33.9728 62.1739 34.1639C62.1655 34.2777 62.1343 34.3737 62.0896 34.4729C61.9638 34.7485 61.8233 35.0189 61.7817 35.3258C61.7755 35.3728 61.7682 35.4197 61.7318 35.45C61.6018 35.5586 61.5872 35.71 61.5706 35.8634C61.5643 35.9177 61.556 35.973 61.5383 36.0231C61.4322 36.3165 61.3251 36.6109 61.2096 36.9C61.1878 36.9533 61.1712 37.0044 61.1784 37.0566C61.2024 37.2247 61.1483 37.3886 61.1015 37.5358C61.0078 37.825 60.9454 38.11 60.959 38.4127C60.961 38.4566 60.9662 38.5046 60.933 38.5442C60.7925 38.7092 60.7832 38.9242 60.7457 39.1195C60.7 39.3575 60.674 39.5976 60.6084 39.8335C60.5699 39.9724 60.5294 40.1133 60.5283 40.2605C60.519 41.3055 60.5543 42.3504 60.4805 43.3944C60.469 43.5593 60.4794 43.7253 60.4784 43.8902C60.4774 44.2306 60.467 44.5709 60.4784 44.9102C60.4826 45.0428 60.4243 45.1555 60.4129 45.2818C60.4014 45.4123 60.5523 45.5376 60.4233 45.667C60.5242 45.9144 60.4524 46.1723 60.467 46.4249C60.4784 46.6149 60.467 46.6181 60.2745 46.6181C59.459 46.6181 58.6446 46.617 57.8291 46.6149C57.566 46.6149 57.5753 46.5961 57.2674 46.4427C57.0979 46.3581 56.919 46.2756 56.7099 46.2767C55.6656 46.283 54.6213 46.285 53.578 46.2673C53.19 46.261 52.8228 46.3665 52.4494 46.4281C52.1103 46.4844 51.7764 46.5606 51.429 46.5565C51.1357 46.5533 50.8424 46.5648 50.5501 46.5533C50.2547 46.5408 49.9759 46.5888 49.6982 46.6932C49.5234 46.759 49.3508 46.8415 49.1521 46.8404C48.2908 46.8331 47.4306 46.8352 46.5694 46.8331C46.5142 46.8331 46.4591 46.8289 46.405 46.831C46.3239 46.8342 46.2917 46.7987 46.2937 46.7172C46.2969 46.5335 46.2927 46.3498 46.2937 46.166C46.2948 45.5501 46.2958 44.9342 46.3 44.3183C46.3 44.1961 46.3 44.0635 46.2022 43.9894C46.0451 43.8704 46.0181 43.7149 46.017 43.5416C46.015 43.22 46.0087 42.8985 46.017 42.577C46.0233 42.3619 45.991 42.1636 45.8704 41.9798C45.7591 41.8086 45.7279 41.6176 45.73 41.4088C45.7404 40.2511 45.7372 39.0934 45.7414 37.9346C45.7414 37.8031 45.7227 37.6851 45.653 37.5713C45.5656 37.4283 45.4616 37.2842 45.4252 37.1255C45.3857 36.9502 45.4138 36.7602 45.4138 36.5764C45.4138 36.4574 45.4158 36.3374 45.4138 36.2184C45.4138 36.1547 45.4148 36.09 45.3825 36.0304C45.2411 35.7684 45.1683 35.4772 45.0258 35.2151C44.9363 35.0502 44.8791 34.8675 44.8001 34.6953C44.6472 34.3612 44.5723 33.9875 44.2956 33.7181C44.2592 33.6826 44.2529 33.6377 44.2571 33.5918C44.2685 33.4853 44.2092 33.4029 44.1687 33.3131C44.0595 33.0646 43.84 32.9112 43.6736 32.7118C43.6143 32.6408 43.556 32.5719 43.5165 32.4748C43.4166 32.2336 43.3366 31.9894 43.27 31.7388C43.2481 31.6574 43.2263 31.6156 43.1306 31.6125C42.881 31.6031 42.881 31.5968 42.882 31.3421C42.882 31.2503 42.882 31.1584 42.882 31.0665C42.882 30.9663 42.8539 30.8828 42.8082 30.7868C42.6615 30.4788 42.4285 30.2241 42.2985 29.9078C42.2579 29.8096 42.1986 29.7084 42.1196 29.6405C42.0166 29.5518 41.9812 29.4411 41.9937 29.3284C42.0208 29.0935 41.9261 28.9338 41.7513 28.7918C41.6421 28.7031 41.6359 28.6696 41.7087 28.5809C41.5038 28.3095 41.3082 28.0308 41.1023 27.7593C40.7913 27.3501 40.4418 26.9701 40.0216 26.6705C39.8021 26.515 39.5753 26.3772 39.3309 26.2634C39.0937 26.1527 38.8483 26.0608 38.6028 25.9721C38.1201 25.7967 37.6177 25.6349 37.1809 25.3572C36.7659 25.0931 36.3987 24.7069 35.9098 24.5805C35.8911 24.5753 35.8807 24.5628 35.8755 24.5482C35.6872 24.5064 35.5229 24.4083 35.3554 24.3164C35.1671 24.2141 34.9789 24.1129 34.7531 24.1097C33.7296 24.093 32.7061 24.1296 31.6826 24.0732C30.6705 24.0179 29.6564 24.0795 28.6412 24.0273C27.6728 23.9782 26.7002 24.0106 25.7297 24.0095C25.6403 24.0095 25.5488 24.0001 25.4614 24.0408C25.2835 24.1233 25.0963 24.187 24.9153 24.259C24.7624 24.3196 24.6022 24.329 24.4514 24.3905C24.1685 24.5054 23.8731 24.5889 23.586 24.6954C23.5308 24.7163 23.4924 24.7058 23.4674 24.6808C22.9276 24.8551 22.4168 25.1171 21.9248 25.3969C21.4141 25.6882 20.919 26.0055 20.4208 26.3166C20.194 26.4575 19.9683 26.5995 19.7343 26.7279C19.5179 26.8459 19.3026 26.9649 19.0883 27.086C18.6255 27.3501 18.1678 27.6288 17.7382 27.9462C17.5156 28.1101 17.2961 28.2855 17.0954 28.4786C17.0933 28.5016 17.0839 28.5277 17.061 28.559C16.9092 28.7751 16.7396 28.9807 16.6221 29.2208C16.5555 29.3566 16.5035 29.5058 16.413 29.6238C16.3142 29.7522 16.1842 29.8556 16.1155 30.0101C16.0469 30.1646 15.8909 30.2481 15.8014 30.3901C15.7764 30.4297 15.74 30.4725 15.7088 30.5143C15.5913 30.673 15.4935 30.8536 15.3479 30.9799C15.196 31.1114 15.1648 31.3045 15.0234 31.4465C14.6718 31.7983 14.4409 32.2451 14.1964 32.6784C14.0415 32.9519 13.874 33.2223 13.7554 33.5125C13.6389 33.7985 13.3872 34.0146 13.3529 34.3382C13.1511 34.522 13.0897 34.7892 12.9535 35.0095C12.6851 35.4438 12.4594 35.902 12.217 36.3499C12.0215 36.7101 11.8197 37.0671 11.6824 37.4606C11.5565 37.8229 11.3599 38.1601 11.2091 38.514C11.1228 38.7175 10.9907 38.8136 10.7712 38.7864C10.6807 38.775 10.6225 38.8 10.5912 38.9002C10.4768 39.2687 10.3468 39.6331 10.2355 40.0016C10.1887 40.1561 10.066 40.2824 10.068 40.4494C10.0691 40.5392 10.0389 40.6039 9.99315 40.6749C9.94947 40.7428 9.92554 40.82 9.90162 40.8994C9.79864 41.2418 9.69463 41.5852 9.56877 41.9203C9.49908 42.1062 9.43459 42.2962 9.37322 42.482C9.32849 42.6156 9.25256 42.745 9.24632 42.8954C9.23696 43.1136 9.15062 43.3192 9.09654 43.5259C9.05181 43.6971 9.02164 43.861 9.0206 44.0343C9.01956 44.2828 9.01852 44.5302 9.01436 44.7786C9.01436 44.8413 9.02164 44.9039 8.98628 44.9655C8.03557 46.6337 8.07822 49.3406 8.01685 51.2114C7.96172 52.889 8.04181 54.5708 8.25817 56.2348C8.43811 57.6243 8.21552 58.876 8.20512 60.2759C8.20512 60.3719 8.22592 60.4586 8.26649 60.539C8.31849 60.6423 8.38507 60.7488 8.41003 60.8511C8.47244 61.1142 8.51613 61.3845 8.49012 61.6591C8.45164 62.0548 8.5026 62.4368 8.65863 62.8043C8.78449 63.1008 8.83233 63.4098 8.81465 63.7355C8.80009 63.9881 8.78553 64.2428 8.85938 64.4944C8.94883 64.7972 8.8573 65.1333 9.02476 65.4235C9.005 65.7252 9.15999 65.9434 9.37114 66.1292C9.45019 66.1981 9.46267 66.2785 9.46059 66.3746C9.45539 66.623 9.46059 66.8704 9.45435 67.1189C9.45019 67.2671 9.47411 67.4143 9.53132 67.5438C9.68735 67.8956 9.77888 68.2683 9.8985 68.6305C9.97859 68.8769 10.042 69.1233 10.2438 69.3039C10.325 69.3769 10.3884 69.4657 10.4373 69.5659C10.637 69.972 10.8513 70.3708 11.0333 70.7831C11.1945 71.1464 11.3745 71.5003 11.5482 71.8573C11.5929 71.9481 11.6376 72.0348 11.7125 72.1068C11.8665 72.2561 12.0059 72.4211 12.1661 72.563C13.8334 74.0444 16.4806 76.4861 18.8428 76.2857C18.9791 76.2742 19.1039 76.3264 19.1913 76.4068C20.5882 77.6867 24.6542 76.6125 26.1396 75.8305C26.2831 75.7543 26.4246 75.7199 26.5837 75.7293C26.6659 75.7345 26.7491 75.723 26.8302 75.7314C26.9686 75.746 27.0747 75.7095 27.1641 75.5946C27.6353 74.9818 28.4695 75.3984 29.0759 75.2355C29.958 74.9985 30.7652 74.1655 31.4652 73.6143C32.6905 72.6497 34.4973 71.8584 35.5613 70.8614C35.7215 70.7111 35.8713 70.5514 36.0284 70.3989C36.2499 70.1828 36.4757 69.972 36.6972 69.7559C36.9281 69.5304 37.081 69.2454 37.2693 68.9875C37.5501 68.6034 37.8528 68.2328 38.1035 67.8256C38.1368 67.7714 38.2491 67.7672 38.2398 67.7045C38.2096 67.5166 38.3552 67.4676 38.4603 67.382C38.4873 67.359 38.5092 67.3287 38.53 67.2985C38.9179 66.7441 39.359 66.2274 39.6887 65.6313C39.956 65.149 40.2327 64.6719 40.5136 64.1969C40.5999 64.0508 40.5988 63.8493 40.7736 63.7574C40.9473 63.6666 41.0648 63.5131 41.2001 63.3806C41.3446 63.2396 41.4466 63.0695 41.4518 62.8586C41.4528 62.7918 41.4757 62.7385 41.5017 62.679C41.6619 62.3053 41.8668 61.9639 42.1664 61.6831C42.2121 61.6403 42.2444 61.5818 42.2839 61.5338C42.339 61.466 42.3671 61.3751 42.3723 61.3115C42.3869 61.1611 42.4982 61.2864 42.5523 61.2217C43.0703 60.588 43.1628 59.9857 43.4832 59.2518C43.6413 58.8906 43.8629 58.5607 44.0199 58.1995C44.1385 57.926 44.1884 57.2057 44.358 57.0157C44.824 56.4958 46.6193 56.8225 47.3037 56.8236C47.4005 56.8236 47.5086 56.8539 47.5867 56.7609C47.8103 56.4937 48.1379 56.4217 48.4448 56.3298C48.6851 56.2578 48.9077 56.192 49.0533 55.9613C49.1105 55.8705 49.201 55.8235 49.3497 55.8653C49.5245 55.9133 49.7335 55.9352 49.9104 55.835C50.2079 55.6648 50.5147 55.5479 50.8642 55.5959C50.8736 55.597 50.8829 55.5949 50.8912 55.5959C50.9973 55.6043 51.0837 55.5782 51.1544 55.4863C51.2865 55.3151 51.4623 55.2358 51.6828 55.2671C51.946 55.3047 52.1894 55.2347 52.4088 55.0948C52.5472 55.0071 52.6897 54.9769 52.8488 54.9821C53.0319 54.9883 53.215 54.9863 53.398 54.9873C53.5717 54.9873 53.7465 54.9873 53.9202 54.9873C54.1033 54.9873 54.2863 54.9894 54.4694 54.9904C54.6525 54.9904 54.8355 54.9915 55.0186 54.9915C55.1923 54.9915 55.3691 54.9737 55.5397 54.9967C55.7166 55.0197 55.8882 54.9936 56.0619 54.9946C56.5289 54.9946 56.997 54.9779 57.463 55.003C57.7698 55.0186 58.034 54.9435 58.2743 54.7702C58.3783 54.695 58.4813 54.6699 58.604 54.671C59.0711 54.6752 59.5381 54.6741 60.0051 54.6752C60.1341 54.6752 60.2548 54.6585 60.3775 54.6063C60.5387 54.5374 60.7124 54.4977 60.8653 54.4507C61.0661 54.8244 61.0214 55.2107 61.0214 55.5917C61.0214 56.2254 61.0182 56.8601 61.0172 57.4938C61.0172 57.5763 60.9985 57.6702 61.0297 57.7391C61.1451 57.9886 61.1275 58.2747 61.2408 58.5169C61.3542 58.759 61.3386 59.0033 61.3386 59.2518C61.3386 59.638 61.3365 60.0233 61.3386 60.4095C61.3386 60.4909 61.3324 60.5828 61.3636 60.6527C61.4998 60.9544 61.608 61.2645 61.7089 61.5808C61.8067 61.8877 61.9669 62.1717 62.0397 62.4953C62.1229 62.8648 62.2269 63.2271 62.23 63.6081C62.2311 63.7188 62.23 63.8284 62.23 63.9391C62.23 64.0299 62.2425 64.1082 62.2966 64.1948C62.487 64.4997 62.6659 64.8118 62.8323 65.1302C62.9602 65.3734 63.0809 65.6219 63.2224 65.8557C63.3284 66.0322 63.4106 66.2211 63.5188 66.3975C63.6384 66.5938 63.7736 66.7953 63.8475 67.0093C63.9265 67.2389 64.0358 67.455 64.1304 67.6732C64.2531 67.9561 64.3988 68.238 64.5038 68.524C65.7291 71.8657 69.2324 73.6498 72.538 74.2344C74.2741 74.5413 76.0881 74.5643 77.82 74.2198C78.6001 74.0642 79.3116 73.6842 80.0678 73.5088C81.1516 73.2572 82.1387 73.4191 83.1726 72.7154C84.3137 71.9377 84.9472 71.0316 86.2026 70.4344C86.4356 70.3238 86.6832 70.2528 86.9141 70.1327C87.1055 70.0325 87.274 69.9083 87.4529 69.7955C87.5808 69.7152 87.7036 69.6212 87.8419 69.5575C87.9979 69.4865 88.0489 69.33 88.1425 69.2078C88.5981 68.6138 89.0163 67.9916 89.476 67.4008C89.5603 67.2932 89.6102 67.1669 89.5904 67.0197C89.5759 66.9101 89.5977 66.8151 89.682 66.7191C89.8026 66.5813 89.8942 66.4153 89.9909 66.2576C90.1563 65.9862 90.3227 65.7148 90.4756 65.4371C90.6795 65.0665 90.7637 64.6489 90.9146 64.2575C91.0342 63.9474 91.1122 63.6238 91.2484 63.319C91.3733 63.0402 91.4648 62.7448 91.5605 62.4525C91.6499 62.18 91.7207 61.9023 91.8081 61.6299C91.8382 61.537 91.8819 61.4493 91.91 61.3522C91.9911 61.0776 92.0951 60.8093 92.1877 60.5379C92.2761 60.2769 92.3604 60.0149 92.4488 59.7539C92.5601 59.4261 92.6142 59.0785 92.79 58.7737C92.8607 58.6515 92.8857 58.5242 92.8877 58.3822C92.9085 56.9875 92.8857 55.5938 92.9231 54.1981C92.9782 52.152 92.9075 50.1038 92.9897 48.0576C93.0022 47.7549 92.9866 47.4511 92.9938 47.1484L92.998 47.1494Z\" fill=\"#03C7FD\"/>\n</svg>\n\n    <svg id=\"frame_07\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect width=\"100\" height=\"100\" fill=\"white\"/>\n<path d=\"M77.8881 21.8647C77.5219 20.5039 77.3417 19.1131 77.2015 17.7166C77.1443 17.1435 76.9755 16.6117 76.6565 16.1386C75.9312 15.0623 75.1745 14.0074 74.4635 12.9225C73.8398 11.972 73.0101 11.2816 72.0031 10.7799C71.2463 10.4011 70.4095 10.3053 69.607 10.0852C69.2222 9.97943 68.7887 9.97515 68.4526 9.7879C68.1765 9.63353 67.8947 9.50202 67.6057 9.38624C67.5585 9.36194 67.5127 9.33479 67.4641 9.31049C66.56 8.8588 65.5587 8.74303 64.6003 8.48002C64.1411 8.35423 63.6218 8.34852 63.2213 8.12553C62.3458 7.63669 61.4203 7.33366 60.4547 7.11354C59.7466 6.95202 59.0442 6.95773 58.3433 7.16357C57.6781 7.35939 57.0072 7.53234 56.3449 7.73532C55.92 7.86539 55.4923 7.98974 55.1118 8.24131C55.0302 8.2213 54.9487 8.20129 54.8657 8.18271C54.1576 8.02119 53.4553 8.02691 52.7543 8.23274C52.0891 8.42856 51.4182 8.60152 50.7559 8.80449C50.3196 8.93742 49.879 9.06463 49.4928 9.32907C49.2997 9.462 49.1151 9.60494 48.9349 9.75359C48.6202 9.65783 48.3012 9.57349 47.9779 9.49916C47.2698 9.33765 46.5674 9.34336 45.8665 9.54919C45.2013 9.74502 44.5304 9.91797 43.8681 10.1209C43.4318 10.2539 42.9912 10.3811 42.605 10.6455C42.0943 10.9957 41.6437 11.4145 41.1973 11.8376C40.8741 11.9362 40.5522 12.042 40.2647 12.2393C39.6739 12.6438 39.1803 13.1584 38.6596 13.6386C38.4193 13.8602 38.2148 14.1146 38.0388 14.3919C37.7413 14.6578 37.4566 14.9379 37.1619 15.2095C36.8143 15.5297 36.5339 15.9156 36.3222 16.3473C36.0304 16.9405 35.7314 17.5308 35.4224 18.1154C35.1721 18.5871 34.9575 19.076 34.8688 19.6006C34.8445 19.7435 34.8202 19.8864 34.7973 20.0279C34.7544 20.1094 34.7129 20.1923 34.67 20.2724C34.4197 20.7441 34.2051 21.2329 34.1164 21.7575C33.9619 22.6666 33.8045 23.5771 33.8875 24.5076C33.939 25.0922 33.8718 25.684 33.9934 26.2643C34.1164 31.2886 35.9088 31.6245 35.853 35.601C35.8158 38.2568 32.9391 39.1287 32.0179 42.6121C31.2053 43.6927 30.7118 44.8805 30.5859 46.1784C30.5759 46.1984 30.5645 46.2184 30.5545 46.2398C30.3957 46.5629 30.3356 46.9088 30.2812 47.2547C29.9136 47.775 29.5503 48.2996 29.2684 48.8756C29.0539 49.3116 28.9895 49.7818 28.918 50.2492C28.8093 50.9582 28.7306 51.6729 28.629 52.3833C28.5217 53.1323 28.6204 53.8527 28.8922 54.5545C29.0167 54.8747 29.1511 55.1892 29.2971 55.4979C29.1712 55.7037 29.051 55.9138 28.9452 56.1325C28.7306 56.5685 28.6662 57.0388 28.5947 57.5062C28.486 58.2151 28.4073 58.9298 28.3057 59.6402C28.1984 60.3892 28.2971 61.1096 28.5689 61.8115C28.6004 61.8929 28.6333 61.9744 28.6662 62.0544C28.4659 62.4804 28.4016 62.9378 28.3315 63.3923C28.2228 64.1013 28.1441 64.816 28.0425 65.5264C27.9352 66.2754 28.0339 66.9958 28.3057 67.6976C28.4631 68.105 28.6376 68.5024 28.8321 68.8883C28.6176 69.4972 28.5389 70.1233 28.6204 70.7751C28.7077 71.464 28.7706 72.1558 28.865 72.8434C28.9266 73.2965 28.9823 73.7525 29.1826 74.177C29.2827 74.39 29.3943 74.5958 29.5131 74.7959C29.3671 75.0918 29.2327 75.3934 29.1068 75.7021C28.8321 76.3768 28.7263 77.0715 28.8178 77.7976C28.9051 78.4865 28.968 79.1784 29.0625 79.8659C29.124 80.319 29.1798 80.775 29.38 81.1995C29.6447 81.7612 29.9866 82.2744 30.3342 82.7833C30.3799 83.1192 30.4329 83.4551 30.5816 83.7695C30.8863 84.4185 31.3169 84.9888 31.7089 85.582C31.8891 85.855 32.108 86.0994 32.3555 86.3167C32.5715 86.654 32.8032 86.9813 33.0235 87.3144C33.2838 87.7089 33.6229 88.0491 34.0148 88.3278C34.5556 88.7123 35.092 89.1025 35.6213 89.5013C35.9145 89.7229 36.2178 89.9273 36.5425 90.0916C36.6741 90.2903 36.83 90.4776 37.0246 90.6434C37.4294 90.9879 37.8385 91.3295 38.2319 91.6883C38.6797 92.0956 39.1904 92.3672 39.7812 92.4944C40.3977 92.6259 41.0157 92.7574 41.6308 92.8947C42.0256 92.9833 42.4261 93.0247 42.8267 92.9847C44.2329 92.8403 45.6405 92.8861 47.0466 92.9718C47.6246 93.0076 48.1767 92.9261 48.6974 92.6874C49.8805 92.1442 51.0463 91.5653 52.235 91.0365C53.2764 90.5733 54.0933 89.8629 54.7542 88.9481C55.2505 88.2606 55.4808 87.4487 55.8285 86.6912C55.9944 86.3281 56.0688 85.8993 56.3077 85.5977C56.5051 85.349 56.681 85.0917 56.8412 84.8258C56.8741 84.7829 56.907 84.7415 56.9385 84.6986C57.5322 83.8767 57.8083 82.9062 58.2217 82C58.4205 81.5654 58.5092 81.0537 58.7953 80.6935C59.4204 79.9059 59.8696 79.0397 60.243 78.1206C60.5176 77.446 60.6235 76.7513 60.5319 76.0252C60.4447 75.3362 60.3817 74.6444 60.2873 73.9569C60.2272 73.5152 60.1729 73.0721 59.9855 72.6561C60.0184 72.5789 60.0513 72.5003 60.0842 72.4217C60.3588 71.747 60.4647 71.0524 60.3731 70.3262C60.3517 70.1561 60.3317 69.9846 60.3116 69.8145C60.4504 69.5272 60.5791 69.2356 60.7007 68.9369C61.0011 68.1979 61.1184 67.4346 61.0183 66.6385C60.9224 65.8837 60.8524 65.1247 60.7494 64.37C60.6836 63.8869 60.6235 63.4009 60.4175 62.9449C60.4532 62.8592 60.4904 62.7749 60.5248 62.6877C60.8252 61.9487 60.9425 61.1854 60.8423 60.3892C60.7465 59.6345 60.6764 58.8755 60.5734 58.1208C60.5047 57.6248 60.4447 57.1245 60.2258 56.6586C60.1156 56.4256 59.9926 56.1997 59.8639 55.9796C60.0241 55.6551 60.1714 55.3249 60.3088 54.9862C60.6092 54.2472 60.7265 53.4839 60.6263 52.6878C60.5305 51.933 60.4604 51.174 60.3574 50.4193C60.2887 49.9233 60.2287 49.4231 60.0098 48.9571C59.7194 48.341 59.3446 47.7793 58.9641 47.2204C59.286 42.2262 55.7126 41.1127 55.7126 38.2025C55.7126 35.5667 59.9597 34.5018 60.7565 34.326C60.7994 34.3174 60.8423 34.3088 60.8838 34.2988C61.303 34.2074 61.7192 34.1001 62.1412 34.0258C62.2857 34.0001 62.4273 33.9715 62.5675 33.9386C62.9752 33.92 63.3872 33.87 63.802 33.7814C64.6904 33.5927 65.583 33.4212 66.4713 33.2297C66.8905 33.1382 67.3068 33.031 67.7287 32.9566C68.5899 32.8051 69.3996 32.5436 70.0132 31.8832C70.2092 31.6716 70.4438 31.5702 70.697 31.4615C71.2535 31.2214 71.7885 30.9498 72.2334 30.5596C72.9501 30.4324 73.6238 30.2137 74.1345 29.6634C74.2976 29.4876 74.495 29.4018 74.7067 29.3103C75.4177 29.003 76.09 28.6371 76.5106 27.9424C76.7852 27.4893 77.057 27.0319 77.346 26.5873C77.675 26.0828 77.8624 25.5368 77.8924 24.935C77.9239 24.3075 77.9539 23.6786 77.9911 23.0511C78.0154 22.648 77.9926 22.2478 77.8881 21.8604V21.8647Z\" fill=\"#27C7FE\"/>\n</svg>\n\n    <script>\n      // console.log(Snap)\n    </script>\n    <script src=\"pixi-draw.js\"></script>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3cc3c1bc9a77a30e7ae20",
        "isSelectedFile": false,
        "createdAt": "2023-08-29T18:08:46.816Z",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae20"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3cc3c1bc9a77a30e7ae24",
        "isSelectedFile": false,
        "createdAt": "2023-08-29T18:08:46.816Z",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae24"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y) {\n    super(x, y);\n    this.r = 2;\n    physics.addParticle(this);\n    //console.log(this)\n  }\n\n  show() {\n    fill(252, 238, 33);\n    strokeWeight(1);\n    circle(this.x, this.y, this.r * 12);\n\n    strokeWeight(this.r * 4);\n    point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3cc3c1bc9a77a30e7ae21",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae21"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show() {\n    strokeWeight(1);\n    stroke(0, 127);\n    line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3cc3c1bc9a77a30e7ae23",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3cc3c1bc9a77a30e7ae23"
      },
      {
        "name": "pixi-draw.js",
        "content": "/* global PIXI, SMALL_CANVAS_SIZE, LARGE_CANVAS_SIZE, BG_COLOR_HEXCODE, resizeWithCSS  resizeWithCSSPixelated */\n\nfunction pixiRender(parentID, resizeCallback) {\n  let parent = document.getElementById(parentID);\n  let s = SMALL_CANVAS_SIZE\n  let app = new PIXI.Application({\n    width: s,\n    height: s,\n  });\n\n  PIXI.settings.RESOLUTION = window.devicePixelRatio;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n  parent.appendChild(app.view);\n  \n  let obj = new PIXI.Graphics();\n  \n  obj.beginFill(BG_COLOR_HEXCODE);\n  obj.drawRect(0, 0, s, s);\n  obj.endFill();\n  \n  obj.lineStyle(1, 0x000000);\n  obj.drawCircle(s/2, s/2, s/4);\n  obj.drawCircle(s/2, s/2, s/8);\n\n  \n  const path = [0,s/2, s/2, 0, s, s/2, s/2, s];\n  obj.drawPolygon(path);\n  \n  // Add it to the stage to render\n  app.stage.addChild(obj);\n  \n  if (resizeCallback) {\n    \n    resizeCallback(app.view);\n  }\n}\n\n// pixiRender(\"pixi-1\");\n// pixiRender(\"pixi-2\", resizeWithCSS);\n// pixiRender(\"pixi-3\", resizeWithCSSPixelated);\n",
        "children": [],
        "fileType": "file",
        "_id": "64e3d134760cc6001a8a03c5",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e3d134760cc6001a8a03c5"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "64e7a79fa99a07001ce4b4cc",
          "64e76f2dafcc79001b400cae",
          "64e79bf3366212001a490e50",
          "64e777b5d01b36001ad65743",
          "64e7b00c366212001a49afc4"
        ],
        "fileType": "folder",
        "_id": "64e76f1fafcc79001b400bf5",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e76f1fafcc79001b400bf5"
      },
      {
        "name": "face",
        "content": "",
        "children": [
          "64e77060f34bc2001c0fd35c",
          "64e77060f34bc2001c0fd356",
          "64e76f5422fc10001a3c572f",
          "64e770604a83d2001a895c18",
          "64e79993366212001a48f776",
          "64e799934d44fd001ab7a66d",
          "64e7999354538b001c3c283a",
          "64e799944d44fd001ab7a677"
        ],
        "fileType": "folder",
        "_id": "64e76f2dafcc79001b400cae",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e76f2dafcc79001b400cae"
      },
      {
        "name": "face_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e76f5422fc10001a3c572f",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/caf6e549-11ac-49b5-b75a-ea3e25995a56.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e76f5422fc10001a3c572f"
      },
      {
        "name": "face_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e77060f34bc2001c0fd356",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/fb76221a-04cd-4c9b-9048-9876ed4335a5.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e77060f34bc2001c0fd356"
      },
      {
        "name": "face_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e77060f34bc2001c0fd35c",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/8aaa3696-2609-4dc3-8d96-c419c2edf52a.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e77060f34bc2001c0fd35c"
      },
      {
        "name": "face_04.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e770604a83d2001a895c18",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/e0455448-d019-4394-8108-fea9a696be3f.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e770604a83d2001a895c18"
      },
      {
        "name": "frame",
        "content": "",
        "children": [
          "64e777c1d01b36001ad657ee"
        ],
        "fileType": "folder",
        "_id": "64e777b5d01b36001ad65743",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e777b5d01b36001ad65743"
      },
      {
        "name": "frame_03.svg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e777c1d01b36001ad657ee",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/af538ac3-ddff-4a32-8469-83518bd09dea.svg",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e777c1d01b36001ad657ee"
      },
      {
        "name": "snap.svg-min.js",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e778d2d01b36001ad66040",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e778d2d01b36001ad66040"
      },
      {
        "name": "face_06.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e799934d44fd001ab7a66d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/695fef39-de47-425b-9bbf-2f01a8e88870.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e799934d44fd001ab7a66d"
      },
      {
        "name": "face_05.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79993366212001a48f776",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/44b8da9d-40e1-4d32-af9b-c9a88041fe2b.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79993366212001a48f776"
      },
      {
        "name": "face_07.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7999354538b001c3c283a",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/93a58e3a-909a-4446-84e8-2e4146c0f2df.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7999354538b001c3c283a"
      },
      {
        "name": "face_08.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e799944d44fd001ab7a677",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/1a93ff35-8054-4ba7-aa6c-d52e24828888.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e799944d44fd001ab7a677"
      },
      {
        "name": "feet",
        "content": "",
        "children": [
          "64e79c08366212001a490edd",
          "64e79c08366212001a490ee2",
          "64e79c0854538b001c3c3d5b",
          "64e79c084d44fd001ab7ba55",
          "64e79c084d44fd001ab7ba52",
          "64e79c084d44fd001ab7ba4d"
        ],
        "fileType": "folder",
        "_id": "64e79bf3366212001a490e50",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79bf3366212001a490e50"
      },
      {
        "name": "feet_06.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c084d44fd001ab7ba4d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/35091bfb-7bb6-462d-96eb-59da22560159.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c084d44fd001ab7ba4d"
      },
      {
        "name": "feet_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c08366212001a490edd",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/1b4a607c-2d07-4c2b-88f2-cb79a4202d31.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c08366212001a490edd"
      },
      {
        "name": "feet_05.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c084d44fd001ab7ba52",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/565cc1a3-d006-43dc-be41-c24a96ab5d5d.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c084d44fd001ab7ba52"
      },
      {
        "name": "feet_04.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c084d44fd001ab7ba55",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/e5da3a36-78e0-4554-8843-cd0b60fe38d4.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c084d44fd001ab7ba55"
      },
      {
        "name": "feet_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c08366212001a490ee2",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/4e9d1c28-4cef-42ab-8925-e902306eaf28.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c08366212001a490ee2"
      },
      {
        "name": "feet_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e79c0854538b001c3c3d5b",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/3daf3bc7-b1ab-41a4-b2f3-1769d73d255f.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e79c0854538b001c3c3d5b"
      },
      {
        "name": "arm",
        "content": "",
        "children": [
          "64e7a7aba99a07001ce4b517",
          "64e7ae20366212001a499ee9",
          "64e7ae2054538b001c3cc98a",
          "64e7ae2054538b001c3cc994",
          "64e7a7ab366212001a496b13",
          "64e7ae20366212001a499eef",
          "64e7ae2054538b001c3cc98d",
          "64e7ae20366212001a499f05"
        ],
        "fileType": "folder",
        "_id": "64e7a79fa99a07001ce4b4cc",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7a79fa99a07001ce4b4cc"
      },
      {
        "name": "arm_r_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7a7ab366212001a496b13",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/7d45a08d-3a7a-46d2-850e-09a4e23e9328.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7a7ab366212001a496b13"
      },
      {
        "name": "arm_l_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7a7aba99a07001ce4b517",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/7ccee4f7-e87f-40f6-9e1f-e99b7c929009.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7a7aba99a07001ce4b517"
      },
      {
        "name": "arm_l_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae20366212001a499ee9",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/756a937b-0da5-4443-8225-942a988d935b.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae20366212001a499ee9"
      },
      {
        "name": "arm_r_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae20366212001a499eef",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/ea09205d-6b8c-492b-861a-cd2a1a56588c.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae20366212001a499eef"
      },
      {
        "name": "arm_l_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae2054538b001c3cc98a",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/3c9d156d-0d8e-4946-906f-70cd2e00ffa0.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae2054538b001c3cc98a"
      },
      {
        "name": "arm_r_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae2054538b001c3cc98d",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/745ab347-9c10-43f7-968c-0a53bebd5dfc.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae2054538b001c3cc98d"
      },
      {
        "name": "arm_l_04.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae2054538b001c3cc994",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/36ad01d5-3599-4b12-985d-87108886f960.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae2054538b001c3cc994"
      },
      {
        "name": "arm_r_04.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7ae20366212001a499f05",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/690a5fb3-2518-4b67-a57f-11b352cd0bdb.png",
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "isSelectedFile": false,
        "id": "64e7ae20366212001a499f05"
      },
      {
        "name": "wing",
        "content": "",
        "children": [
          "64e7b01954538b001c3cd976",
          "64e7b0193dbda1001a2cb4c0",
          "64e7b019366212001a49b019",
          "64e7b01954538b001c3cd97b",
          "64e7b01954538b001c3cd980",
          "64e7b019366212001a49b01e"
        ],
        "fileType": "folder",
        "_id": "64e7b00c366212001a49afc4",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b00c366212001a49afc4"
      },
      {
        "name": "wing_l_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b01954538b001c3cd976",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/3aa68d35-c2e2-452d-bbbb-c5d4382c89df.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b01954538b001c3cd976"
      },
      {
        "name": "wing_l_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b0193dbda1001a2cb4c0",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/8df1c565-195c-40cc-981b-2f8ccb3de886.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b0193dbda1001a2cb4c0"
      },
      {
        "name": "wing_l_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b019366212001a49b019",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/fc2d531c-dc6b-47f1-bcb3-2bce5715301a.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b019366212001a49b019"
      },
      {
        "name": "wing_r_01.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b01954538b001c3cd97b",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/80fcf886-dd47-4c55-a674-a7551714e3b5.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b01954538b001c3cd97b"
      },
      {
        "name": "wing_r_02.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b01954538b001c3cd980",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/932ee72f-446e-44cc-8a1f-eb279dfe0ca9.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b01954538b001c3cd980"
      },
      {
        "name": "wing_r_03.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64e7b019366212001a49b01e",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/bdd60d08-24a7-45e6-9dd3-85177babc9a3.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-29T18:08:46.816Z",
        "createdAt": "2023-08-29T18:08:46.816Z",
        "id": "64e7b019366212001a49b01e"
      }
    ],
    "createdAt": "2023-08-21T20:42:37.934Z",
    "updatedAt": "2023-08-29T18:08:46.816Z",
    "id": "eBgpI-7vg"
  },
  {
    "name": "Soft Body Pixel Character and Grid",
    "_id": "75dB8LSC4",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64f0e0e3d2a27ff1c2108e5f",
          "64f0e0e3d2a27ff1c2108e60",
          "64f0e0e3d2a27ff1c2108e61",
          "64f0e0e3d2a27ff1c2108e62",
          "64f0e0e3d2a27ff1c2108e63",
          "64f0e0e3d2a27ff1c2108e64",
          "64f0e0e3d2a27ff1c2108e65"
        ],
        "fileType": "folder",
        "_id": "64f0e0e3d2a27ff1c2108e5e",
        "isSelectedFile": false,
        "createdAt": "2024-01-18T05:02:30.747Z",
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e5e"
      },
      {
        "name": "sketch.js",
        "content": "// 改編自Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\n// 引入物理引擎函式庫(Toxiclibs.js)\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\nlet particles = []; // 存取點點們的變數\nlet springs = []; // 存取連結線們的變數\n\nlet shapeGraphic; // 畫shape的圖層\nlet quadrantDiagramGraphic; // 畫像線圖的圖層\nlet webGLGraphic; // 畫webGL效果的圖層\nlet pixelShader; // 畫套用的shader(這邊為pixel)效果\n\nlet screenShotBtn; // 存取圖片的按鈕\nlet modeSelect; // 選擇直線或曲線的選單\nlet bodyColorPicker; // 選擇身體/shape的填色的color picker\nlet bodyStrokeColorPicker; // 選擇身體邊框顏色的color picker\nlet backgroundColorPicker; // 選擇背景色的color picker\nlet textColorPicker; // 選擇文字,象限線條顏色的color picker\nlet strokeWeightSlider; // 調整邊框粗細的slider\nlet pixelSliderX; // 調整X軸方向的pixel效果\nlet pixelSliderY; // 調整Y軸方向的pixel效果\nlet showGrid; // 勾選是否顯示像線圖\nlet showSprings; // 勾選是否顯示連結線\nlet showShapePoints; // 勾選是否顯示shape的點點及編號\nlet showShape; // 勾選是否顯示形狀\n\n// 提早讀取\nfunction preload() {\n  pixelShader = loadShader(\"shader.vert\", \"shader.frag\");\n}\n\n// p5的環境設置\nfunction setup() {\n  createCanvas(800, 800); // 新增一個800x800的canvas\n  shapeGraphic = createGraphics(width, height); // 宣告shapeGraphic圖層\n  quadrantDiagramGraphic = createGraphics(width, height); // 宣告quadrantDiagramGraphic圖層\n  webGLGraphic = createGraphics(width, height, WEBGL); // 宣告webGLGraphic圖層, 且為webGL模式\n\n  screenShotBtn = createButton(\"存取圖片\"); // 宣告名為存取圖片的按鈕\n  screenShotBtn.mousePressed(() => saveCanvas(\"myCanvas\", \"jpg\")); // 當滑鼠按下screenShotBtn時, 下載Canvas\n  modeSelect = createSelect(); // 宣告一個選單\n  modeSelect.option(\"直線\"); // 新增直線選項給這個選單\n  modeSelect.option(\"曲線\"); // 新增曲線選項給這個選單\n  bodyColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  bodyStrokeColorPicker = createColorPicker(\"#ff00ff\"); // 宣告color picker, 預設顏色為#ff00ff\n  backgroundColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  textColorPicker = createColorPicker(\"#000\"); // 宣告color picker, 預設顏色為#000\n  strokeWeightSlider = createSlider(2, 20, 4, 1); // 宣告slider, 最小值2, 最大值20, 預設值4, 增減的步數為1\n  pixelSliderX = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  pixelSliderY = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  showShape = createCheckbox(\"顯示shape\", false); // 宣告名為顯示shape的checkbox, 預設值為否\n  showGrid = createCheckbox(\"顯示象限\", true); // 宣告名為顯示象限的checkbox, 預設值為是\n  showShapePoints = createCheckbox(\"顯示連結點\", true); // 宣告名為顯示連結點的checkbox, 預設值為是\n  showSprings = createCheckbox(\"顯示連結線\", false); // 宣告名為顯示連結線的checkbox,預設值為否\n\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width / 2, -height / 2, width, height);\n  physics.setWorldBounds(bounds);\n\n  // 依序存入各個點點及其座標\n  \n  // particles.push(new Particle(0, 0, \"🗒️\")) // 筆記本\n  // particles.push(new Particle(-300, -300, \"💍\")) // 銀戒指\n  // particles.push(new Particle(350, 0, \"%\")) //蛋黃派\n  // particles.push(new Particle(-400, 400, \"📱\")) //手機殼\n  // particles.push(new Particle(213, -25, \"@\")) // 眼鏡盒\n  // particles.push(new Particle(50, -350, \"!\")) //陶瓷杯\n  // particles.push(new Particle(350, 150, \"3\")) //線香\n  // particles.push(new Particle(50, 100, \"✏️\")) //繪圖筆\n  // particles.push(new Particle(110, -116, \"🍼\")) //水壺\n  // particles.push(new Particle(350, -350, \"@\")) //粉紅水晶柱\n  // particles.push(new Particle(-200, -400, \"🎒\")) //辣包\n  \n  particles.push(new Particle(-150, -100)); // 0 號點點: 位置(-150, -100)\n  particles.push(new Particle(-20, -50)); // 1 號點點: 位置(-20, -50)\n  particles.push(new Particle(80, -80)); // 2 號點點: 位置(80, -80)\n  particles.push(new Particle(30, 20)); // 3 號點點: 位置(30, 20)\n  particles.push(new Particle(80, 120)); // 4 號點點: 位置(80, 120)\n  particles.push(new Particle(-20, 80)); // 5 號點點: 位置(-20, 80)\n  particles.push(new Particle(-120, 120)); // 6 號點點: 位置(-120, 120)\n  particles.push(new Particle(-70, 20)); // 7 號點點: 位置(-70, 20)\n\n  // 將點點們彼此新增soft body的連結線\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n}\n\n// p5 canvas每一個frame在做的事\nfunction draw() {\n  //clear()\n  webGLGraphic.shader(pixelShader);\n  pixelShader.setUniform(\"mouse\", [pixelSliderX.value(), pixelSliderY.value()]);\n  pixelShader.setUniform(\"tex\", shapeGraphic);\n  webGLGraphic.rect(-width / 2, -height / 2, width, height);\n\n  shapeGraphic.background(255);\n\n  image(webGLGraphic, 0, 0);\n\n  if (showShape.checked()) {\n    // 如果有勾選showShape\n    drawShape(shapeGraphic); // 在shapeGraphic圖層畫形狀\n  }\n\n  if (showGrid.checked()) {\n    // 如果有勾選showGrid\n    drawGrid(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫像線圖\n  }\n\n  if (showSprings.checked()) {\n    // 如果有勾選showSprings\n    drawSprings(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫連結線\n  }\n\n  if (showShapePoints.checked()) {\n    // 如果有勾選showShapePoints\n    drawShapePoints(quadrantDiagramGraphic); //在quadrantDiagramGraphic標註點點們\n  }\n}\n\n// 在放入函示的graphic上畫shape\nfunction drawShape(g) {\n  g.background(backgroundColorPicker.color());\n  g.push();\n  g.translate(width / 2, height / 2);\n  physics.update();\n\n  g.stroke(bodyStrokeColorPicker.color());\n  if (showSprings.checked())\n    g.stroke([\n      red(bodyStrokeColorPicker.color()),\n      green(bodyStrokeColorPicker.color()),\n      blue(bodyStrokeColorPicker.color()),\n      100,\n    ]);\n\n  g.fill(bodyColorPicker.color());\n\n  if (showSprings.checked())\n    g.fill([\n      red(bodyColorPicker.color()),\n      green(bodyColorPicker.color()),\n      blue(bodyColorPicker.color()),\n      100,\n    ]);\n\n  g.strokeWeight(strokeWeightSlider.value());\n\n  if (modeSelect.value() === \"直線\") {\n    g.beginShape(); // 開始將點點們變成Shape\n    for (let particle of particles) {\n      g.vertex(particle.x, particle.y);\n    }\n    g.endShape(CLOSE);\n  }\n\n  if (modeSelect.value() === \"曲線\") {\n    g.beginShape();\n    for (let p of particles) {\n      g.curveVertex(p.x, p.y);\n    }\n    g.curveVertex(particles[0].x, particles[0].y);\n    g.curveVertex(particles[1].x, particles[1].y);\n    g.curveVertex(particles[2].x, particles[2].y);\n    g.endShape();\n  }\n\n  if (mouseIsPressed) {\n    if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n      particles[0].lock();\n      particles[0].x = mouseX - width/2;\n      particles[0].y = mouseY - height/2;\n      particles[0].unlock();\n    }\n  }\n  g.pop();\n}\n\n// 在放入的graphic上畫像線圖\nfunction drawGrid(graphic) {\n  graphic.clear(); //background(\"yellow\")\n\n  graphic.push();\n  // graphic.textAlign(LEFT, TOP)\n  graphic.stroke(textColorPicker.color());\n  graphic.strokeWeight(1);\n  graphic.fill(textColorPicker.color());\n  graphic.translate(width / 2, height / 2);\n  graphic.line(-width / 2, 0, width / 2, 0); // X軸\n  graphic.line(0, -height / 2, 0, height / 2); // Y軸\n  graphic.textSize(12);\n  graphic.noStroke();\n  for (let x = -width / 2; x < width / 2; x += 50) {\n    graphic.line(x, 0, x, 5);\n    graphic.text(x, x, 10);\n  }\n\n  for (let y = -height / 2; y < height / 2; y += 50) {\n    graphic.line(0, y, 5, y);\n    graphic.text(y, 0, y);\n  }\n  graphic.push();\n  graphic.textAlign(RIGHT);\n  graphic.text(\"Release釋放\", width / 2, 0);\n  graphic.textAlign(LEFT);\n  graphic.text(\"Protect保護\", -width / 2, 0);\n  graphic.text(\"Collect收納\", 0, height / 2);\n  graphic.textAlign(LEFT, TOP);\n  graphic.text(\"Action行動\", 0, -height / 2);\n  graphic.pop();\n\n  graphic.pop();\n\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫點點和編號\nfunction drawShapePoints(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  particles.forEach((particle, index) => {\n    graphic.push();\n    //graphic.strokeWeight(5)\n    //graphic.point(particle.x, particle.y)\n    graphic.noFill();\n    graphic.stroke(textColorPicker.color());\n    //graphic.circle(particle.x, particle.y, 15);\n    graphic.fill(textColorPicker.color());\n    graphic.noStroke();\n    graphic.textSize(15);\n    graphic.textAlign(CENTER, CENTER);\n    graphic.text(particle.s, particle.x, particle.y);\n    graphic.pop();\n  });\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫連結線\nfunction drawSprings(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  // graphic.stroke([\n  //     red(bodyStrokeColorPicker.color()),\n  //     green(bodyStrokeColorPicker.color()),\n  //     blue(bodyStrokeColorPicker.color()),\n  //     100]\n  //   );\n\n  for (let spring of springs) {\n    graphic.stroke(textColorPicker.color());\n    graphic.strokeWeight(1);\n    spring.show(graphic);\n  }\n\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\nfunction keyTyped() {\n  if (key === \"s\" || key === \"S\") {\n    saveCanvas(\"myCanvas\", \"jpg\");\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e63",
        "isSelectedFile": true,
        "createdAt": "2024-01-18T05:02:30.747Z",
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e63"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e5f",
        "isSelectedFile": false,
        "createdAt": "2024-01-18T05:02:30.747Z",
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e5f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e65",
        "isSelectedFile": false,
        "createdAt": "2024-01-18T05:02:30.747Z",
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e65"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y, s) {\n    super(x, y);\n    this.r = 2;\n    this.s = s\n    physics.addParticle(this);\n  }\n\n  show(g) {\n    g.fill(252, 238, 33);\n    g.strokeWeight(4);\n    g.circle(this.x, this.y, this.r * 12);\n\n    g.strokeWeight(this.r * 4);\n    g.point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e60",
        "isSelectedFile": false,
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "createdAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e60"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show(g) {\n    g.strokeWeight(1);\n    //g.stroke(0, 127);\n    g.line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e64",
        "isSelectedFile": false,
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "createdAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e64"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e62",
        "isSelectedFile": false,
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "createdAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e62"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "64f0e0e3d2a27ff1c2108e61",
        "isSelectedFile": false,
        "updatedAt": "2024-01-18T05:02:30.747Z",
        "createdAt": "2024-01-18T05:02:30.747Z",
        "id": "64f0e0e3d2a27ff1c2108e61"
      }
    ],
    "createdAt": "2023-08-31T18:50:11.543Z",
    "updatedAt": "2024-01-18T05:02:30.747Z",
    "id": "75dB8LSC4"
  },
  {
    "name": "Soft Body Pixel Character and Grid copy",
    "_id": "0XggHWxBn",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6500b39372a1aa01bc6de84d",
          "6500b39372a1aa01bc6de84e",
          "6500b39372a1aa01bc6de84f",
          "6500b39372a1aa01bc6de850",
          "6500b39372a1aa01bc6de851",
          "6500b39372a1aa01bc6de852",
          "6500b39372a1aa01bc6de853"
        ],
        "fileType": "folder",
        "_id": "6500b39372a1aa01bc6de84c",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T15:50:30.022Z",
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de84c"
      },
      {
        "name": "sketch.js",
        "content": "// 改編自Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\n// 引入物理引擎函式庫(Toxiclibs.js)\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\nlet particles = []; // 存取點點們的變數\nlet springs = []; // 存取連結線們的變數\n\nlet shapeGraphic; // 畫shape的圖層\nlet quadrantDiagramGraphic; // 畫像線圖的圖層\nlet webGLGraphic; // 畫webGL效果的圖層\nlet pixelShader; // 畫套用的shader(這邊為pixel)效果\n\nlet screenShotBtn; // 存取圖片的按鈕\nlet modeSelect; // 選擇直線或曲線的選單\nlet bodyColorPicker; // 選擇身體/shape的填色的color picker\nlet bodyStrokeColorPicker; // 選擇身體邊框顏色的color picker\nlet backgroundColorPicker; // 選擇背景色的color picker\nlet textColorPicker; // 選擇文字,象限線條顏色的color picker\nlet strokeWeightSlider; // 調整邊框粗細的slider\nlet pixelSliderX; // 調整X軸方向的pixel效果\nlet pixelSliderY; // 調整Y軸方向的pixel效果\nlet showGrid; // 勾選是否顯示像線圖\nlet showSprings; // 勾選是否顯示連結線\nlet showShapePoints; // 勾選是否顯示shape的點點及編號\nlet showShape; // 勾選是否顯示形狀\n\n// 提早讀取\nfunction preload() {\n  pixelShader = loadShader(\"shader.vert\", \"shader.frag\");\n}\n\n// p5的環境設置\nfunction setup() {\n  createCanvas(800, 800); // 新增一個800x800的canvas\n  shapeGraphic = createGraphics(width, height); // 宣告shapeGraphic圖層\n  quadrantDiagramGraphic = createGraphics(width, height); // 宣告quadrantDiagramGraphic圖層\n  webGLGraphic = createGraphics(width, height, WEBGL); // 宣告webGLGraphic圖層, 且為webGL模式\n\n  screenShotBtn = createButton(\"存取圖片\"); // 宣告名為存取圖片的按鈕\n  screenShotBtn.mousePressed(() => saveCanvas(\"myCanvas\", \"jpg\")); // 當滑鼠按下screenShotBtn時, 下載Canvas\n  modeSelect = createSelect(); // 宣告一個選單\n  modeSelect.option(\"直線\"); // 新增直線選項給這個選單\n  modeSelect.option(\"曲線\"); // 新增曲線選項給這個選單\n  bodyColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  bodyStrokeColorPicker = createColorPicker(\"#ff00ff\"); // 宣告color picker, 預設顏色為#ff00ff\n  backgroundColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  textColorPicker = createColorPicker(\"#000\"); // 宣告color picker, 預設顏色為#000\n  strokeWeightSlider = createSlider(2, 20, 4, 1); // 宣告slider, 最小值2, 最大值20, 預設值4, 增減的步數為1\n  pixelSliderX = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  pixelSliderY = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  showShape = createCheckbox(\"顯示shape\", false); // 宣告名為顯示shape的checkbox, 預設值為否\n  showGrid = createCheckbox(\"顯示象限\", true); // 宣告名為顯示象限的checkbox, 預設值為是\n  showShapePoints = createCheckbox(\"顯示連結點\", true); // 宣告名為顯示連結點的checkbox, 預設值為是\n  showSprings = createCheckbox(\"顯示連結線\", false); // 宣告名為顯示連結線的checkbox,預設值為否\n\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width / 2, -height / 2, width, height);\n  physics.setWorldBounds(bounds);\n\n  // 依序存入各個點點及其座標\n  \n  // particles.push(new Particle(0, 0, \"🗒️\")) // 筆記本\n  // particles.push(new Particle(-300, -300, \"💍\")) // 銀戒指\n  // particles.push(new Particle(350, 0, \"%\")) //蛋黃派\n  // particles.push(new Particle(-400, 400, \"📱\")) //手機殼\n  // particles.push(new Particle(213, -25, \"@\")) // 眼鏡盒\n  // particles.push(new Particle(50, -350, \"!\")) //陶瓷杯\n  // particles.push(new Particle(350, 150, \"3\")) //線香\n  // particles.push(new Particle(50, 100, \"✏️\")) //繪圖筆\n  // particles.push(new Particle(110, -116, \"🍼\")) //水壺\n  // particles.push(new Particle(350, -350, \"@\")) //粉紅水晶柱\n  // particles.push(new Particle(-200, -400, \"🎒\")) //辣包\n  \n  // particles.push(new Particle(-250, -200)); // 0 號點點: 位置(-150, -100)\n  // particles.push(new Particle(-100, -50)); // 1 號點點: 位置(-20, -50)\n  // particles.push(new Particle(180, -180)); // 2 號點點: 位置(80, -80)\n  // particles.push(new Particle(130, 20)); // 3 號點點: 位置(30, 20)\n  // particles.push(new Particle(180, 120)); // 4 號點點: 位置(80, 120)\n  // particles.push(new Particle(-120, 0)); // 5 號點點: 位置(-20, 80)\n  // particles.push(new Particle(-300, 200)); // 6 號點點: 位置(-120, 120)\n  // particles.push(new Particle(-250, 0)); // 7 號點點: 位置(-70, 20)\n  \n  particles.push(new Particle(-120, -80));\n  particles.push(new Particle(-70, -80));\n  particles.push(new Particle(-20, -80));\n  particles.push(new Particle(30, -80));\n  particles.push(new Particle(80, -80));\n  particles.push(new Particle(30, 20));\n  particles.push(new Particle(80, 120));\n  particles.push(new Particle(30, 120));\n  particles.push(new Particle(-20, 120));\n  particles.push(new Particle(-70, 120));\n  particles.push(new Particle(-120, 120));\n  particles.push(new Particle(-70, 20));\n\n  // 將點點們彼此新增soft body的連結線\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n}\n\n// p5 canvas每一個frame在做的事\nfunction draw() {\n  //clear()\n  webGLGraphic.shader(pixelShader);\n  pixelShader.setUniform(\"mouse\", [pixelSliderX.value(), pixelSliderY.value()]);\n  pixelShader.setUniform(\"tex\", shapeGraphic);\n  webGLGraphic.rect(-width / 2, -height / 2, width, height);\n\n  shapeGraphic.background(255);\n\n  image(webGLGraphic, 0, 0);\n\n  if (showShape.checked()) {\n    // 如果有勾選showShape\n    drawShape(shapeGraphic); // 在shapeGraphic圖層畫形狀\n  }\n\n  if (showGrid.checked()) {\n    // 如果有勾選showGrid\n    drawGrid(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫像線圖\n  }\n\n  if (showSprings.checked()) {\n    // 如果有勾選showSprings\n    drawSprings(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫連結線\n  }\n\n  if (showShapePoints.checked()) {\n    // 如果有勾選showShapePoints\n    drawShapePoints(quadrantDiagramGraphic); //在quadrantDiagramGraphic標註點點們\n  }\n}\n\n// 在放入函示的graphic上畫shape\nfunction drawShape(g) {\n  g.background(backgroundColorPicker.color());\n  g.push();\n  g.translate(width / 2, height / 2);\n  physics.update();\n\n  g.stroke(bodyStrokeColorPicker.color());\n  if (showSprings.checked())\n    g.stroke([\n      red(bodyStrokeColorPicker.color()),\n      green(bodyStrokeColorPicker.color()),\n      blue(bodyStrokeColorPicker.color()),\n      100,\n    ]);\n\n  g.fill(bodyColorPicker.color());\n\n  if (showSprings.checked())\n    g.fill([\n      red(bodyColorPicker.color()),\n      green(bodyColorPicker.color()),\n      blue(bodyColorPicker.color()),\n      100,\n    ]);\n\n  g.strokeWeight(strokeWeightSlider.value());\n\n  if (modeSelect.value() === \"直線\") {\n    g.beginShape(); // 開始將點點們變成Shape\n    for (let particle of particles) {\n      g.vertex(particle.x, particle.y);\n    }\n    g.endShape(CLOSE);\n  }\n\n  if (modeSelect.value() === \"曲線\") {\n    g.beginShape();\n    for (let p of particles) {\n      g.curveVertex(p.x, p.y);\n    }\n    g.curveVertex(particles[0].x, particles[0].y);\n    g.curveVertex(particles[1].x, particles[1].y);\n    g.curveVertex(particles[2].x, particles[2].y);\n    g.endShape();\n  }\n\n  if (mouseIsPressed) {\n    if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n      particles[0].lock();\n      particles[0].x = mouseX - width/2;\n      particles[0].y = mouseY - height/2;\n      particles[0].unlock();\n    }\n  }\n  g.pop();\n}\n\n// 在放入的graphic上畫像線圖\nfunction drawGrid(graphic) {\n  graphic.clear(); //background(\"yellow\")\n\n  graphic.push();\n  // graphic.textAlign(LEFT, TOP)\n  graphic.stroke(textColorPicker.color());\n  graphic.strokeWeight(1);\n  graphic.fill(textColorPicker.color());\n  graphic.translate(width / 2, height / 2);\n  graphic.line(-width / 2, 0, width / 2, 0); // X軸\n  graphic.line(0, -height / 2, 0, height / 2); // Y軸\n  graphic.textSize(12);\n  graphic.noStroke();\n  for (let x = -width / 2; x < width / 2; x += 50) {\n    graphic.line(x, 0, x, 5);\n    graphic.text(x, x, 10);\n  }\n\n  for (let y = -height / 2; y < height / 2; y += 50) {\n    graphic.line(0, y, 5, y);\n    graphic.text(y, 0, y);\n  }\n  graphic.push();\n  graphic.textAlign(RIGHT);\n  graphic.text(\"Release釋放\", width / 2, 0);\n  graphic.textAlign(LEFT);\n  graphic.text(\"Protect保護\", -width / 2, 0);\n  graphic.text(\"Collect收納\", 0, height / 2);\n  graphic.textAlign(LEFT, TOP);\n  graphic.text(\"Action行動\", 0, -height / 2);\n  graphic.pop();\n\n  graphic.pop();\n\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫點點和編號\nfunction drawShapePoints(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  particles.forEach((particle, index) => {\n    graphic.push();\n    //graphic.strokeWeight(5)\n    //graphic.point(particle.x, particle.y)\n    graphic.noFill();\n    graphic.stroke(textColorPicker.color());\n    //graphic.circle(particle.x, particle.y, 15);\n    graphic.fill(textColorPicker.color());\n    graphic.noStroke();\n    graphic.textSize(15);\n    graphic.textAlign(CENTER, CENTER);\n    graphic.text(index, particle.x, particle.y);\n    graphic.pop();\n  });\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫連結線\nfunction drawSprings(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  // graphic.stroke([\n  //     red(bodyStrokeColorPicker.color()),\n  //     green(bodyStrokeColorPicker.color()),\n  //     blue(bodyStrokeColorPicker.color()),\n  //     100]\n  //   );\n\n  for (let spring of springs) {\n    graphic.stroke(textColorPicker.color());\n    graphic.strokeWeight(1);\n    spring.show(graphic);\n  }\n\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\nfunction keyTyped() {\n  if (key === \"s\" || key === \"S\") {\n    saveCanvas(\"myCanvas\", \"jpg\");\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de851",
        "isSelectedFile": true,
        "createdAt": "2024-01-03T15:50:30.022Z",
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de851"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de84d",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T15:50:30.022Z",
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de84d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de853",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T15:50:30.022Z",
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de853"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y, s) {\n    super(x, y);\n    this.r = 2;\n    this.s = s\n    physics.addParticle(this);\n  }\n\n  show(g) {\n    g.fill(252, 238, 33);\n    g.strokeWeight(4);\n    g.circle(this.x, this.y, this.r * 12);\n\n    g.strokeWeight(this.r * 4);\n    g.point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de84e",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "createdAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de84e"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show(g) {\n    g.strokeWeight(1);\n    //g.stroke(0, 127);\n    g.line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de852",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "createdAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de852"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de850",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "createdAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de850"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "6500b39372a1aa01bc6de84f",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T15:50:30.022Z",
        "createdAt": "2024-01-03T15:50:30.022Z",
        "id": "6500b39372a1aa01bc6de84f"
      }
    ],
    "createdAt": "2023-09-12T18:53:08.065Z",
    "updatedAt": "2024-01-03T15:50:30.022Z",
    "id": "0XggHWxBn"
  },
  {
    "name": "Soft Body Pixel Character and Grid copy copy",
    "_id": "wMsna464M",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65958253d1cfb5718f8b7553",
          "65958253d1cfb5718f8b7554",
          "65958253d1cfb5718f8b7555",
          "65958253d1cfb5718f8b7556",
          "65958253d1cfb5718f8b7557",
          "65958253d1cfb5718f8b7558",
          "65958253d1cfb5718f8b7559"
        ],
        "fileType": "folder",
        "_id": "65958253d1cfb5718f8b7552",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T17:07:00.895Z",
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7552"
      },
      {
        "name": "sketch.js",
        "content": "// 改編自Coding Train / Daniel Shiffman: https://thecodingtrain.com/challenges/177-soft-body-character\n\n// 引入物理引擎函式庫(Toxiclibs.js)\nconst { VerletPhysics2D, VerletParticle2D, VerletSpring2D } = toxi.physics2d;\nconst { GravityBehavior } = toxi.physics2d.behaviors;\nconst { Vec2D, Rect } = toxi.geom;\n\nlet physics;\nlet particles = []; // 存取點點們的變數\nlet springs = []; // 存取連結線們的變數\nlet shapeGraphics = []\nlet testG\nlet shapeGraphic; // 畫shape的圖層\nlet quadrantDiagramGraphic; // 畫像線圖的圖層\nlet webGLGraphic; // 畫webGL效果的圖層\nlet webGLGraphics = []\nlet pixelShader; // 畫套用的shader(這邊為pixel)效果\nlet pixelShaders = []\n\nlet screenShotBtn; // 存取圖片的按鈕\nlet modeSelect; // 選擇直線或曲線的選單\nlet bodyColorPicker; // 選擇身體/shape的填色的color picker\nlet bodyStrokeColorPicker; // 選擇身體邊框顏色的color picker\nlet backgroundColorPicker; // 選擇背景色的color picker\nlet textColorPicker; // 選擇文字,象限線條顏色的color picker\nlet strokeWeightSlider; // 調整邊框粗細的slider\nlet pixelSliderX; // 調整X軸方向的pixel效果\nlet pixelSliderY; // 調整Y軸方向的pixel效果\nlet showGrid; // 勾選是否顯示像線圖\nlet showSprings; // 勾選是否顯示連結線\nlet showShapePoints; // 勾選是否顯示shape的點點及編號\nlet showShape; // 勾選是否顯示形狀\n\n// 提早讀取\nfunction preload() {\n  pixelShader = loadShader(\"shader.vert\", \"shader.frag\");\n  for(let i=0; i<10; i++) {\n    pixelShaders[i] = loadShader(\"shader.vert\", \"shader.frag\");\n  }\n}\n\n// p5的環境設置\nfunction setup() {\n  createCanvas(800, 800); // 新增一個800x800的canvas\n  shapeGraphic = createGraphics(width, height); // 宣告shapeGraphic圖層\n\n  //shapeGraphic.imageMode(CENTER)\n  for (let i=0; i<10; i++) {\n    shapeGraphics.push(createGraphics(width, height))\n  }\n  quadrantDiagramGraphic = createGraphics(width, height); // 宣告quadrantDiagramGraphic圖層\n  webGLGraphic = createGraphics(width, height, WEBGL); // 宣告webGLGraphic圖層, 且為webGL模式\n  for(let i=0; i<10; i++) {\n    webGLGraphics.push(createGraphics(width, height, WEBGL))\n  }\n\n  screenShotBtn = createButton(\"存取圖片\"); // 宣告名為存取圖片的按鈕\n  screenShotBtn.mousePressed(() => saveCanvas(\"myCanvas\", \"jpg\")); // 當滑鼠按下screenShotBtn時, 下載Canvas\n  modeSelect = createSelect(); // 宣告一個選單\n  modeSelect.option(\"直線\"); // 新增直線選項給這個選單\n  modeSelect.option(\"曲線\"); // 新增曲線選項給這個選單\n  bodyColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  bodyStrokeColorPicker = createColorPicker(\"#ff00ff\"); // 宣告color picker, 預設顏色為#ff00ff\n  backgroundColorPicker = createColorPicker(\"#fff\"); // 宣告color picker, 預設顏色為#fff\n  textColorPicker = createColorPicker(\"#000\"); // 宣告color picker, 預設顏色為#000\n  strokeWeightSlider = createSlider(2, 20, 4, 1); // 宣告slider, 最小值2, 最大值20, 預設值4, 增減的步數為1\n  pixelSliderX = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  pixelSliderY = createSlider(0.1, 1, 1, 0.1); // 宣告slider, 最小值0.1, 最大值1, 預設值1, 增減的步數為0.1\n  showShape = createCheckbox(\"顯示shape\", true); // 宣告名為顯示shape的checkbox, 預設值為否\n  showGrid = createCheckbox(\"顯示象限\", true); // 宣告名為顯示象限的checkbox, 預設值為是\n  showShapePoints = createCheckbox(\"顯示連結點\", true); // 宣告名為顯示連結點的checkbox, 預設值為是\n  showSprings = createCheckbox(\"顯示連結線\", false); // 宣告名為顯示連結線的checkbox,預設值為否\n\n  physics = new VerletPhysics2D();\n\n  let bounds = new Rect(-width / 2, -height / 2, width, height);\n  physics.setWorldBounds(bounds);\n\n  // 依序存入各個點點及其座標\n  \n  particles.push(new Particle(-120, -80));\n  particles.push(new Particle(-70, -80));\n  particles.push(new Particle(-20, -80));\n  particles.push(new Particle(30, -80));\n  particles.push(new Particle(80, -80));\n  particles.push(new Particle(30, 20));\n  particles.push(new Particle(80, 120));\n  particles.push(new Particle(30, 120));\n  particles.push(new Particle(-20, 120));\n  particles.push(new Particle(-70, 120));\n  particles.push(new Particle(-120, 120));\n  particles.push(new Particle(-70, 20));\n\n  // 將點點們彼此新增soft body的連結線\n  for (let i = 0; i < particles.length; i++) {\n    for (let j = i + 1; j < particles.length; j++) {\n      if (i !== j) {\n        let a = particles[i];\n        let b = particles[j];\n        // let b = particles[(i + 1) % particles.length];\n        springs.push(new Spring(a, b, 0.001));\n      }\n    }\n  }\n}\n\n// p5 canvas每一個frame在做的事\nfunction draw() {\n  //clear()\n  webGLGraphics.forEach((g,i) => g.shader(pixelShaders[i]))\n  webGLGraphic.shader(pixelShader);\n  pixelShaders.forEach((s, i) => s.setUniform(\"mouse\", [pixelSliderX.value(), pixelSliderY.value()]))\n  pixelShader.setUniform(\"mouse\", [pixelSliderX.value(), pixelSliderY.value()]);\n  \n  pixelShaders.forEach((s, i) => s.setUniform(\"tex\", shapeGraphics[i]))\n  //shapeGraphics.forEach((g,i) => pixelShaders[i].setUniform(\"tex\", g))\n  pixelShader.setUniform(\"tex\", shapeGraphic);\n \n  webGLGraphics.forEach((g,i) => g.rect(-width / 2, -height / 2, width, height))\n  webGLGraphic.rect(-width / 2, -height / 2, width, height);\n  shapeGraphics.forEach(g => g.background(255))\n  shapeGraphic.background(255);\n  \n  webGLGraphics.forEach((g,i) => image(g,0,0))\n  image(webGLGraphic, 0, 0);\n\n  if (showShape.checked()) {\n    // 如果有勾選showShape\n    //shapeGraphics.forEach((g, i) => drawShape(g, 2))\n    \n    drawShape(shapeGraphic,1); // 在shapeGraphic圖層畫形狀\n  }\n\n  if (showGrid.checked()) {\n    // 如果有勾選showGrid\n    drawGrid(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫像線圖\n  }\n\n  if (showSprings.checked()) {\n    // 如果有勾選showSprings\n    drawSprings(quadrantDiagramGraphic); // 在quadrantDiagramGraphic畫連結線\n  }\n\n  if (showShapePoints.checked()) {\n    // 如果有勾選showShapePoints\n    drawShapePoints(quadrantDiagramGraphic); //在quadrantDiagramGraphic標註點點們\n  }\n}\n\n// 在放入函示的graphic上畫shape\nfunction drawShape(g,scaleV) {\n  g.background(backgroundColorPicker.color());\n  g.push();\n  g.translate(width / 2, height / 2);\n  g.scale(scaleV, scaleV)\n  physics.update();\n\n  g.stroke(bodyStrokeColorPicker.color());\n  if (showSprings.checked())\n    g.stroke([\n      red(bodyStrokeColorPicker.color()),\n      green(bodyStrokeColorPicker.color()),\n      blue(bodyStrokeColorPicker.color()),\n      100,\n    ]);\n\n  g.fill(bodyColorPicker.color());\n\n  if (showSprings.checked())\n    g.fill([\n      red(bodyColorPicker.color()),\n      green(bodyColorPicker.color()),\n      blue(bodyColorPicker.color()),\n      100,\n    ]);\n\n  g.strokeWeight(strokeWeightSlider.value());\n\n  if (modeSelect.value() === \"直線\") {\n    g.beginShape(); // 開始將點點們變成Shape\n    for (let particle of particles) {\n      g.vertex(particle.x, particle.y);\n    }\n    g.endShape(CLOSE);\n  }\n\n  if (modeSelect.value() === \"曲線\") {\n    g.beginShape();\n    for (let p of particles) {\n      g.curveVertex(p.x, p.y);\n    }\n    g.curveVertex(particles[0].x, particles[0].y);\n    g.curveVertex(particles[1].x, particles[1].y);\n    g.curveVertex(particles[2].x, particles[2].y);\n    g.endShape();\n  }\n\n  if (mouseIsPressed) {\n    if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n      particles[0].lock();\n      particles[0].x = mouseX - width/2;\n      particles[0].y = mouseY - height/2;\n      particles[0].unlock();\n    }\n  }\n  g.pop();\n}\n\n// 在放入的graphic上畫像線圖\nfunction drawGrid(graphic) {\n  graphic.clear(); //background(\"yellow\")\n\n  graphic.push();\n  // graphic.textAlign(LEFT, TOP)\n  graphic.stroke(textColorPicker.color());\n  graphic.strokeWeight(1);\n  graphic.fill(textColorPicker.color());\n  graphic.translate(width / 2, height / 2);\n  graphic.line(-width / 2, 0, width / 2, 0); // X軸\n  graphic.line(0, -height / 2, 0, height / 2); // Y軸\n  graphic.textSize(12);\n  graphic.noStroke();\n  for (let x = -width / 2; x < width / 2; x += 50) {\n    graphic.line(x, 0, x, 5);\n    graphic.text(x, x, 10);\n  }\n\n  for (let y = -height / 2; y < height / 2; y += 50) {\n    graphic.line(0, y, 5, y);\n    graphic.text(y, 0, y);\n  }\n  graphic.push();\n  graphic.textAlign(RIGHT);\n  graphic.text(\"Release釋放\", width / 2, 0);\n  graphic.textAlign(LEFT);\n  graphic.text(\"Protect保護\", -width / 2, 0);\n  graphic.text(\"Collect收納\", 0, height / 2);\n  graphic.textAlign(LEFT, TOP);\n  graphic.text(\"Action行動\", 0, -height / 2);\n  graphic.pop();\n\n  graphic.pop();\n\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫點點和編號\nfunction drawShapePoints(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  particles.forEach((particle, index) => {\n    graphic.push();\n    //graphic.strokeWeight(5)\n    //graphic.point(particle.x, particle.y)\n    graphic.noFill();\n    graphic.stroke(textColorPicker.color());\n    //graphic.circle(particle.x, particle.y, 15);\n    graphic.fill(textColorPicker.color());\n    graphic.noStroke();\n    graphic.textSize(15);\n    graphic.textAlign(CENTER, CENTER);\n    graphic.text(index, particle.x, particle.y);\n    graphic.pop();\n  });\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\n// 在放入的graphic上畫連結線\nfunction drawSprings(graphic) {\n  graphic.clear();\n  graphic.push();\n  graphic.translate(width / 2, height / 2);\n  // graphic.stroke([\n  //     red(bodyStrokeColorPicker.color()),\n  //     green(bodyStrokeColorPicker.color()),\n  //     blue(bodyStrokeColorPicker.color()),\n  //     100]\n  //   );\n\n  for (let spring of springs) {\n    graphic.stroke(textColorPicker.color());\n    graphic.strokeWeight(1);\n    spring.show(graphic);\n  }\n\n  graphic.pop();\n  image(graphic, 0, 0);\n}\n\nfunction keyTyped() {\n  if (key === \"s\" || key === \"S\") {\n    saveCanvas(\"myCanvas\", \"jpg\");\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7557",
        "isSelectedFile": true,
        "createdAt": "2024-01-03T17:07:00.895Z",
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7557"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/hapticdata/toxiclibsjs@0.3.2/build/toxiclibs.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <script src=\"particle.js\"></script>\n    <script src=\"spring.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7553",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T17:07:00.895Z",
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7553"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7559",
        "isSelectedFile": false,
        "createdAt": "2024-01-03T17:07:00.895Z",
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7559"
      },
      {
        "name": "particle.js",
        "content": "class Particle extends VerletParticle2D {\n  constructor(x, y, s) {\n    super(x, y);\n    this.r = 2;\n    this.s = s\n    physics.addParticle(this);\n  }\n\n  show(g) {\n    g.fill(252, 238, 33);\n    g.strokeWeight(4);\n    g.circle(this.x, this.y, this.r * 12);\n\n    g.strokeWeight(this.r * 4);\n    g.point(this.x, this.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7554",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "createdAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7554"
      },
      {
        "name": "spring.js",
        "content": "class Spring extends VerletSpring2D {\n  constructor(a, b, strength) {\n    let length = dist(a.x, a.y, b.x, b.y);\n    super(a, b, length * 1, 0.001);\n    physics.addSpring(this);\n  }\n\n  show(g) {\n    g.strokeWeight(1);\n    //g.stroke(0, 127);\n    g.line(this.a.x, this.a.y, this.b.x, this.b.y);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7558",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "createdAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7558"
      },
      {
        "name": "shader.vert",
        "content": "// attribute is the variable type\n// vec3 is the data type\nattribute vec3 aPosition;\n\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\n\nvoid main(){\n  \n  vTexCoord = aTexCoord;\n  \n  // vec4 holds 4 components xyzw or rgba or stuv\n  vec4 position = vec4(aPosition.x, aPosition.y, aPosition.z, 1.0);\n  \n  position.xy = position.xy * 2.0 - 1.0;\n  \n  // Output the position from the shader\n  gl_Position = position;\n}",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7556",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "createdAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7556"
      },
      {
        "name": "shader.frag",
        "content": "// Set the precision\nprecision highp float;\n\nuniform vec2 mouse;\nuniform sampler2D tex;\n\nvarying vec2 vTexCoord;\n\nvoid main() {\n  \n  vec2 uv = vTexCoord;\n  // Flip the texture coords\n  uv.y = 1.0 - uv.y;\n  \n  vec2 steps = vec2(200.0, 200.0) * mouse;\n  \n  vec2 pixelUv = floor( uv * steps ) / steps;\n  \n  vec4 color = texture2D(tex, pixelUv);\n  \n  gl_FragColor = color;\n} ",
        "children": [],
        "fileType": "file",
        "_id": "65958253d1cfb5718f8b7555",
        "isSelectedFile": false,
        "updatedAt": "2024-01-03T17:07:00.895Z",
        "createdAt": "2024-01-03T17:07:00.895Z",
        "id": "65958253d1cfb5718f8b7555"
      }
    ],
    "createdAt": "2024-01-03T15:50:46.483Z",
    "updatedAt": "2024-01-03T17:07:00.895Z",
    "id": "wMsna464M"
  },
  {
    "name": "stupid errors",
    "_id": "zjv4HBVN9",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65da541a820e0d810e510f48",
          "65da541a820e0d810e510f49",
          "65da541a820e0d810e510f4a",
          "65da541a820e0d810e510f4b"
        ],
        "fileType": "folder",
        "_id": "65da541a820e0d810e510f47",
        "isSelectedFile": false,
        "createdAt": "2024-02-25T20:13:43.271Z",
        "updatedAt": "2024-02-25T20:13:43.271Z",
        "id": "65da541a820e0d810e510f47"
      },
      {
        "name": "sketch.js",
        "content": "// Module aliases\nvar Engine = Matter.Engine,\n    World = Matter.World,\n    Bodies = Matter.Bodies;\n\nvar engine;\nvar world;\nvar textBlocks = [];\nvar ground;\n\nfunction setup() {\n  createCanvas(800, 800);\n  engine = Engine.create();\n  world = engine.world;\n  Engine.run(engine);\n  \n  var options = {\n    isStatic: true\n  }\n  noStroke()\n  // stroke(255);\n  //strokeWeight(5);\n  ground = Bodies.rectangle(400, height, width, 10, options);\n  World.add(world, ground);\n}\n\nfunction mouseDragged() {\n  if (frameCount%5===0) {  \n    var randomMessage = getRandomErrorMessage();\n    var textW = textWidth(randomMessage)\n    var x = mouseX;\n    var y = mouseY;\n    var options = {\n      restitution: 0.6,\n      friction: 0.1\n    };\n    textBlocks.push(new TextBlock(x, y, randomMessage, options,textW));\n  }\n}\n\nfunction draw() {\n  background(150);\n  textBlocks = textBlocks.filter(block => block.inCanvas())\n  for (var i = 0; i < textBlocks.length; i++) {\n      textBlocks[i].show();\n  }\n  \n  stroke(255);\n  textFont('Courier New');\n  // strokeWeight(5);\n  rectMode(CENTER);\n  rect(400, height+5, width, 10);\n}\n\nfunction keyTyped() {\n\tif (key === 's' || key === 'S') {\n    saveCanvas('myCanvas', 'jpg');\n  }\n  return false;\n}\n\n// Function to get a random error message\nfunction getRandomErrorMessage() {\n  var errorMessages = [\n    \"Error 404: Brain not found.\",\n  \"Unexpected kangaroo in your code.\",\n  \"System error: Insufficient chocolate.\",\n  \"Error: Alien invasion detected.\",\n  \"404 Error: Reality not found.\",\n  \"Oops! Gravity malfunction.\",\n  \"Error: Cat walked over keyboard.\",\n  \"System failure: Too much glitter.\",\n  \"Error: Coffee break interrupted.\",\n  \"Error 101: Squirrel on power line.\",\n  \"Error: Unicorn ran out of magic.\",\n  \"System error: Potato battery drained.\",\n  \"Error: Ghost in the machine.\",\n  \"404 Error: Destiny not found.\",\n  \"Oops! Parallel universe glitch.\",\n  \"Error: Monkey business detected.\",\n  \"System failure: Disco overload.\",\n  \"Error: Quantum flux capacitor overheated.\",\n  \"Error: Butterfly effect in progress.\"\n  ];\n  \n  return random(errorMessages);\n}\n\n// TextBlock class\nclass TextBlock {\n  constructor(x, y, message, options, w) {\n    this.body = Bodies.rectangle(x, y, w, 40, options);\n    this.message = message;\n    this.world = world;\n    \n    // Function to get a random color\n    this.getRandomColor = function() {\n      return color(random(255), random(255), random(255));\n    }\n    try {\n      throw new Error(this.message);\n    } catch (error) {\n      console.error(error.message);\n    }\n    World.add(this.world, this.body);\n  }\n  inCanvas() {\n    var pos = this.body.position;\n    return pos.x > 0 && pos.x < width && pos.y > 0 && pos.y < height\n  }\n  show() {\n    var pos = this.body.position;\n    var angle = this.body.angle;\n    textSize(20);\n    // push()\n    // translate(pos.x, pos.y)\n    // rectMode(CENTER);\n    // rotate(angle);\n    // fill('red')\n    // rect(0, 0, textWidth(this.message),40)\n    // pop()\n    \n    push();\n    translate(pos.x, pos.y);\n    rotate(angle);\n    textAlign(CENTER, CENTER);\n    // Assign a random color to the text\n    fill(this.getRandomColor());\n    text(this.message, 0, 0);\n    pop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65da541a820e0d810e510f4a",
        "isSelectedFile": true,
        "createdAt": "2024-02-25T20:13:43.271Z",
        "updatedAt": "2024-02-25T20:13:43.271Z",
        "id": "65da541a820e0d810e510f4a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  <meta charset=\"utf-8\" />\n  <script language=\"javascript\" type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.12.0/matter.min.js\"></script>\n\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n  <script src=\"matter.js\"></script>\n  <script src=\"box.js\"></script>\n\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "65da541a820e0d810e510f49",
        "isSelectedFile": false,
        "createdAt": "2024-02-25T20:13:43.271Z",
        "updatedAt": "2024-02-25T20:13:43.271Z",
        "id": "65da541a820e0d810e510f49"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65da541a820e0d810e510f4b",
        "isSelectedFile": false,
        "createdAt": "2024-02-25T20:13:43.271Z",
        "updatedAt": "2024-02-25T20:13:43.271Z",
        "id": "65da541a820e0d810e510f4b"
      },
      {
        "name": "box.js",
        "content": "function Box(x, y, w, h) {\n  var options = {\n    friction: 0.5,\n    restitution: 0.8,\n    angle: PI\n  }\n  this.body = Bodies.rectangle(x, y, w, h, options);\n  this.w = w;\n  this.h = h;\n  World.add(world, this.body);\n\n  this.show = function() {\n    var pos = this.body.position;\n    var angle = this.body.angle;\n\n    push();\n    stroke(200);\n    strokeWeight(2);\n    fill(255, 255, 255, 100);\n    translate(pos.x, pos.y);\n    rotate(angle);\n    rectMode(CENTER);\n    rect(0, 0, this.w, this.h);\n    pop();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "65da541a820e0d810e510f48",
        "isSelectedFile": false,
        "updatedAt": "2024-02-25T20:13:43.271Z",
        "createdAt": "2024-02-25T20:13:43.271Z",
        "id": "65da541a820e0d810e510f48"
      }
    ],
    "createdAt": "2024-02-24T20:39:54.989Z",
    "updatedAt": "2024-02-25T20:13:43.271Z",
    "id": "zjv4HBVN9"
  },
  {
    "name": "T12: Pallete dither copy",
    "_id": "sq0kk1L78D",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64ef969521f37516ab2233c1",
          "64ef969521f37516ab2233c2",
          "64ef969521f37516ab2233c4",
          "64ef969521f37516ab2233c5",
          "64ef971ec5e4cc001ac83397",
          "64ef969521f37516ab2233c6",
          "64ef969521f37516ab2233c7",
          "64ef969521f37516ab2233c8",
          "64ef969521f37516ab2233c9"
        ],
        "fileType": "folder",
        "_id": "64ef969521f37516ab2233c0",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c0"
      },
      {
        "name": "sketch.js",
        "content": "// Lolipop photo CC: BY, Flickr user verchmarco\n// https://www.flickr.com/photos/160866001@N07/45958565335/sizes/l\n\nlet src;\nlet outputGraphic;\nlet out;\n\nfunction preload(){\n\tsrc = loadImage(\"homie.png\");\n}\n\nfunction setup() { \n  createCanvas(640,640);\n  // selectInput(\"Select an image to process:\", \"inputSelect\");\n  //noLoop();\n  //interrupt();\n\tbackground(255);\n  textAlign(CENTER, CENTER);\n  text(\"Processing (will take a while)\", width / 2, height / 2);\n}\n\n// function interrupt() {\n//   while (src == null) {\n//     delay(200);\n//   }\n//   loop();\n// }\n\nfunction draw() {\n  let CANVAS_SIZE = 640; //DYLAN: CHANGE THIS TO ANY POWER OF 2 LESS THAN 640\n  let PALETTE = getPallette(\"goldfish\");     //DYLAN: CHANGE THIS TO ANY OF THE PALETTES LISTED IN THE PALETTES TAB\n  \n  limitSize(src, CANVAS_SIZE);\n  outputGraphic = createGraphics(src.width, src.height);\n  outputGraphic.background(255,255,255);\n  console.log(\"starting the drawdraw\");\n  ditherQuantize(src, PALETTE);\n  console.log(\"drawdraw fin\");\n  \n  //TODO: check and fix basicScale in this context.\n  out = createGraphics(\n    outputGraphic.width * (CANVAS_SIZE / width),\n    outputGraphic.height * (CANVAS_SIZE / height));\n  out = basicScale(outputGraphic, width / CANVAS_SIZE);\n  image(out,0,0);\n  noLoop();\n}\n\n// function inputSelect(selection) {\n//   if (selection == null) {\n//     println(\"Window was closed or the user hit cancel.\");\n//     exit();\n//   } else {\n//     println(\"User selected \" + selection.getAbsolutePath());\n//     src = loadImage(selection.getAbsolutePath());\n//   } \n// }\n\n// function outputSelected(selection) {\n//   if (selection == null) {\n//     println(\"Window was closed or the user hit cancel.\");\n//   } else {\n//     println(\"User selected \" + selection.getAbsolutePath());\n//     out.save(selection.getAbsolutePath()+\".png\");\n//   }\n// }",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c8",
        "isSelectedFile": false,
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "id": "64ef969521f37516ab2233c8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"pallettes.js\"></script>\n    <script src=\"ditherlevels.js\"></script>\n    <script src=\"ditherQuantize.js\"></script>\n    <script src=\"basicScale.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c6",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": true,
        "id": "64ef969521f37516ab2233c6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c9",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c9"
      },
      {
        "name": "basicScale.js",
        "content": "\nfunction basicScale(inG, scaleFactor) {\n  let out = createGraphics(inG.width*scaleFactor, inG.height*scaleFactor);\n  //out.beginDraw();\n\n  //iterate through original pixels\n  for (let x = 0; x < inG.width; x++) {\n    for (let y = 0; y < inG.height; y++) {\n\n      out.stroke(inG.get(x, y));//sample pixel colour from original image\n\n      //iterate through each pixel in the scaled up \"pixel\"\n      for (let ix = 0; ix < scaleFactor; ix++) {\n        for (let iy = 0; iy < scaleFactor; iy++) {\n\n          out.point((x*scaleFactor)+ix, (y*scaleFactor)+iy);//point\n        }\n      }//end iterate through up-scaled pixel\n    }\n  }//end interate through original pixels\n\n  //out.endDraw();\n  return out;\n}\n\nfunction limitSize(img, maxSize) {\n  //if image is bigger than allowable\n  if ((img.width > maxSize) || (img.height > maxSize)) { \n    let scaleFactor;\n    //find which axis is bigger\n    if (img.width > img.height) {//width is biggest \n      scaleFactor = img.width / maxSize;\n    } else {//height is biggest OR they're equal\n      scaleFactor = img.height / maxSize;\n    }\n    img.resize(int(img.width/scaleFactor), int(img.height/scaleFactor));\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c1",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c1"
      },
      {
        "name": "ditherQuantize.js",
        "content": "function findDistance(c1, c2) {\n  return pow(red(c1)-red(c2), 2) + pow(green(c1)-green(c2), 2) + pow(blue(c1)-blue(c2), 2);\n}\n\nfunction ditherQuantize(img, palette) {\n\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n\n      let colorSample = img.get(x, y);\n\n      let nearestDistance = 999999;\n      let secondNearestDistance = 1000000;\n      let nearestCol = color(0);\n      let secondNearestCol = color(255);\n      \n      for (let c of palette) {\n        let distance = findDistance(c, colorSample); \n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestCol = c;\n        } else {\n          if (distance < secondNearestDistance) {\n            secondNearestDistance = distance;\n            secondNearestCol = c;\n          }\n        }\n      }\n      \n      if (dither(x, y, nearestDistance,secondNearestDistance)){\n          outputGraphic.stroke(secondNearestCol);\n        } else {\n          outputGraphic.stroke(nearestCol);\n        }\n        outputGraphic.point(x,y); \n    }\n  }\n}\n\nfunction dither(x, y, dist1, dist2){\n  let NUM_OF_DITHERS = 9;\n  let range = (dist1+dist2)/NUM_OF_DITHERS;\n  if (dist1 < range*1) {\n    return dither_0(x,y);\n  }else if (dist1 < range*2) {\n    return dither_1(x,y);\n  }else if (dist1 < range*3) {\n    return dither_2(x,y);\n  }else if (dist1 < range*4) {\n      return dither_3(x,y);\n  }else if (dist1 < range*5) {\n      return dither_4(x,y);\n  }else if (dist1 < range*6) {\n      return dither_5(x,y);\n  }else if (dist1 < range*7) {\n    return dither_6(x,y);\n  }else if (dist1 < range*8) {\n    return dither_7(x,y);\n  }else if (dist1 <= range*9) {//less than 255\n    return dither_8(x,y);\n  } else { //math is bork, something terrible has happened\n    console.log(\"BIG OL' CALC ERROR\");\n    return false;\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c4",
        "isSelectedFile": false,
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "id": "64ef969521f37516ab2233c4"
      },
      {
        "name": "ditherlevels.js",
        "content": "function dither_0(x, y) {\n  return false;\n}\n\nfunction dither_1(x, y) {\n  if ( ((x%4 == 0) && (y%4 == 0)) || ((x%4 == 2) && (y%4 == 2)) ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction dither_2(x, y) {\n  if ( ((x%2 == 0) && (y%2 == 0)) ) {\n    return true;\n  } else {\n    return false;\n  }  \n}\n\nfunction dither_3(x, y) {\n  if ( ((x%2 == 0) && (y%2 == 0)) || (((x%4 == 1) && (y%4 == 1)) || ((x%4 == 3) && (y%4 == 3))) ) {\n    return true;\n  } else {\n    return false;\n  }  \n}\n\nfunction dither_4(x, y) {\n  if  ( ((x%2 == 0) && (y%2 == 0)) || ((x%2 == 1) && (y%2 == 1)) ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction dither_5(x, y) {\n  return !dither_3(x,y);  \n}\n\nfunction dither_6(x, y) {\n  return !dither_2(x,y);  \n}\n\nfunction dither_7(x, y) {\n  return !dither_1(x,y);  \n}\n\nfunction dither_8(x, y) {\n  return true;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c5",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c5"
      },
      {
        "name": "pallettes.js",
        "content": "function getPallette(name){\n  if (name == \"pico\"){\n    return [\n      color(0,0,0),       //black\n      color(32,51,123),   //dark_blue\n      color(126,37,83),   //dark_purple\n      color(0,144,61),    //dark_green\n      color(171,82,54),   //brown\n      color(52,54,53),    //dark_gray\n      color(194,195,199), //light_gray\n      color(255,241,232), //white\n      color(255,0,77),    //red\n      color(255,155,0),   //orange\n      color(255,231,39),  //yellow\n      color(0,226,50),    //green\n      color(41,173,255),  //blue\n      color(132,112,169), //indigo\n      color(255,119,168), //pink\n      color(255,214,197)  //peach\n  \t];\n  } else if (name == \"c64\") {\n    return [\n      color(0,0,0),        //black\n      color(255,255,255),  //white\n      color(136,0,0),      //red\n      color(170,255,238),  //cyan\n      color(204,68,204),   //violet\n      color(0,204,85),     //green\n      color(0,0,170),      //blue\n      color(238,238,119),  //yellow\n      color(221,136,85),   //orange\n      color(102,68,0),     //brown\n      color(255,119,119),  //lightred\n      color(51,51,51),     //grey1\n      color(119,119,119),  //grey2\n      color(170,255,102),  //lightgreen\n      color(0,136,255),    //lightblue\n      color(187,187,187)   //grey3\n    ];\n  } else if (name == \"gb\"){\n    return [\n      color(156,189,15),\n      color(140,173,15),\n      color(48,98,48),\n      color(15,56,15)\n    ];\n  } else if (name == \"nes\"){\n    return [\n      color(124,124,124),\n      color(0,0,252),\n      color(0,0,188),\n      color(68,40,188),\n      color(148,0,132),\n      color(168,0,32),\n      color(168,16,0),\n      color(136,20,0),\n      color(80,48,0),\n      color(0,120,0),\n      color(0,104,0),\n      color(0,88,0),\n      color(0,64,88),\n      color(0,0,0),\n      color(0,0,0),\n      color(0,0,0),\n      color(188,188,188),\n      color(0,120,248),\n      color(0,88,248),\n      color(104,68,252),\n      color(216,0,204),\n      color(228,0,88),\n      color(248,56,0),\n      color(228,92,16),\n      color(172,124,0),\n      color(0,184,0),\n      color(0,168,0),\n      color(0,168,68),\n      color(0,136,136),\n      color(0,0,0),\n      color(0,0,0),\n      color(0,0,0),\n      color(248,248,248),\n      color(60,188,252),\n      color(104,136,252),\n      color(152,120,248),\n      color(248,120,248),\n      color(248,88,152),\n      color(248,120,88),\n      color(252,160,68),\n      color(248,184,0),\n      color(184,248,24),\n      color(88,216,84),\n      color(88,248,152),\n      color(0,232,216),\n      color(120,120,120),\n      color(0,0,0),\n      color(0,0,0),\n      color(252,252,252),\n      color(164,228,252),\n      color(184,184,248),\n      color(216,184,248),\n      color(248,184,248),\n      color(248,164,192),\n      color(240,208,176),\n      color(252,224,168),\n      color(248,216,120),\n      color(216,248,120),\n      color(184,248,184),\n      color(184,248,216),\n      color(0,252,252),\n      color(248,216,248),\n      color(0,0,0),\n      color(0,0,0)\n    ];\n  } else if (name == \"goldfish\"){\n    return [\n      color(105,210,231),\n      color(167,219,216),\n      color(224,228,204),\n      color(243,134,48),\n      color(250,105,0)\n    ];\n  } else if (name == \"rainbow\"){\n    return [\n      color(255,0,0),    //red\n      color(255,127,0),  //orange\n      color(255,255,0),  //yellow\n      color(0,255,0),    //green\n      color(0,0,255),    //blue\n      color(75,0,130),   //indigo\n      color(139,0,255),  //violet\n      color(255,255,255) //white\n    ];\n  }\n  return [color(255, 0, 0)];\n}",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c7",
        "isSelectedFile": false,
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "id": "64ef969521f37516ab2233c7"
      },
      {
        "name": "data",
        "content": "",
        "children": [
          "64ef969521f37516ab2233c3"
        ],
        "fileType": "folder",
        "_id": "64ef969521f37516ab2233c2",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c2"
      },
      {
        "name": "lollipops.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef969521f37516ab2233c3",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/c20d63fb-39d9-4daf-8bfb-45929f7de38c.jpg",
        "isSelectedFile": false,
        "id": "64ef969521f37516ab2233c3"
      },
      {
        "name": "homie.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64ef971ec5e4cc001ac83397",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/96885e68-442a-47a4-88f8-486da11b4650.png",
        "isSelectedFile": false,
        "updatedAt": "2023-08-30T19:28:10.021Z",
        "createdAt": "2023-08-30T19:28:10.021Z",
        "id": "64ef971ec5e4cc001ac83397"
      }
    ],
    "createdAt": "2023-08-30T19:20:55.783Z",
    "updatedAt": "2023-08-30T19:28:10.021Z",
    "id": "sq0kk1L78D"
  },
  {
    "name": "Teachable Machine 1: Image Classification copy",
    "_id": "2iXWxH6Wn",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6567ae4510f204bd150c2867",
          "6567ae4510f204bd150c2868",
          "6567ae4510f204bd150c2869"
        ],
        "fileType": "folder",
        "_id": "6567ae4510f204bd150c2866",
        "isSelectedFile": false,
        "createdAt": "2023-06-06T13:26:14.487Z",
        "updatedAt": "2023-06-06T13:26:14.487Z",
        "id": "6567ae4510f204bd150c2866"
      },
      {
        "name": "sketch.js",
        "content": "// Teachable Machine\n// The Coding Train / Daniel Shiffman\n// https://thecodingtrain.com/TeachableMachine/1-teachable-machine.html\n// https://editor.p5js.org/codingtrain/sketches/PoZXqbu4v\n\n// The video\nlet video;\n// For displaying the label\nlet label = \"waiting...\";\n// The classifier\nlet classifier;\nlet modelURL = //'https://teachablemachine.withgoogle.com/models/bXy2kDNi/';\n    'https://teachablemachine.withgoogle.com/models/x7R_PJvd8/'\n\n// STEP 1: Load the model!\nfunction preload() {\n  classifier = ml5.imageClassifier(modelURL + 'model.json');\n}\n\n\nfunction setup() {\n  createCanvas(640, 520);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.hide();\n  // STEP 2: Start classifying\n  classifyVideo();\n}\n\n// STEP 2 classify the videeo!\nfunction classifyVideo() {\n  classifier.classify(video, gotResults);\n}\n\nfunction draw() {\n  background(0);\n\n  // Draw the video\n  image(video, 0, 0);\n\n  // STEP 4: Draw the label\n  textSize(32);\n  textAlign(CENTER, CENTER);\n  fill(255);\n  text(label, width / 2, height - 16);\n\n  // Pick an emoji, the \"default\" is train\n  let emoji = \"🚂\";\n  if (label == \"Rainbow\") {\n    emoji = \"🌈\";\n  } else if (label == \"Unicorn\") {\n    emoji = \"🦄\";\n  } else if (label == \"Ukulele\") {\n    emoji = \"🎸\";\n  }\n\n  // Draw the emoji\n  textSize(256);\n  text(emoji, width / 2, height / 2);\n}\n\n// STEP 3: Get the classification!\nfunction gotResults(error, results) {\n  // Something went wrong!\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // Store the label and classify again!\n  label = results[0].label;\n  classifyVideo();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6567ae4510f204bd150c2868",
        "isSelectedFile": true,
        "createdAt": "2023-06-06T13:26:14.487Z",
        "updatedAt": "2023-06-06T13:26:14.487Z",
        "id": "6567ae4510f204bd150c2868"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n  \n  <script src=\"https://unpkg.com/ml5@0.5.0/dist/ml5.min.js\"></script>\n  \n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  <meta charset=\"utf-8\" />\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "6567ae4510f204bd150c2867",
        "isSelectedFile": false,
        "createdAt": "2023-06-06T13:26:14.487Z",
        "updatedAt": "2023-06-06T13:26:14.487Z",
        "id": "6567ae4510f204bd150c2867"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6567ae4510f204bd150c2869",
        "isSelectedFile": false,
        "createdAt": "2023-06-06T13:26:14.487Z",
        "updatedAt": "2023-06-06T13:26:14.487Z",
        "id": "6567ae4510f204bd150c2869"
      }
    ],
    "createdAt": "2023-11-29T21:33:57.522Z",
    "updatedAt": "2023-11-29T21:33:57.522Z",
    "id": "2iXWxH6Wn"
  },
  {
    "name": "test-pixel-compared",
    "_id": "USTpuQTL8",
    "updatedAt": "2023-08-22T18:22:25.477Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64e4dd981dfd244a8f9c1da3",
          "64e4e059ec03d1001a978199",
          "64e4e029ec03d1001a978041",
          "64e4dd981dfd244a8f9c1da2",
          "64e4dd981dfd244a8f9c1da4"
        ],
        "fileType": "folder",
        "_id": "64e4dd981dfd244a8f9c1da5",
        "isSelectedFile": false,
        "createdAt": "2023-08-22T18:22:25.477Z",
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4dd981dfd244a8f9c1da5"
      },
      {
        "name": "sketch.js",
        "content": "// function setup() {\n//   createCanvas(400, 400);\n// }\n\n// function draw() {\n//   background(220);\n// }",
        "children": [],
        "fileType": "file",
        "_id": "64e4dd981dfd244a8f9c1da2",
        "isSelectedFile": false,
        "createdAt": "2023-08-22T18:22:25.477Z",
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4dd981dfd244a8f9c1da2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/6.2.1/browser/pixi.js\n\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    <script>\n      var SMALL_CANVAS_SIZE = 51;\n      var LARGE_CANVAS_SIZE = 512;\n      var BG_COLOR_HEX = \"#D9FFEC\";\n      var BG_COLOR_HEXCODE = 0xd9ffec;\n\n      function resizeWithCSS(cnv) {\n        cnv.style = `width: ${LARGE_CANVAS_SIZE}px; height: ${LARGE_CANVAS_SIZE}px`;\n      }\n      function resizeWithCSSPixelated(cnv) {\n        resizeWithCSS(cnv);\n        cnv.className = \"pixelated-rendering\";\n      } \n    </script>\n  </head>\n  <body>\n    <main>\n      <table>\n      <tr>\n        <td>renderer</td>\n        <td>small</td>\n        <td>scaled</td>\n        <td>scaled, css image-rendering: pixelated</td>\n      </tr>\n      <tr>\n        <td>p5.js</td>\n        <td id=\"p5js-1\"></td>\n        <td id=\"p5js-2\"></td>\n        <td id=\"p5js-3\"></td>\n      </tr>\n      <tr>\n        <td>p5.js WEBGL mode</td>\n        <td id=\"p5js-webgl-1\"></td>\n        <td id=\"p5js-webgl-2\"></td>\n        <td id=\"p5js-webgl-3\"></td>\n      </tr>\n      <tr>\n        <td>canvas api</td>\n        <td id=\"cnv-1\"></td>\n        <td id=\"cnv-2\"></td>\n        <td id=\"cnv-3\"></td>\n      </tr>\n      <tr>\n        <td>pixi</td>\n        <td id=\"pixi-1\"></td>\n        <td id=\"pixi-2\"></td>\n        <td id=\"pixi-3\" ></td>\n      </tr>\n    </table>\n    </main>\n    <script src=\"sketch.js\"></script>\n<!--     <script src=\"p5-draw.js\"></script> -->\n    <script src=\"p5webgl-draw.js\"></script>\n<!--     <script src=\"cnv-draw.js\"></script> -->\n    <script src=\"pixi-draw.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64e4dd981dfd244a8f9c1da3",
        "isSelectedFile": false,
        "createdAt": "2023-08-22T18:22:25.477Z",
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4dd981dfd244a8f9c1da3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\np , table {\n  margin: 24px;\n}\ntable {\n  border-collapse: collapse;\n}\n\ntable tr td {\n  border: 1px solid rgb(200,200,200);\n  padding: 12px;\n  vertical-align: top;\n}\n\ntable tr:first-child td,\ntable tr td:first-child {\n  background: white;\n}\n\ncanvas {\n  display: block;\n  border: 1px solid black;\n}\n\n.pixelated-rendering  {\n/*     image-rendering: optimizeSpeed; */\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: optimize-contrast;\n    image-rendering: pixelated;\n    -ms-interpolation-mode: nearest-neighbor;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64e4dd981dfd244a8f9c1da4",
        "isSelectedFile": false,
        "createdAt": "2023-08-22T18:22:25.477Z",
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4dd981dfd244a8f9c1da4"
      },
      {
        "name": "pixi-draw.js",
        "content": "/* global PIXI, SMALL_CANVAS_SIZE, LARGE_CANVAS_SIZE, BG_COLOR_HEXCODE, resizeWithCSS  resizeWithCSSPixelated */\n\nfunction pixiRender(parentID, resizeCallback) {\n  let parent = document.getElementById(parentID);\n  let s = SMALL_CANVAS_SIZE\n  let app = new PIXI.Application({\n    width: s,\n    height: s,\n  });\n\n  PIXI.settings.RESOLUTION = window.devicePixelRatio;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n  parent.appendChild(app.view);\n  \n  let obj = new PIXI.Graphics();\n  \n  obj.beginFill(BG_COLOR_HEXCODE);\n  obj.drawRect(0, 0, s, s);\n  obj.endFill();\n  \n  obj.lineStyle(1, 0x000000);\n  obj.drawCircle(s/2, s/2, s/4);\n  obj.drawCircle(s/2, s/2, s/8);\n\n  \n  const path = [0,s/2, s/2, 0, s, s/2, s/2, s];\n  obj.drawPolygon(path);\n  \n  // Add it to the stage to render\n  app.stage.addChild(obj);\n  \n  if (resizeCallback) {\n    \n    resizeCallback(app.view);\n  }\n}\n\npixiRender(\"pixi-1\");\npixiRender(\"pixi-2\", resizeWithCSS);\npixiRender(\"pixi-3\", resizeWithCSSPixelated);\n",
        "children": [],
        "fileType": "file",
        "_id": "64e4e029ec03d1001a978041",
        "isSelectedFile": false,
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "createdAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4e029ec03d1001a978041"
      },
      {
        "name": "p5webgl-draw.js",
        "content": "/* global p5, SMALL_CANVAS_SIZE, LARGE_CANVAS_SIZE, BG_COLOR_HEX , resizeWithCSS, resizeWithCSSPixelated */\n\n\nfunction p5Render(parentID, resizeCallback) {\n  let cnv;\n  let ctx;\n  new p5((p) => {\n    p.setup = () => {\n      cnv = p.createCanvas(SMALL_CANVAS_SIZE, SMALL_CANVAS_SIZE, 'webgl');\n      // console.log(cnv.elt)\n      // let testPar = p.createDiv('test')\n      // console.log(cnv)\n      // testPar.html(cnv.canvas)\n      //testPar.html(\"<p>hi</p>\")\n      //document.body.appendChild(cnv.elt)\n      // cnv.parent(parentID);\n      // console.log(cnv.parent())\n      // console.log(cnv.elt)\n      // let parent = p.createDiv(\"test\")//document.getElementById(parentID)\n      // parent.appendChild();\n      \n      p.noSmooth();\n      p.pixelDensity(1);\n\n    };\n    p.draw = () => {\n     \n      p.background(BG_COLOR_HEX);\n      p.strokeWeight(1);\n      p.translate(-p.width/2, -p.height/2);\n      //nested circles\n      p.ellipse(p.width / 2, p.height / 2, p.width / 2, p.height / 2);\n      p.ellipse(p.width / 2, p.height / 2, p.width / 4, p.height / 4);\n      //diamond\n      p.line(0, p.height / 2, p.width / 2, 0);\n      p.line(p.width / 2, 0, p.width, p.height / 2);\n      p.line(p.width, p.height / 2, p.width / 2, p.height);\n      p.line(p.width / 2, p.height, 0, p.height / 2);\n      \n      if (resizeCallback) {\n        resizeCallback(cnv.canvas);\n      }\n      p.noLoop();\n      \n    };\n  });\n}\n\np5Render(\"p5js-webgl-1\");\np5Render(\"p5js-webgl-2\", resizeWithCSS);\np5Render(\"p5js-webgl-3\", resizeWithCSSPixelated);\n//p5Render(\"p5js-webgl-4\", 'js');\n",
        "children": [],
        "fileType": "file",
        "_id": "64e4e059ec03d1001a978199",
        "isSelectedFile": true,
        "updatedAt": "2023-08-22T18:22:25.477Z",
        "createdAt": "2023-08-22T18:22:25.477Z",
        "id": "64e4e059ec03d1001a978199"
      }
    ],
    "createdAt": "2023-08-22T16:11:31.350Z",
    "id": "USTpuQTL8"
  },
  {
    "name": "text warp copy",
    "_id": "c9qPCNJKe",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65ff0d8d37a62408fdfa7158",
          "65ff0d8d37a62408fdfa7159",
          "65ff0d8d37a62408fdfa715a",
          "65ff0d8d37a62408fdfa715b",
          "65ff0d8d37a62408fdfa715c"
        ],
        "fileType": "folder",
        "_id": "65ff0d8d37a62408fdfa7157",
        "isSelectedFile": false,
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa7157"
      },
      {
        "name": "sketch.js",
        "content": "// fork from https://editor.p5js.org/beesandbombs/sketches/NEdfEmxD\n// creator: beesandbombs.com\nvar myFont;\nfunction preload() {\n  myFont = loadFont(\"WorkSans-SemiBold.ttf\");\n}\n\nfunction setup() {\n  // sketch's config: dimension, font size, alignment\n  createCanvas(windowWidth, windowHeight);\n  textFont(myFont);\n  textSize(0.09 * min(width, height));\n  textAlign(CENTER, CENTER);\n\n  // Number of characters in the text\n  N = myText.length;\n  \n  // Initialize variables for position calculations\n  // var x = 0,\n  //  wid = 0;\n\n  // Calculate the raw positions of each character in the text\n  for (i = 0; i < N; i++) {\n    if (i > 0) x += 0.5 * textWidth(myChar);\n    myChar = myText.charAt(i);\n    x += 0.5 * textWidth(myChar);\n    rawPosns[i] = x;\n  }\n  // Calculate the total width of the text\n  wid = x + 0.5 * textWidth(myChar);\n\n  // Adjust raw positions to center the text horizontally\n  for (i = 0; i < N; i++) {\n    rawPosns[i] -= 0.5 * wid;\n  }\n}\n\n// Declare variables\nvar myChar;\nvar myText = \"WARPING~TEXT\";\nvar N;\nvar x = 0,\n  wid = 0,\n  tot = 0,\n  y = 0;\nvar posns = [],\n  rawPosns = [],\n  scales = [];\nvar t;\n\n// Easing function\nfunction ease(p, g) {\n  if (p < 0.5) return 0.5 * pow(2 * p, g);\n  else return 1 - 0.5 * pow(2 * (1 - p), g);\n}\n\nfunction draw() {\n  t = 0.0004 * millis(); // Time variable based on millis\n  background(0);\n  fill(255);\n  // Translate to the center of the canvas\n  push();\n  translate(width / 2, height / 2);\n  // Loop through vertical positions\n  for (a = -4; a < 5; a++) {\n    x = 0;\n    y = textAscent() * 0.85 * a;\n    // Calculate scaling factor for each character based on mouse position\n    for (i = 0; i < N; i++) {\n      ph =\n        0.02 *\n        dist(\n          mouseX - width / 2,\n          mouseY - height / 2,\n          textWidth(\"A\") * (i - 0.5 * (N - 1)),\n          y\n        );\n      sc = map(cos(TWO_PI * t - ph), 1, -1, 0.25, 1);\n      scales[i] = sc;\n    }\n    // Calculate positions of each character with scaling\n    for (i = 0; i < N; i++) {\n      ii = (i + a + 4) % N;\n      if (i > 0) x += 0.5 * textWidth(myChar) * scales[i - 1];\n      myChar = myText.charAt(ii);\n      x += 0.5 * textWidth(myChar) * scales[i];\n      posns[i] = x;\n    }\n    tot = x + 0.5 * textWidth(myChar) * scales[N - 1];\n    // Push matrix, translate, scale, and translate again for each line\n    push();\n    translate(0, y);\n    scale(wid / tot, 1);\n    translate(-tot / 2, 0);\n    for (i = 0; i < N; i++) {\n      ii = (i + a + 4) % N;\n      push();\n      translate(posns[i], 0);\n      scale(scales[i], 1);\n      text(myText.charAt(ii), 0, 0);\n      pop();\n    }\n    pop();\n  }\n\n  pop();\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65ff0d8d37a62408fdfa715b",
        "isSelectedFile": true,
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa715b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65ff0d8d37a62408fdfa715a",
        "isSelectedFile": false,
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa715a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65ff0d8d37a62408fdfa715c",
        "isSelectedFile": false,
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa715c"
      },
      {
        "name": "emoji.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "65ff0d8d37a62408fdfa7159",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/54b57726-13ff-4ec5-82cb-45eafbc80af5.ttf",
        "isSelectedFile": false,
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa7159"
      },
      {
        "name": "WorkSans-SemiBold.ttf",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "65ff0d8d37a62408fdfa7158",
        "url": "https://assets.editor.p5js.org/5d9f4fa4e89a30001e79d5fc/ba760171-317b-45d0-ba80-33dae968b2ad.ttf",
        "createdAt": "2024-03-26T13:14:29.370Z",
        "updatedAt": "2024-03-26T13:14:29.370Z",
        "id": "65ff0d8d37a62408fdfa7158"
      }
    ],
    "createdAt": "2024-03-23T17:12:46.390Z",
    "updatedAt": "2024-03-26T13:14:29.370Z",
    "id": "c9qPCNJKe"
  },
  {
    "name": "webserial_boilerplate copy",
    "_id": "iLDI7gfWB",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "636191f2e3a21c68c0c1b64b",
          "636191f2e3a21c68c0c1b64c",
          "636191f2e3a21c68c0c1b64d"
        ],
        "fileType": "folder",
        "_id": "636191f2e3a21c68c0c1b64a",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:14:18.727Z",
        "updatedAt": "2022-11-01T17:14:18.727Z",
        "id": "636191f2e3a21c68c0c1b64a"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial communitaion with Arduino \nby Yeseul for Physical Computing, 2022\n\nThis is a boiler plate for using webserial.\nDuplicat this sketch and start adding your code to \"CUSTOMIZE\" part \nto make your serial communication project to use with your Arduino sketch.\n\n\nThe serial communication part is based on \nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// port chooser button:\nlet portButton;\nlet sensor1 = 0\nlet sensor2 = 0\n\n// CUSTOMIZE: change/add variable for incoming serial data:\nlet inData;\n\nfunction setup() {\n   // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    alert(\"WebSerial is supported. Enjoy!\");\n  }\n  // check to see if serial is available:\n   if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton)\n \n  // add serial connect/disconnect listeners from WebSerial API:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  createCanvas(400, 300);\n}\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton('choose port');\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  let options = { baudrate: 9600}; \n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\nfunction serialEvent() {\n  \n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n  let stringFromSerial = serial.readLine()\n  if (stringFromSerial != null) {\n    let value_array = stringFromSerial.trim().split(',')\n    //console.log(value_array)\n    sensor1 = int(value_array[0])\n    sensor2 = int(value_array[1])\n  }\n  \n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}\n\n\nfunction draw() {\n  background(220);\n  // CUSTOMIZE: add your code for receiving/sending data over serial  \n  ellipse(sensor1, sensor2, 5)\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "636191f2e3a21c68c0c1b64c",
        "isSelectedFile": true,
        "createdAt": "2022-11-01T17:14:18.727Z",
        "updatedAt": "2022-11-01T17:14:18.727Z",
        "id": "636191f2e3a21c68c0c1b64c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "636191f2e3a21c68c0c1b64b",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:14:18.727Z",
        "updatedAt": "2022-11-01T17:14:18.727Z",
        "id": "636191f2e3a21c68c0c1b64b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "636191f2e3a21c68c0c1b64d",
        "isSelectedFile": false,
        "createdAt": "2022-11-01T17:14:18.727Z",
        "updatedAt": "2022-11-01T17:14:18.727Z",
        "id": "636191f2e3a21c68c0c1b64d"
      }
    ],
    "createdAt": "2022-11-01T21:38:57.380Z",
    "updatedAt": "2022-11-01T21:38:57.380Z",
    "id": "iLDI7gfWB"
  }
]
